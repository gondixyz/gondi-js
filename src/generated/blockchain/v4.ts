// Generated by @wagmi/cli@1.1.0 on 7/10/2023 at 8:24:47 PM

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AddressManager
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const addressManagerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: '_original', internalType: 'address[]', type: 'address[]' }],
  },
  {
    type: 'error',
    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],
    name: 'AddressAlreadyAddedError',
  },
  {
    type: 'error',
    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],
    name: 'AddressNotAddedError',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'address_added', internalType: 'address', type: 'address', indexed: false }],
    name: 'AddressAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'address_removed', internalType: 'address', type: 'address', indexed: false }],
    name: 'AddressRemovedFromWhitelist',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'address_whitelisted', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'AddressWhitelisted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],
    name: 'add',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],
    name: 'addToWhitelist',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],
    name: 'addressToIndex',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_index', internalType: 'uint16', type: 'uint16' }],
    name: 'indexToAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],
    name: 'isWhitelisted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],
    name: 'removeFromWhitelist',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AuctionLoanLiquidator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const auctionLoanLiquidatorABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'currencyManager', internalType: 'address', type: 'address' },
      { name: 'collectionManager', internalType: 'address', type: 'address' },
      { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },
    ],
  },
  { type: 'error', inputs: [], name: 'AuctionAlreadyInProgressError' },
  {
    type: 'error',
    inputs: [
      { name: '_contract', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'AuctionNotExistsError',
  },
  {
    type: 'error',
    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],
    name: 'AuctionNotOverError',
  },
  {
    type: 'error',
    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],
    name: 'AuctionOverError',
  },
  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },
  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },
  {
    type: 'error',
    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidTriggerFee',
  },
  {
    type: 'error',
    inputs: [{ name: '_loan', internalType: 'address', type: 'address' }],
    name: 'LoanNotAcceptedError',
  },
  {
    type: 'error',
    inputs: [{ name: '_minBid', internalType: 'uint256', type: 'uint256' }],
    name: 'MinBidError',
  },
  {
    type: 'error',
    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],
    name: 'NFTNotOwnedError',
  },
  { type: 'error', inputs: [], name: 'NoBidsError' },
  { type: 'error', inputs: [], name: 'ZeroAddressError' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanContract', internalType: 'address', type: 'address', indexed: false },
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'auctionContract', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'asset', internalType: 'address', type: 'address', indexed: false },
      { name: 'highestBid', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'settler', internalType: 'address', type: 'address', indexed: false },
      { name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionSettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'auctionContract', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newBidder', internalType: 'address', type: 'address', indexed: false },
      { name: 'bid', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'BidPlaced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],
    name: 'LoanContractAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],
    name: 'LoanContractRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'duration', internalType: 'uint96', type: 'uint96', indexed: false },
      { name: 'asset', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'LoanLiquidationStarted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TriggerFeeUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_TRIGGER_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_INCREMENT_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],
    name: 'addLoanContract',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_contract', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getAuction',
    outputs: [
      {
        name: '',
        internalType: 'struct AuctionLoanLiquidator.Auction',
        type: 'tuple',
        components: [
          { name: 'loanAddress', internalType: 'address', type: 'address' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },
          { name: 'highestBidder', internalType: 'address', type: 'address' },
          { name: 'duration', internalType: 'uint96', type: 'uint96' },
          { name: 'asset', internalType: 'address', type: 'address' },
          { name: 'startTime', internalType: 'uint96', type: 'uint96' },
          { name: 'originator', internalType: 'address', type: 'address' },
          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTriggerFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getValidLoanContracts',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      { name: '_contract', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_asset', internalType: 'address', type: 'address' },
      { name: '_duration', internalType: 'uint96', type: 'uint96' },
      { name: '_originator', internalType: 'address', type: 'address' },
    ],
    name: 'liquidateLoan',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_contract', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_bid', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'placeBid',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],
    name: 'removeLoanContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_contract', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_loan', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'settleAuction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],
    name: 'updateTriggerFee',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BaseLoan
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baseLoanABI = [
  { type: 'error', inputs: [], name: 'AddressZeroError' },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'CancelledOrExecutedOfferError',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'CancelledRenegotiationOffer',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'CancelledRenegotiationOfferError',
  },
  { type: 'error', inputs: [], name: 'CannotLiquidateError' },
  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },
  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },
  { type: 'error', inputs: [], name: 'ExpiredLoanError' },
  {
    type: 'error',
    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],
    name: 'ExpiredOfferError',
  },
  {
    type: 'error',
    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],
    name: 'ExpiredRenegotiationOfferError',
  },
  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },
  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },
  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },
  {
    type: 'error',
    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLoanError',
  },
  {
    type: 'error',
    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidProtocolFeeError',
  },
  { type: 'error', inputs: [], name: 'InvalidSignatureError' },
  { type: 'error', inputs: [], name: 'InvalidSignerError' },
  {
    type: 'error',
    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],
    name: 'LiquidatorOnlyError',
  },
  {
    type: 'error',
    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],
    name: 'LoanNotDueError',
  },
  {
    type: 'error',
    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],
    name: 'LoanNotFoundError',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'LowOfferIdError',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'LowRenegotiationOfferIdError',
  },
  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },
  {
    type: 'error',
    inputs: [{ name: '_id', internalType: 'uint256', type: 'uint256' }],
    name: 'NotMintedError',
  },
  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },
  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },
  { type: 'error', inputs: [], name: 'OnlyLenderOrSignerCallableError' },
  { type: 'error', inputs: [], name: 'RepaymentError' },
  {
    type: 'error',
    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],
    name: 'TooEarlyError',
  },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'error',
    inputs: [{ name: '_authorized', internalType: 'address', type: 'address' }],
    name: 'UnauthorizedError',
  },
  { type: 'error', inputs: [], name: 'ZeroAddressError' },
  { type: 'error', inputs: [], name: 'ZeroDurationError' },
  { type: 'error', inputs: [], name: 'ZeroInterestError' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AllOffersCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AllRenegotiationOffersCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'ApprovedSigner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'minimum',
        internalType: 'struct IBaseLoan.ImprovementMinimum',
        type: 'tuple',
        components: [
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'interest', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'ImprovementMinimumUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'LiquidationAuctionDurationUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],
    name: 'LiquidationContractUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'LoanForeclosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'repayment', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'LoanLiquidated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'LoanSentToLiquidator',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'OfferCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'ProtocolFeePendingUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'ProtocolFeeUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'RenegotiationOfferCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'contract_added', internalType: 'address', type: 'address', indexed: false }],
    name: 'WhitelistedCallbackContractAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'contract_removed', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'WhitelistedCallbackContractRemoved',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'FEE_UPDATE_NOTICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'INITIAL_DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PROTOCOL_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'addWhitelistedCallbackContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],
    name: 'approveSigner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelAllOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelAllRenegotiationOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelOffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'cancelOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelRenegotiationOffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'cancelRenegotiationOffers',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'getApprovedSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCollectionManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrencyManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImprovementMinimum',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ImprovementMinimum',
        type: 'tuple',
        components: [
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'interest', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getLiquidationAuctionDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getLiquidator',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPendingProtocolFee',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPendingProtocolFeeSetTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getProtocolFee',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalLoansIssued',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getUsedCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isOfferCancelled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isRenegotiationOfferCancelled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'isWhitelistedCallbackContract',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'lenderMinOfferId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'lenderMinRenegotiationOfferId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralAddress', internalType: 'address', type: 'address' },
      { name: '_collateralTokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      { name: '_repayment', internalType: 'uint256', type: 'uint256' },
      { name: '_loan', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'loanLiquidated',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'removeWhitelistedCallbackContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'setProtocolFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_newMinimum',
        internalType: 'struct IBaseLoan.ImprovementMinimum',
        type: 'tuple',
        components: [
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'interest', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'updateImprovementMinimum',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],
    name: 'updateLiquidationAuctionDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],
    name: 'updateLiquidationContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_newProtocolFee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'updateProtocolFee',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CollectionOracle
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const collectionOracleABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  { type: 'error', inputs: [], name: 'InvalidLengthsError' },
  {
    type: 'error',
    inputs: [
      { name: '_nftAddress', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NftNotFoundError',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: '_collection', internalType: 'address', type: 'address', indexed: false },
      { name: '_asset', internalType: 'address', type: 'address', indexed: false },
      { name: '_price', internalType: 'uint128', type: 'uint128', indexed: false },
      { name: '_timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'PriceUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_nftAddress', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_asset', internalType: 'address', type: 'address' },
    ],
    name: 'getPrice',
    outputs: [
      {
        name: '',
        internalType: 'struct IOracle.PriceUpdate',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'uint128', type: 'uint128' },
          { name: 'updatedTimestamp', internalType: 'uint128', type: 'uint128' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'collections', internalType: 'address[]', type: 'address[]' },
      { name: 'assets', internalType: 'address[]', type: 'address[]' },
      { name: 'price', internalType: 'uint128[]', type: 'uint128[]' },
      { name: 'timestamp', internalType: 'uint128', type: 'uint128' },
    ],
    name: 'updatePrices',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC165
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc165ABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'nonces',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'deadline', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'permit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721ABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC721TokenReceiver
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721TokenReceiverABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBaseLoan
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBaseLoanABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'addWhitelistedCallbackContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],
    name: 'approveSigner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelAllOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelAllRenegotiationOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelOffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'cancelOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelRenegotiationOffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'cancelRenegotiationOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_lender', internalType: 'address', type: 'address' }],
    name: 'getApprovedSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'getLiquidationAuctionDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'getLiquidator',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPendingProtocolFee',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPendingProtocolFeeSetTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getProtocolFee',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalLoansIssued',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'isWhitelistedCallbackContract',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralAddress', internalType: 'address', type: 'address' },
      { name: '_collateralTokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      { name: '_repayment', internalType: 'uint256', type: 'uint256' },
      { name: '_loan', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'loanLiquidated',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'removeWhitelistedCallbackContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'setProtocolFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],
    name: 'updateLiquidationAuctionDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],
    name: 'updateLiquidationContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_newProtocolFee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'updateProtocolFee',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBaseOfferValidator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBaseOfferValidatorABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_offer',
        internalType: 'struct IBaseLoan.LoanOffer',
        type: 'tuple',
        components: [
          { name: 'offerId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'capacity', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'validators',
            internalType: 'struct IBaseLoan.OfferValidator[]',
            type: 'tuple[]',
            components: [
              { name: 'validator', internalType: 'address', type: 'address' },
              { name: 'arguments', internalType: 'bytes', type: 'bytes' },
            ],
          },
        ],
      },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'validateOffer',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC1271
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc1271ABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'hash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'signature', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'isValidSignature',
    outputs: [{ name: 'magicValue', internalType: 'bytes4', type: 'bytes4' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC165
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc165ABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ILoanLiquidator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iLoanLiquidatorABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      { name: '_contract', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_asset', internalType: 'address', type: 'address' },
      { name: '_duration', internalType: 'uint96', type: 'uint96' },
      { name: '_originator', internalType: 'address', type: 'address' },
    ],
    name: 'liquidateLoan',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMultiSourceLoan
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iMultiSourceLoanABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_loanOffer',
        internalType: 'struct IBaseLoan.LoanOffer',
        type: 'tuple',
        components: [
          { name: 'offerId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'capacity', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'validators',
            internalType: 'struct IBaseLoan.OfferValidator[]',
            type: 'tuple[]',
            components: [
              { name: 'validator', internalType: 'address', type: 'address' },
              { name: 'arguments', internalType: 'bytes', type: 'bytes' },
            ],
          },
        ],
      },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_lenderOfferSignature', internalType: 'bytes', type: 'bytes' },
      { name: '_withCallback', internalType: 'bool', type: 'bool' },
    ],
    name: 'emitLoan',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      {
        name: '',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMaxSources',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
    name: 'liquidateLoan',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_renegotiationOffer',
        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',
        type: 'tuple',
        components: [
          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },
        ],
      },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'refinanceFull',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      {
        name: '',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_renegotiationOffer',
        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',
        type: 'tuple',
        components: [
          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },
        ],
      },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
    name: 'refinancePartial',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      {
        name: '',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_renegotiationOffer',
        internalType: 'struct IMultiSourceLoan.RenegotiationOffer[]',
        type: 'tuple[]',
        components: [
          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },
        ],
      },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan[]',
        type: 'tuple[]',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
    name: 'refinancePartialBatch',
    outputs: [
      { name: 'loanId', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: 'loan',
        internalType: 'struct IMultiSourceLoan.Loan[]',
        type: 'tuple[]',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralTo', internalType: 'address', type: 'address' },
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
      { name: '_withCallback', internalType: 'bool', type: 'bool' },
    ],
    name: 'repayLoan',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'maxSources', internalType: 'uint8', type: 'uint8' }],
    name: 'setMaxSources',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ILoanCallback
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iLoanCallbackABI = [
  { type: 'error', inputs: [], name: 'InvalidCallbackError' },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_loan', internalType: 'bytes', type: 'bytes' }],
    name: 'afterNFTTransfer',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_loan', internalType: 'bytes', type: 'bytes' }],
    name: 'afterPrincipalTransfer',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMulticall3
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iMulticall3ABI = [
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'calls',
        internalType: 'struct IMulticall3.Call[]',
        type: 'tuple[]',
        components: [
          { name: 'target', internalType: 'address', type: 'address' },
          { name: 'callData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
    name: 'aggregate',
    outputs: [
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'returnData', internalType: 'bytes[]', type: 'bytes[]' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'calls',
        internalType: 'struct IMulticall3.Call3[]',
        type: 'tuple[]',
        components: [
          { name: 'target', internalType: 'address', type: 'address' },
          { name: 'allowFailure', internalType: 'bool', type: 'bool' },
          { name: 'callData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
    name: 'aggregate3',
    outputs: [
      {
        name: 'returnData',
        internalType: 'struct IMulticall3.Result[]',
        type: 'tuple[]',
        components: [
          { name: 'success', internalType: 'bool', type: 'bool' },
          { name: 'returnData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'calls',
        internalType: 'struct IMulticall3.Call3Value[]',
        type: 'tuple[]',
        components: [
          { name: 'target', internalType: 'address', type: 'address' },
          { name: 'allowFailure', internalType: 'bool', type: 'bool' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'callData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
    name: 'aggregate3Value',
    outputs: [
      {
        name: 'returnData',
        internalType: 'struct IMulticall3.Result[]',
        type: 'tuple[]',
        components: [
          { name: 'success', internalType: 'bool', type: 'bool' },
          { name: 'returnData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'calls',
        internalType: 'struct IMulticall3.Call[]',
        type: 'tuple[]',
        components: [
          { name: 'target', internalType: 'address', type: 'address' },
          { name: 'callData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
    name: 'blockAndAggregate',
    outputs: [
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: 'returnData',
        internalType: 'struct IMulticall3.Result[]',
        type: 'tuple[]',
        components: [
          { name: 'success', internalType: 'bool', type: 'bool' },
          { name: 'returnData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBasefee',
    outputs: [{ name: 'basefee', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getBlockHash',
    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBlockNumber',
    outputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getChainId',
    outputs: [{ name: 'chainid', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentBlockCoinbase',
    outputs: [{ name: 'coinbase', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentBlockDifficulty',
    outputs: [{ name: 'difficulty', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentBlockGasLimit',
    outputs: [{ name: 'gaslimit', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentBlockTimestamp',
    outputs: [{ name: 'timestamp', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'getEthBalance',
    outputs: [{ name: 'balance', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getLastBlockHash',
    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },
      {
        name: 'calls',
        internalType: 'struct IMulticall3.Call[]',
        type: 'tuple[]',
        components: [
          { name: 'target', internalType: 'address', type: 'address' },
          { name: 'callData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
    name: 'tryAggregate',
    outputs: [
      {
        name: 'returnData',
        internalType: 'struct IMulticall3.Result[]',
        type: 'tuple[]',
        components: [
          { name: 'success', internalType: 'bool', type: 'bool' },
          { name: 'returnData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },
      {
        name: 'calls',
        internalType: 'struct IMulticall3.Call[]',
        type: 'tuple[]',
        components: [
          { name: 'target', internalType: 'address', type: 'address' },
          { name: 'callData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
    name: 'tryBlockAndAggregate',
    outputs: [
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: 'returnData',
        internalType: 'struct IMulticall3.Result[]',
        type: 'tuple[]',
        components: [
          { name: 'success', internalType: 'bool', type: 'bool' },
          { name: 'returnData', internalType: 'bytes', type: 'bytes' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IOracle
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iOracleABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_nftAddress', internalType: 'address', type: 'address' },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_asset', internalType: 'address', type: 'address' },
    ],
    name: 'getPrice',
    outputs: [
      {
        name: '',
        internalType: 'struct IOracle.PriceUpdate',
        type: 'tuple',
        components: [
          { name: 'price', internalType: 'uint128', type: 'uint128' },
          { name: 'updatedTimestamp', internalType: 'uint128', type: 'uint128' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MultiSourceCommons
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const multiSourceCommonsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],
    name: 'log',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],
    name: 'log_address',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],
    name: 'log_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],
    name: 'log_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],
    name: 'log_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],
    name: 'log_bytes',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],
    name: 'log_bytes32',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],
    name: 'log_int',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'log_named_address',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'log_named_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },
    ],
    name: 'log_named_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },
    ],
    name: 'log_named_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'log_named_bytes',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'log_named_bytes32',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },
      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'log_named_decimal_int',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'log_named_decimal_uint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },
    ],
    name: 'log_named_int',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'log_named_string',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'log_named_uint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],
    name: 'log_string',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'log_uint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],
    name: 'logs',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'IS_TEST',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'failed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'setUp', outputs: [] },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MultiSourceLoan
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const multiSourceLoanABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'loanLiquidator', internalType: 'address', type: 'address' },
      {
        name: 'protocolFee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
      { name: 'currencyManager', internalType: 'address', type: 'address' },
      { name: 'collectionManager', internalType: 'address', type: 'address' },
      { name: 'maxSources', internalType: 'uint8', type: 'uint8' },
    ],
  },
  { type: 'error', inputs: [], name: 'AddressZeroError' },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'CancelledOrExecutedOfferError',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'CancelledRenegotiationOffer',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'CancelledRenegotiationOfferError',
  },
  { type: 'error', inputs: [], name: 'CannotLiquidateError' },
  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },
  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },
  { type: 'error', inputs: [], name: 'ExpiredLoanError' },
  {
    type: 'error',
    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],
    name: 'ExpiredOfferError',
  },
  {
    type: 'error',
    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],
    name: 'ExpiredRenegotiationOfferError',
  },
  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },
  { type: 'error', inputs: [], name: 'InvalidCallbackError' },
  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },
  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },
  {
    type: 'error',
    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidLoanError',
  },
  {
    type: 'error',
    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],
    name: 'InvalidProtocolFeeError',
  },
  { type: 'error', inputs: [], name: 'InvalidRenegotiationOfferError' },
  { type: 'error', inputs: [], name: 'InvalidSignatureError' },
  { type: 'error', inputs: [], name: 'InvalidSignerError' },
  { type: 'error', inputs: [], name: 'LengthMismatchError' },
  {
    type: 'error',
    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],
    name: 'LiquidatorOnlyError',
  },
  { type: 'error', inputs: [], name: 'LoanExpiredError' },
  {
    type: 'error',
    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],
    name: 'LoanNotDueError',
  },
  {
    type: 'error',
    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],
    name: 'LoanNotFoundError',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'LowOfferIdError',
  },
  {
    type: 'error',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'LowRenegotiationOfferIdError',
  },
  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },
  {
    type: 'error',
    inputs: [{ name: '_id', internalType: 'uint256', type: 'uint256' }],
    name: 'NotMintedError',
  },
  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },
  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },
  { type: 'error', inputs: [], name: 'OnlyLenderOrSignerCallableError' },
  { type: 'error', inputs: [], name: 'PartialOfferCannotChangeDurationError' },
  { type: 'error', inputs: [], name: 'PartialOfferCannotHaveFeeError' },
  { type: 'error', inputs: [], name: 'RefinanceFullError' },
  { type: 'error', inputs: [], name: 'RepaymentError' },
  {
    type: 'error',
    inputs: [
      { name: 'sourcePrincipal', internalType: 'uint256', type: 'uint256' },
      { name: 'loanPrincipal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'TargetPrincipalTooLowError',
  },
  {
    type: 'error',
    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],
    name: 'TooEarlyError',
  },
  {
    type: 'error',
    inputs: [{ name: 'sources', internalType: 'uint8', type: 'uint8' }],
    name: 'TooManySourcesError',
  },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'error',
    inputs: [{ name: '_authorized', internalType: 'address', type: 'address' }],
    name: 'UnauthorizedError',
  },
  { type: 'error', inputs: [], name: 'ZeroAddressError' },
  { type: 'error', inputs: [], name: 'ZeroDurationError' },
  { type: 'error', inputs: [], name: 'ZeroInterestError' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AllOffersCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AllRenegotiationOffersCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'ApprovedSigner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'minimum',
        internalType: 'struct IBaseLoan.ImprovementMinimum',
        type: 'tuple',
        components: [
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'interest', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'ImprovementMinimumUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'LiquidationAuctionDurationUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],
    name: 'LiquidationContractUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
        indexed: false,
      },
      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'LoanEmitted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'LoanForeclosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'repayment', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'LoanLiquidated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'oldLoanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
        indexed: false,
      },
      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'LoanRefinanced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'totalRepayment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'LoanRepaid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'LoanSentToLiquidator',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'newMax', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'MaxSourcesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'OfferCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'ProtocolFeePendingUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'ProtocolFeeUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'lender', internalType: 'address', type: 'address', indexed: false },
      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'RenegotiationOfferCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'contract_added', internalType: 'address', type: 'address', indexed: false }],
    name: 'WhitelistedCallbackContractAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'contract_removed', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'WhitelistedCallbackContractRemoved',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'FEE_UPDATE_NOTICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'INITIAL_DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PROTOCOL_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'addWhitelistedCallbackContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],
    name: 'approveSigner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelAllOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelAllRenegotiationOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelOffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'cancelOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'cancelRenegotiationOffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'cancelRenegotiationOffers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_loanOffer',
        internalType: 'struct IBaseLoan.LoanOffer',
        type: 'tuple',
        components: [
          { name: 'offerId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'capacity', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'validators',
            internalType: 'struct IBaseLoan.OfferValidator[]',
            type: 'tuple[]',
            components: [
              { name: 'validator', internalType: 'address', type: 'address' },
              { name: 'arguments', internalType: 'bytes', type: 'bytes' },
            ],
          },
        ],
      },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_lenderOfferSignature', internalType: 'bytes', type: 'bytes' },
      { name: '_withCallback', internalType: 'bool', type: 'bool' },
    ],
    name: 'emitLoan',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      {
        name: '',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'getApprovedSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCollectionManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrencyManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getImprovementMinimum',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ImprovementMinimum',
        type: 'tuple',
        components: [
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'interest', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getLiquidationAuctionDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getLiquidator',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],
    name: 'getLoanHash',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMaxSources',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_loanPrincipal', internalType: 'uint256', type: 'uint256' }],
    name: 'getMinSourcePrincipal',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPendingProtocolFee',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPendingProtocolFeeSetTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getProtocolFee',
    outputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalLoansIssued',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_lender', internalType: 'address', type: 'address' },
      { name: '_offerId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getUsedCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isOfferCancelled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isRenegotiationOfferCancelled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'isWhitelistedCallbackContract',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'lenderMinOfferId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'lenderMinRenegotiationOfferId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
    name: 'liquidateLoan',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralAddress', internalType: 'address', type: 'address' },
      { name: '_collateralTokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      { name: '_repayment', internalType: 'uint256', type: 'uint256' },
      { name: '_loan', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'loanLiquidated',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_renegotiationOffer',
        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',
        type: 'tuple',
        components: [
          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },
        ],
      },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'refinanceFull',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      {
        name: '',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_renegotiationOffer',
        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',
        type: 'tuple',
        components: [
          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },
        ],
      },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
    name: 'refinancePartial',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      {
        name: '',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_renegotiationOffer',
        internalType: 'struct IMultiSourceLoan.RenegotiationOffer[]',
        type: 'tuple[]',
        components: [
          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },
          { name: 'loanId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },
        ],
      },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan[]',
        type: 'tuple[]',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
    name: 'refinancePartialBatch',
    outputs: [
      { name: 'loanId', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: 'loans',
        internalType: 'struct IMultiSourceLoan.Loan[]',
        type: 'tuple[]',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],
    name: 'removeWhitelistedCallbackContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralTo', internalType: 'address', type: 'address' },
      { name: '_loanId', internalType: 'uint256', type: 'uint256' },
      {
        name: '_loan',
        internalType: 'struct IMultiSourceLoan.Loan',
        type: 'tuple',
        components: [
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'startTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'source',
            internalType: 'struct IMultiSourceLoan.Source[]',
            type: 'tuple[]',
            components: [
              { name: 'loanId', internalType: 'uint256', type: 'uint256' },
              { name: 'lender', internalType: 'address', type: 'address' },
              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },
              { name: 'startTime', internalType: 'uint256', type: 'uint256' },
              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
            ],
          },
        ],
      },
      { name: '_withCallback', internalType: 'bool', type: 'bool' },
    ],
    name: 'repayLoan',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'maxSources', internalType: 'uint8', type: 'uint8' }],
    name: 'setMaxSources',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'setProtocolFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_newMinimum',
        internalType: 'struct IBaseLoan.ImprovementMinimum',
        type: 'tuple',
        components: [
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'interest', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'updateImprovementMinimum',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],
    name: 'updateLiquidationAuctionDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],
    name: 'updateLiquidationContract',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_newProtocolFee',
        internalType: 'struct IBaseLoan.ProtocolFee',
        type: 'tuple',
        components: [
          { name: 'recipient', internalType: 'address', type: 'address' },
          { name: 'fraction', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'updateProtocolFee',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NftPackedListValidator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const nftPackedListValidatorABI = [
  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },
  {
    type: 'error',
    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],
    name: 'InvalidBytesPerTokenIdError',
  },
  {
    type: 'error',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenIdNotFoundError',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.LoanOffer',
        type: 'tuple',
        components: [
          { name: 'offerId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'capacity', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'validators',
            internalType: 'struct IBaseLoan.OfferValidator[]',
            type: 'tuple[]',
            components: [
              { name: 'validator', internalType: 'address', type: 'address' },
              { name: 'arguments', internalType: 'bytes', type: 'bytes' },
            ],
          },
        ],
      },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'validateOffer',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NftBitVectorValidator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const nftBitVectorValidatorABI = [
  {
    type: 'error',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'BitVectorLengthExceededError',
  },
  {
    type: 'error',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenIdNotFoundError',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.LoanOffer',
        type: 'tuple',
        components: [
          { name: 'offerId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'capacity', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'validators',
            internalType: 'struct IBaseLoan.OfferValidator[]',
            type: 'tuple[]',
            components: [
              { name: 'validator', internalType: 'address', type: 'address' },
              { name: 'arguments', internalType: 'bytes', type: 'bytes' },
            ],
          },
        ],
      },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'validateOffer',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RangeValidator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const rangeValidatorABI = [
  {
    type: 'error',
    inputs: [
      { name: 'min', internalType: 'uint256', type: 'uint256' },
      { name: 'max', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'TokenIdOutOfRangeError',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: '',
        internalType: 'struct IBaseLoan.LoanOffer',
        type: 'tuple',
        components: [
          { name: 'offerId', internalType: 'uint256', type: 'uint256' },
          { name: 'lender', internalType: 'address', type: 'address' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'borrower', internalType: 'address', type: 'address' },
          { name: 'capacity', internalType: 'uint256', type: 'uint256' },
          { name: 'signer', internalType: 'address', type: 'address' },
          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },
          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },
          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'principalAddress', internalType: 'address', type: 'address' },
          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },
          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },
          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },
          { name: 'duration', internalType: 'uint256', type: 'uint256' },
          {
            name: 'validators',
            internalType: 'struct IBaseLoan.OfferValidator[]',
            type: 'tuple[]',
            components: [
              { name: 'validator', internalType: 'address', type: 'address' },
              { name: 'arguments', internalType: 'bytes', type: 'bytes' },
            ],
          },
        ],
      },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'validateOffer',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Owned
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ownedABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SampleCollection
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const sampleCollectionABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],
    name: 'mintNext',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SampleToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const sampleTokenABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'nonces',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'deadline', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'permit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TestLoanSetup
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const testLoanSetupABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],
    name: 'log',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],
    name: 'log_address',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],
    name: 'log_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],
    name: 'log_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],
    name: 'log_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],
    name: 'log_bytes',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],
    name: 'log_bytes32',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],
    name: 'log_int',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'log_named_address',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'log_named_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },
    ],
    name: 'log_named_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },
    ],
    name: 'log_named_array',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'log_named_bytes',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'log_named_bytes32',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },
      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'log_named_decimal_int',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'log_named_decimal_uint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },
    ],
    name: 'log_named_int',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'log_named_string',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'string', type: 'string', indexed: false },
      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'log_named_uint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],
    name: 'log_string',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'log_uint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],
    name: 'logs',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'IS_TEST',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'failed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ValidatorHelpers
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const validatorHelpersABI = [
  {
    type: 'error',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'BitVectorLengthExceededError',
  },
  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },
  {
    type: 'error',
    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],
    name: 'InvalidBytesPerTokenIdError',
  },
  {
    type: 'error',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenIdNotFoundError',
  },
] as const
