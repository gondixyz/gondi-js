{
  "version": 3,
  "sources": ["../src/gondi.ts", "../src/api/index.ts", "../src/api/client.ts", "../src/api/auth.ts", "../src/generated/graphql/index.ts", "../src/api/sdk.ts", "../src/blockchain.ts", "../src/utils/types.ts", "../src/contracts/index.ts", "../src/generated/blockchain/oldErc721.ts", "../src/generated/blockchain/v5.ts", "../src/utils/string.ts", "../src/contracts/AllV4.ts", "../src/deploys.ts", "../src/generated/blockchain/v4.ts", "../src/contracts/BaseContract.ts", "../src/contracts/AllV5.ts", "../src/generated/blockchain/v6.ts", "../src/utils/number.ts", "../src/utils/dates.ts", "../src/contracts/AllV6.ts", "../src/contracts/CryptoPunks.ts", "../src/generated/blockchain/cryptopunks.ts", "../src/contracts/LeverageV5.ts", "../src/contracts/MslV4.ts", "../src/utils/loan.ts", "../src/contracts/MslV5.ts", "../src/contracts/MslV6.ts", "../src/contracts/Seaport.ts", "../src/generated/blockchain/seaport.ts", "../src/contracts/UserVaultV5.ts", "../src/contracts/UserVaultV6.ts", "../src/model.ts", "../src/reservoir/Reservoir.ts", "../src/errors.ts", "../src/reservoir/utils.ts", "../src/utils/promises.ts"],
  "sourcesContent": ["import {\n  Address,\n  Chain,\n  createPublicClient,\n  createTransport,\n  Hash,\n  Hex,\n  PublicClient,\n  Transport,\n} from 'viem';\n\nimport { Api, Props as ApiProps } from '@/api';\nimport { Auction, filterLogs, LoanV5, OfferV5, zeroAddress, zeroHash, zeroHex } from '@/blockchain';\nimport { Contracts, Wallet } from '@/contracts';\nimport { getCurrencies } from '@/deploys';\nimport { MarketplaceEnum, OffersSortField, Ordering } from '@/generated/graphql';\nimport * as model from '@/model';\nimport { Reservoir } from '@/reservoir/Reservoir';\nimport { isNative, SeaportOrder } from '@/reservoir/utils';\nimport {\n  generateFakeRenegotiationInput,\n  loanToMslLoan,\n  LoanToMslLoanType,\n  renegotiationToMslRenegotiation,\n} from '@/utils/loan';\nimport { min } from '@/utils/number';\nimport { FULFILLED, REJECTED } from '@/utils/promises';\nimport { areSameAddress, NATIVE_MARKETPLACE } from '@/utils/string';\nimport { OptionalNullable } from '@/utils/types';\n\nexport class Gondi {\n  contracts: Contracts;\n  wallet: Wallet;\n  bcClient: PublicClient<Transport, Chain>;\n  api: Api;\n  reservoir: Reservoir;\n  defaults: { Msl: Address; UserVault: Address };\n\n  constructor({ wallet, apiClient, reservoirBaseApiUrl }: GondiProps) {\n    this.wallet = wallet;\n    this.bcClient = createPublicClient({\n      chain: wallet.chain,\n      transport: () => createTransport(wallet.transport),\n    });\n    this.contracts = new Contracts(this.bcClient, wallet);\n    this.defaults = {\n      Msl: this.contracts.MultiSourceLoanV6.address,\n      UserVault: this.contracts.UserVaultV5.address, // V6 UserVault contract will not be used\n    };\n    this.api = new Api({ wallet, apiClient });\n    this.reservoir = new Reservoir({\n      baseApiUrl: reservoirBaseApiUrl,\n      wallet,\n      Seaport: this.contracts.Seaport,\n      CryptoPunks: this.contracts.CryptoPunks,\n    });\n  }\n\n  async makeSingleNftOffer(offer: model.SingleNftOfferInput) {\n    return await this._makeSingleNftOffer(offer);\n  }\n\n  /** @internal */\n  async _makeSingleNftOffer(offer: model.SingleNftOfferInput, mslContractAddress?: Address) {\n    const contract = this.contracts.Msl(mslContractAddress ?? this.defaults.Msl);\n    const contractAddress = contract.address;\n\n    const offerInput = {\n      ...offer,\n      lenderAddress: offer.lenderAddress ? offer.lenderAddress : this.wallet.account?.address,\n      signerAddress: this.wallet.account?.address,\n      borrowerAddress: offer.borrowerAddress ?? zeroAddress,\n      requiresLiquidation: !!offer.requiresLiquidation,\n      contractAddress,\n      offerValidators: [], // This is ignored by the API but it was required in the mutation\n    };\n\n    const response = await this.api.generateSingleNftOfferHash({ offerInput });\n\n    const { offerHash, offerId, validators, lenderAddress, signerAddress, borrowerAddress } =\n      response.offer;\n    const collateralAddress = response.offer.nft.collection?.contractData?.contractAddress;\n\n    if (collateralAddress === undefined) throw new Error('Invalid nft');\n\n    const structToSign = {\n      ...offerInput,\n      lender: lenderAddress ?? offerInput.lenderAddress,\n      signer: signerAddress ?? offerInput.signerAddress,\n      borrower: borrowerAddress ?? offerInput.borrowerAddress,\n      nftCollateralTokenId: response.offer.nft.tokenId,\n      nftCollateralAddress: collateralAddress,\n      validators,\n      offerId,\n    };\n\n    const signature = await contract.signOffer({ structToSign });\n\n    const signedOffer = {\n      ...offerInput,\n      offerValidators: validators.map((validator) => ({\n        arguments: validator.arguments,\n        validator: validator.validator,\n      })),\n      offerHash: offerHash ?? zeroHash,\n      offerId,\n      signature,\n    };\n\n    return await this.api.saveSingleNftOffer(signedOffer);\n  }\n\n  async makeCollectionOffer(offer: model.CollectionOfferInput) {\n    return await this._makeCollectionOffer(offer);\n  }\n\n  /** @internal */\n  async _makeCollectionOffer(offer: model.CollectionOfferInput, mslContractAddress?: Address) {\n    const contract = this.contracts.Msl(mslContractAddress ?? this.defaults.Msl);\n    const contractAddress = contract.address;\n\n    const offerInput = {\n      ...offer,\n      lenderAddress: offer.lenderAddress ? offer.lenderAddress : this.wallet.account?.address,\n      signerAddress: this.wallet.account?.address,\n      borrowerAddress: offer.borrowerAddress ?? zeroAddress,\n      requiresLiquidation: !!offer.requiresLiquidation,\n      contractAddress,\n      offerValidators: [\n        // This is ignored by the API but it was required in the mutation\n        {\n          validator: zeroAddress,\n          arguments: zeroHex,\n        },\n      ],\n    };\n    const response = await this.api.generateCollectionOfferHash({ offerInput });\n    const collateralAddress = response.offer.collection.contractData?.contractAddress;\n\n    if (collateralAddress === undefined) throw new Error('Invalid collection');\n\n    const { offerHash, offerId, validators, lenderAddress, signerAddress, borrowerAddress } =\n      response.offer;\n    const structToSign = {\n      ...offerInput,\n      lender: lenderAddress ?? offerInput.lenderAddress,\n      signer: signerAddress ?? offerInput.signerAddress,\n      borrower: borrowerAddress ?? offerInput.borrowerAddress,\n      nftCollateralTokenId: 0n,\n      nftCollateralAddress: collateralAddress,\n      validators,\n      offerId,\n    };\n\n    const signature = await contract.signOffer({ structToSign });\n\n    const signedOffer = {\n      ...offerInput,\n      offerValidators: validators.map((validator) => ({\n        arguments: validator.arguments,\n        validator: validator.validator,\n      })),\n      offerHash: offerHash ?? zeroHash,\n      offerId,\n      signature,\n    };\n    return await this.api.saveCollectionOffer(signedOffer);\n  }\n\n  async makeSaleOffer({\n    collectionContractAddress,\n    tokenId,\n    price,\n    expirationTime,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    price: bigint;\n    expirationTime: bigint;\n  }) {\n    const {\n      parameters: {\n        totalOriginalConsiderationItems: _totalOriginalConsiderationItems,\n        ...saleOffer\n      },\n      signature,\n    } = await this.contracts.Seaport.generateOrderFromSaleOffer({\n      collectionContractAddress,\n      tokenId,\n      price,\n      expirationTime,\n    });\n    return this.api.saveSignedSaleOffer({\n      offer: { ...saleOffer, signature },\n    });\n  }\n\n  async cancelSaleOffer({ saleOffer }: { saleOffer: SeaportOrder }) {\n    return this.contracts.Seaport.cancel({ orderComponents: saleOffer });\n  }\n\n  async cancelOffer({ id, contractAddress }: { id: bigint; contractAddress: Address }) {\n    return this.contracts.Msl(contractAddress).cancelOffer({\n      id,\n    });\n  }\n\n  async cancelAllOffers({ minId, contractAddress }: { minId: bigint; contractAddress: Address }) {\n    return this.contracts.Msl(contractAddress).cancelAllOffers({\n      minId,\n    });\n  }\n\n  async hideOffer({ id, contractAddress }: { id: bigint; contractAddress: Address }) {\n    return this.api.hideOffer({ contract: contractAddress, id: id.toString() });\n  }\n\n  async unhideOffer({ id, contractAddress }: { id: bigint; contractAddress: Address }) {\n    return this.api.unhideOffer({\n      contract: contractAddress,\n      id: id.toString(),\n    });\n  }\n\n  async makeRefinanceOffer({\n    renegotiation,\n    contractAddress,\n    skipSignature,\n  }: {\n    renegotiation: model.RenegotiationInput;\n    contractAddress: Address;\n    skipSignature?: boolean;\n  }) {\n    const renegotiationInput = {\n      lenderAddress: this.wallet.account?.address,\n      signerAddress: this.wallet.account?.address,\n      ...renegotiation,\n      targetPrincipal: renegotiation.targetPrincipal ?? [],\n      trancheIndex: renegotiation.trancheIndex ?? [],\n    };\n    const response = await this.api.generateRenegotiationOfferHash({\n      renegotiationInput,\n    });\n\n    const { renegotiationId, offerHash, loanId, lenderAddress, signerAddress } = response.offer;\n\n    if (skipSignature) {\n      return {\n        ...renegotiationInput,\n        offerHash: offerHash ?? zeroHash,\n        signature: zeroHash,\n        renegotiationId,\n      };\n    }\n\n    const structToSign = {\n      ...renegotiationInput,\n      fee: renegotiationInput.feeAmount,\n      lender: lenderAddress ?? renegotiationInput.lenderAddress,\n      signer: signerAddress ?? renegotiationInput.signerAddress ?? zeroAddress,\n      strictImprovement: false,\n      loanId,\n      renegotiationId,\n    };\n\n    const contract = this.contracts.Msl(contractAddress);\n    const signature = await contract.signRenegotiationOffer({ structToSign });\n\n    const renegotiationOffer = {\n      ...renegotiationInput,\n      signature,\n      offerHash: offerHash ?? zeroHash,\n      renegotiationId,\n    };\n    return await this.api.saveRefinanceOffer(renegotiationOffer);\n  }\n\n  async cancelRefinanceOffer({ id, contractAddress }: { id: bigint; contractAddress: Address }) {\n    return this.contracts.Msl(contractAddress).cancelRefinanceOffer({\n      id,\n    });\n  }\n\n  async hideRenegotiationOffer({ id, contractAddress }: { id: bigint; contractAddress: Address }) {\n    return this.api.hideRenegotiationOffer({\n      id: id.toString(),\n      contractAddress,\n    });\n  }\n\n  async unhideRenegotiationOffer({\n    id,\n    contractAddress,\n  }: {\n    id: bigint;\n    contractAddress: Address;\n  }) {\n    return this.api.unhideRenegotiationOffer({\n      id: id.toString(),\n      contractAddress,\n    });\n  }\n\n  async hideSaleOffer({ id }: { id: string }) {\n    return this.api.hideSaleOffer({ id });\n  }\n\n  async unhideSaleOffer({ id }: { id: string }) {\n    return this.api.unhideSaleOffer({ id });\n  }\n\n  async cancelAllRenegotiations({\n    minId,\n    contractAddress,\n  }: {\n    minId: bigint;\n    contractAddress: Address;\n  }) {\n    return this.contracts.Msl(contractAddress).cancelAllRenegotiations({\n      minId,\n    });\n  }\n\n  offerExecutionFromOffers(\n    offers: OfferFromExecutionOffer[],\n    amounts?: bigint[],\n  ): EmitLoanArgs['offerExecution'] {\n    return offers.map((offer, idx) => {\n      const { signature, lenderAddress, borrowerAddress, offerHash } = offer;\n      if (!(signature && lenderAddress && borrowerAddress && offerHash))\n        throw new Error('Misisng required field for offer');\n      return {\n        offer: {\n          ...offer,\n          offerHash,\n          lenderAddress,\n          lender: lenderAddress,\n          borrowerAddress,\n          borrower: borrowerAddress,\n          signature,\n          maxSeniorRepayment: offer.maxSeniorRepayment ?? 0n,\n        },\n        amount: amounts?.[idx] ?? offer.principalAmount,\n        lenderOfferSignature: signature,\n      };\n    });\n  }\n\n  async emitLoan(args: EmitLoanArgs) {\n    const contractAddress = args.offerExecution[0].offer.contractAddress;\n    return this.contracts.Msl(contractAddress).emitLoan(args);\n  }\n\n  async refinanceFromOffers({\n    loan,\n    loanId,\n    executionData,\n  }: {\n    loan: LoanToMslLoanType;\n    loanId: bigint;\n    executionData: EmitLoanArgs;\n  }) {\n    return this.contracts.Msl(loan.contractAddress).refinanceFromOffers({\n      loan: loanToMslLoan(loan),\n      loanId,\n      executionData,\n    });\n  }\n\n  async repayLoan({\n    loan,\n    loanId,\n    nftReceiver,\n  }: {\n    loan: LoanToMslLoanType;\n    loanId: bigint;\n    nftReceiver?: Address;\n  }) {\n    return this.contracts.Msl(loan.contractAddress).repayLoan({\n      loan: loanToMslLoan(loan),\n      nftReceiver,\n      loanId,\n    });\n  }\n\n  async offers({\n    limit = 20,\n    cursor,\n    sortBy = { field: OffersSortField.CreatedDate, order: Ordering.Desc },\n    filterBy = {},\n  }: model.ListOffersProps) {\n    const { status, nft, collection, borrower, ...fields } = filterBy;\n    return await this.api.listOffers({\n      first: limit,\n      after: cursor,\n      sortBy,\n      statuses: status,\n      nfts: nft ? [nft] : [],\n      collections: collection ? [collection] : [],\n      borrowerAddress: borrower,\n      ...fields,\n    });\n  }\n\n  async loans({ limit = 20, cursor, ...rest }: model.ListLoansProps) {\n    return await this.api.listLoans({\n      first: limit,\n      after: cursor,\n      ...rest,\n    });\n  }\n\n  async list({ nft }: { nft: number }) {\n    return await this.api.listNft({ nftId: nft });\n  }\n\n  async unlist({ nft }: { nft: number }) {\n    return await this.api.unlistNft({ nftId: nft });\n  }\n\n  async listings({\n    collections,\n    user,\n    marketPlaces = [MarketplaceEnum.Gondi],\n    limit = 20,\n    cursor,\n  }: model.ListListingsProps) {\n    return await this.api.listListings({\n      collections,\n      userFilter: user,\n      marketplaceNames: marketPlaces,\n      after: cursor,\n      first: limit,\n    });\n  }\n\n  async nftId(\n    props: (\n      | { slug: string; contractAddress?: never }\n      | { slug?: never; contractAddress: Address }\n    ) & { tokenId: bigint },\n  ) {\n    let result;\n    if (props.slug) result = await this.api.nftIdBySlugTokenId(props);\n    if (props.contractAddress) result = await this.api.nftIdByContractAddressAndTokenId(props);\n    if (!result?.nft) {\n      throw new Error(`invalid nft ${props}`);\n    }\n    return Number(result.nft.id);\n  }\n\n  async collections(props: { statsCurrency?: Address }) {\n    const result = await this.api.collections({ currency: props.statsCurrency ?? zeroAddress });\n    const { edges: collections, pageInfo } = result.collections;\n    return { collections: collections.map((edge) => edge.node), pageInfo };\n  }\n\n  async collectionId(props: { slug: string; contractAddress?: never }): Promise<number>;\n  async collectionId(props: { slug?: never; contractAddress: Address }): Promise<number[]>;\n  async collectionId(\n    props:\n      | {\n          slug: string;\n          contractAddress?: never;\n        }\n      | {\n          slug?: never;\n          contractAddress: Address;\n        },\n  ) {\n    let result;\n    if (props.slug) {\n      result = await this.api.collectionIdBySlug(props);\n      if (!result?.collection) {\n        throw new Error(`invalid collection ${props}`);\n      }\n      return Number(result.collection.id);\n    }\n    if (props.contractAddress) {\n      result = await this.api.collectionsIdByContractAddress(props);\n      if (!result?.collections) {\n        throw new Error(`invalid collection ${props}`);\n      }\n      return result.collections.map((collection) => Number(collection.id));\n    }\n  }\n\n  async ownedNfts() {\n    const result = await this.api.ownedNfts();\n    const { edges: ownedNfts, pageInfo } = result.ownedNfts;\n    return { ownedNfts: ownedNfts.map((edge) => edge.node), pageInfo };\n  }\n\n  async getRemainingLockupSeconds({ loan }: { loan: LoanToMslLoanType }) {\n    return this.contracts.Msl(loan.contractAddress).getRemainingLockupSeconds({\n      loan: loanToMslLoan(loan),\n    });\n  }\n\n  async isEndLockedUp({ loan }: { loan: LoanToMslLoanType }) {\n    return this.contracts.Msl(loan.contractAddress).isEndLockedUp({\n      loan: loanToMslLoan(loan),\n    });\n  }\n\n  async getBestNativeSaleOffer({\n    contractAddress,\n    tokenId,\n  }: {\n    contractAddress: Address;\n    tokenId: bigint;\n  }) {\n    const { WETH_ADDRESS } = getCurrencies();\n    const nftId = await this.nftId({ contractAddress, tokenId });\n    const { bids } = await this.api.listBestBidsForNft({\n      nftId,\n      currencyAddress: WETH_ADDRESS,\n    });\n    const nativeBid = bids.find((bid) => bid.marketPlace === NATIVE_MARKETPLACE);\n\n    return nativeBid ?? null;\n  }\n\n  private contractToVersion(contract: Address) {\n    if (areSameAddress(contract, this.contracts.MultiSourceLoanV4.address)) return 'v4';\n    if (areSameAddress(contract, this.contracts.MultiSourceLoanV5.address)) return 'v5';\n    return 'v6';\n  }\n\n  private async generateRenegotiationId({\n    loanId,\n    loan,\n  }: {\n    loanId: string;\n    loan: LoanToMslLoanType;\n  }) {\n    const renegotiationInput = generateFakeRenegotiationInput({\n      loanId,\n      loan,\n      trancheIndex: areSameAddress(loan.contractAddress, this.contracts.MultiSourceLoanV6.address),\n      address: this.wallet.account?.address,\n    });\n    const { offer } = await this.api.generateRenegotiationOfferHash({ renegotiationInput });\n    return offer.renegotiationId;\n  }\n\n  async refinanceBatch({\n    aprBpsImprovementPercentage,\n    refinancings,\n  }: {\n    aprBpsImprovementPercentage: number; // e.g. 0.05\n    refinancings: {\n      loan: LoanToMslLoanType & { loanReferenceId: string };\n      source: ReturnType<typeof loanToMslLoan>['source'][number] & { loanIndex: number };\n      refinancingPrincipal: bigint;\n    }[];\n  }) {\n    const refisByContract: {\n      v4: {\n        [tokenLoanId: string]: Parameters<\n          Contracts['MultiSourceLoanV4']['refinanceBatch']\n        >[0]['refinancings'][number] & { loanReferenceId: string };\n      };\n      v5: {\n        [tokenLoanId: string]: Parameters<\n          Contracts['MultiSourceLoanV5']['refinanceBatch']\n        >[0]['refinancings'][number] & { loanReferenceId: string };\n      };\n      v6: {\n        [tokenLoanId: string]: Parameters<\n          Contracts['MultiSourceLoanV6']['refinanceBatch']\n        >[0]['refinancings'][number] & { loanReferenceId: string };\n      };\n    } = { v4: {}, v5: {}, v6: {} };\n\n    // Group sources by contract and loanId, so that we only have one refinance per loan.\n    refinancings.forEach(({ loan, source, refinancingPrincipal }) => {\n      const tokenLoanId = `${loan.nftCollateralAddress}-${loan.nftCollateralTokenId}`;\n      const version = this.contractToVersion(loan.contractAddress);\n      const currentLoanRefinancings = refisByContract[version][tokenLoanId];\n\n      const currentSourceNewAprBps = BigInt(\n        Math.floor(Number(source.aprBps) * (1 - aprBpsImprovementPercentage)),\n      );\n      const newAprBps = min(currentLoanRefinancings?.newAprBps, currentSourceNewAprBps);\n\n      refisByContract[version][tokenLoanId] = {\n        loan: loanToMslLoan(loan),\n        loanReferenceId: loan.loanReferenceId,\n        newAprBps,\n        sources: [...(currentLoanRefinancings?.sources ?? []), { source, refinancingPrincipal }],\n      };\n    });\n\n    // Generate renegotiationId for each contract version and call the refinanceBatch implementations.\n    const versions = ['v4', 'v5', 'v6'] as const;\n    const results = [];\n    for (const version of versions) {\n      const refinancings = Object.values(refisByContract[version]);\n\n      if (refinancings.length > 0) {\n        const renegotiationId = await this.generateRenegotiationId({\n          loan: refinancings[0].loan,\n          loanId: refinancings[0].loanReferenceId,\n        });\n\n        try {\n          // TODO: improve this\n          const refinanceBatch =\n            version === 'v4'\n              ? await this.contracts.MultiSourceLoanV4.refinanceBatch({\n                  refinancings: Object.values(refisByContract.v4),\n                  renegotiationId,\n                })\n              : version === 'v5'\n                ? await this.contracts.MultiSourceLoanV5.refinanceBatch({\n                    refinancings: Object.values(refisByContract.v5),\n                    renegotiationId,\n                  })\n                : await this.contracts.MultiSourceLoanV6.refinanceBatch({\n                    refinancings: Object.values(refisByContract.v6),\n                    renegotiationId,\n                  });\n          results.push({ status: FULFILLED, value: refinanceBatch });\n        } catch (reason) {\n          results.push({ status: REJECTED, reason, value: refinancings });\n        }\n      }\n    }\n    return results;\n  }\n\n  async refinanceFullLoan({\n    offer,\n    loan,\n    loanId,\n  }: {\n    offer: model.RenegotiationOffer;\n    loan: LoanToMslLoanType;\n    loanId: bigint;\n  }) {\n    return this.contracts.Msl(loan.contractAddress).refinanceFullLoan({\n      offer: renegotiationToMslRenegotiation(offer, loanId),\n      loan: loanToMslLoan(loan),\n      signature: offer.signature,\n    });\n  }\n\n  async refinancePartialLoan({\n    offer,\n    loan,\n    loanId,\n  }: {\n    offer: model.RenegotiationOffer;\n    loan: LoanToMslLoanType;\n    loanId: bigint;\n  }) {\n    return this.contracts.Msl(loan.contractAddress).refinancePartialLoan({\n      offer: renegotiationToMslRenegotiation(offer, loanId),\n      loan: loanToMslLoan(loan),\n    });\n  }\n\n  async addTranche({\n    offer,\n    loan,\n    loanId,\n  }: {\n    offer: model.RenegotiationOffer;\n    loan: LoanToMslLoanType;\n    loanId: bigint;\n  }) {\n    return this.contracts.Msl(loan.contractAddress).addTranche({\n      offer: renegotiationToMslRenegotiation(offer, loanId),\n      loan: loanToMslLoan(loan),\n      signature: offer.signature,\n    });\n  }\n\n  /**\n   * Delegate Multicall should be used when token is used as collateral for an active loan.\n   * Multicall will be performed to the contract address of the first delegation.\n   */\n  async delegateMulticall(delegations: Parameters<Gondi['delegate']>[0][]) {\n    const contractAddress = delegations[0].loan.contractAddress;\n    return this.contracts.Msl(contractAddress).delegateMulticall(\n      delegations.map((delegation) => ({\n        ...delegation,\n        loan: loanToMslLoan(delegation.loan),\n      })),\n    );\n  }\n\n  /** Delegate should be used when token is used as collateral for an active loan. */\n  async delegate({\n    loan,\n    loanId,\n    to,\n    enable,\n    rights,\n  }: {\n    loan: LoanToMslLoanType;\n    loanId: bigint;\n    to: Address;\n    enable: boolean;\n    rights?: Hash;\n  }) {\n    return this.contracts.Msl(loan.contractAddress).delegate({\n      loan: loanToMslLoan(loan),\n      loanId,\n      to,\n      rights,\n      enable,\n    });\n  }\n\n  /** RevokeDelegate should be used when token is not being used as collateral. */\n  async revokeDelegate({\n    to,\n    collection,\n    tokenId,\n    contract = this.defaults.Msl,\n  }: {\n    to: Address;\n    collection: Address;\n    tokenId: bigint;\n    contract?: Address;\n  }) {\n    return this.contracts.Msl(contract).revokeDelegate({ to, collection, tokenId });\n  }\n\n  /**\n   * RevokeDelegationsAndEmitLoan should be used when token has been delegated without being revoked,\n   * and a new loan wants to be emitted, erasing the delegations provided as argument.\n   */\n  async revokeDelegationsAndEmitLoan({\n    delegations,\n    emit,\n  }: {\n    delegations: Address[];\n    emit: Parameters<Gondi['emitLoan']>[0];\n  }) {\n    const contractAddress = emit.offerExecution[0].offer.contractAddress;\n    return this.contracts.Msl(contractAddress).revokeDelegationsAndEmitLoan({ delegations, emit });\n  }\n\n  async liquidateLoan({ loan, loanId }: { loan: LoanToMslLoanType; loanId: bigint }) {\n    return this.contracts\n      .Msl(loan.contractAddress)\n      .liquidateLoan({ loanId, loan: loanToMslLoan(loan) });\n  }\n\n  async placeBid({\n    collectionContractAddress,\n    tokenId,\n    bid,\n    auction,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    bid: bigint;\n    auction: Auction;\n  }) {\n    return this.contracts\n      .All(auction.loanAddress)\n      .placeBid({ collectionContractAddress, tokenId, bid, auction });\n  }\n\n  async settleAuction({ loan, auction }: { loan: LoanToMslLoanType; auction: Auction }) {\n    return this.contracts\n      .All(auction.loanAddress)\n      .settleAuction({ auction, loan: loanToMslLoan(loan) });\n  }\n\n  async settleAuctionWithBuyout({ loan, auction }: { loan: LoanToMslLoanType; auction: Auction }) {\n    return this.contracts\n      .All(auction.loanAddress)\n      .settleAuctionWithBuyout({ auction, loan: loanToMslLoan(loan) });\n  }\n\n  async getAuctionRemainingLockupSeconds({ auction }: { auction: Auction }) {\n    return this.contracts.All(auction.loanAddress).getRemainingLockupSeconds({ auction });\n  }\n\n  async buy(\n    tokensToBuy: {\n      collectionContractAddress: Address;\n      tokenId: bigint;\n      price: bigint;\n      orderSource: string;\n    }[],\n  ) {\n    return this.reservoir.buyTokens(tokensToBuy);\n  }\n\n  async leverageBuy({\n    leverageBuyData,\n  }: {\n    leverageBuyData: {\n      offer: OfferV5 & { signature: Hash };\n      expirationTime: bigint;\n      amount: bigint;\n      nft: {\n        collectionContractAddress: Address;\n        tokenId: bigint;\n        price: bigint;\n        orderSource: string;\n      };\n    }[];\n  }) {\n    const executionData = await Promise.all(\n      leverageBuyData.map((data) =>\n        this.reservoir.getExecutionDataForBuyToken({\n          collectionContractAddress: data.nft.collectionContractAddress,\n          tokenId: data.nft.tokenId,\n          price: data.nft.price,\n          exactOrderSource: data.nft.orderSource,\n        }),\n      ),\n    );\n\n    // We calculate the amount of eth to send to the contract\n    // This is the sum of the eth to send for each nft minus the amount of weth that is being borrowed\n    const ethToSend = executionData.reduce(\n      (acc, { value }, index) =>\n        acc + value - leverageBuyData[index].amount + leverageBuyData[index].offer.fee,\n      0n,\n    );\n\n    const dataForLeverageContract = leverageBuyData.map((data, index) => ({\n      ...data,\n      callbackData: executionData[index].callbackData,\n    }));\n\n    return this.contracts.Leverage.buy({\n      leverageBuyData: dataForLeverageContract,\n      ethToSend: ethToSend < 0n ? 0n : ethToSend,\n    });\n  }\n\n  async leverageSell({\n    loan,\n    loanId,\n    price,\n    orderSource,\n  }: {\n    loan: LoanV5;\n    loanId: bigint;\n    price: bigint;\n    orderSource: string;\n  }) {\n    let executionData: {\n      callbackData: Hex;\n      isSeaportCall: boolean;\n    } | null = null;\n\n    if (isNative(orderSource)) {\n      const bestNativeBid = await this.getBestNativeSaleOffer({\n        contractAddress: loan.nftCollateralAddress,\n        tokenId: loan.nftCollateralTokenId,\n      });\n      if (!bestNativeBid || bestNativeBid.netAmount < price) {\n        throw new Error(`No native bid for price ${price}`);\n      }\n\n      executionData = await this.reservoir.generateFulfillOrderExecutionData({\n        askOrBid: {\n          rawData: await this.contracts.Seaport.recoverOrderFromNativeBid({\n            nativeBid: bestNativeBid,\n            collectionContractAddress: loan.nftCollateralAddress,\n            tokenId: loan.nftCollateralTokenId,\n          }),\n          price: {\n            netAmount: {\n              raw: String(price),\n            },\n          },\n        },\n        signature: bestNativeBid.signature,\n        tokenId: loan.nftCollateralTokenId,\n      });\n    } else {\n      executionData = await this.reservoir.getCallbackDataForSellToken({\n        collectionContractAddress: loan.nftCollateralAddress,\n        tokenId: loan.nftCollateralTokenId,\n        price,\n        exactOrderSource: orderSource,\n      });\n    }\n\n    const shouldDelegate = executionData.isSeaportCall;\n\n    return this.contracts.Leverage.sell({\n      loan,\n      callbackData: executionData.callbackData,\n      shouldDelegate,\n      loanId,\n    });\n  }\n\n  async getOwner({ nftAddress, tokenId }: { nftAddress: Address; tokenId: bigint }) {\n    const erc721 = this.contracts.ERC721(nftAddress);\n    return erc721.read.ownerOf([tokenId]);\n  }\n\n  async isApprovedNFTForAll({\n    nftAddress,\n    to = this.defaults.Msl,\n  }: {\n    nftAddress: Address;\n    to?: Address;\n  }) {\n    const erc721 = this.contracts.ERC721(nftAddress);\n    return erc721.read.isApprovedForAll([this.wallet.account?.address, to]);\n  }\n\n  async isApprovedNFT({\n    nftAddress,\n    isOldErc721,\n    tokenId,\n    to = this.defaults.Msl,\n  }: {\n    nftAddress: Address;\n    to?: Address;\n  } & (\n    | {\n        isOldErc721: true;\n        tokenId: bigint;\n      }\n    | {\n        isOldErc721?: never;\n        tokenId?: never;\n      }\n  )) {\n    if (isOldErc721) {\n      const erc721 = this.contracts.OldERC721(nftAddress);\n      const tokenApprovedFor = await erc721.read.approvedFor([tokenId]);\n      return areSameAddress(tokenApprovedFor, to);\n    }\n    return this.isApprovedNFTForAll({ nftAddress, to });\n  }\n\n  async approveNFTForAll({\n    nftAddress,\n    to = this.defaults.Msl,\n  }: {\n    nftAddress: Address;\n    to?: Address;\n  }) {\n    const erc721 = this.contracts.ERC721(nftAddress);\n\n    const txHash = await erc721.write.setApprovalForAll([to, true]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await erc721.createEventFilter.ApprovalForAll({});\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('ERC721 approval for all not set');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async approveNFT({\n    nftAddress,\n    isOldErc721,\n    tokenId,\n    to = this.defaults.Msl,\n  }: {\n    nftAddress: Address;\n    to?: Address;\n  } & (\n    | {\n        isOldErc721: true;\n        tokenId: bigint;\n      }\n    | {\n        isOldErc721?: never;\n        tokenId?: never;\n      }\n  )) {\n    if (isOldErc721) {\n      const erc721 = this.contracts.OldERC721(nftAddress);\n      const txHash = await erc721.write.approve([to, tokenId]);\n\n      return {\n        txHash,\n        waitTxInBlock: async () => {\n          const receipt = await this.bcClient.waitForTransactionReceipt({\n            hash: txHash,\n          });\n          const filter = await erc721.createEventFilter.Approval({});\n          const events = filterLogs(receipt, filter);\n          if (events.length === 0) throw new Error('ERC721 approval not set');\n          return { ...events[0].args, ...receipt };\n        },\n      };\n    }\n    return this.approveNFTForAll({ nftAddress, to });\n  }\n\n  async isApprovedToken({\n    tokenAddress,\n    amount,\n    to = this.defaults.Msl,\n  }: {\n    tokenAddress: Address;\n    amount: bigint;\n    to?: Address;\n  }) {\n    const erc20 = this.contracts.ERC20(tokenAddress);\n    return (await erc20.read.allowance([this.wallet.account?.address, to])) >= amount;\n  }\n\n  async approveToken({\n    tokenAddress,\n    amount = model.MAX_NUMBER,\n    to = this.defaults.Msl,\n  }: {\n    tokenAddress: Address;\n    amount?: bigint;\n    to?: Address;\n  }) {\n    const erc20 = this.contracts.ERC20(tokenAddress);\n    const txHash = await erc20.write.approve([to, amount]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await erc20.createEventFilter.Approval({});\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('ERC20 approval not set');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async createUserVault({\n    nfts,\n    userVaultAddress = this.defaults.UserVault,\n  }: {\n    nfts: Parameters<Contracts['UserVaultV5']['createVault']>[0];\n    userVaultAddress?: Address;\n  }) {\n    return this.contracts.UserVault(userVaultAddress).createVault(nfts);\n  }\n\n  async depositUserVaultERC721s({\n    userVaultAddress = this.defaults.UserVault,\n    ...data\n  }: {\n    userVaultAddress?: Address;\n  } & Parameters<Contracts['UserVaultV5']['depositERC721s']>[0]) {\n    return this.contracts.UserVault(userVaultAddress).depositERC721s(data);\n  }\n\n  async depositUserVaultOldERC721s({\n    userVaultAddress = this.defaults.UserVault,\n    ...data\n  }: {\n    userVaultAddress?: Address;\n  } & Parameters<Contracts['UserVaultV6']['depositERC721s']>[0]) {\n    return this.contracts.UserVault(userVaultAddress).depositOldERC721s(data);\n  }\n\n  async burnUserVaultAndWithdraw({\n    userVaultAddress = this.defaults.UserVault,\n    ...data\n  }: {\n    userVaultAddress?: Address;\n  } & Parameters<Contracts['UserVaultV5']['burnAndWithdraw']>[0]) {\n    return this.contracts.UserVault(userVaultAddress).burnAndWithdraw(data);\n  }\n}\n\ninterface GondiProps {\n  wallet: Wallet;\n  apiClient?: ApiProps['apiClient'];\n  reservoirBaseApiUrl?: string;\n}\n\ntype MakeOfferType =\n  | Omit<Awaited<ReturnType<Gondi['makeSingleNftOffer']>>, 'nftId'>\n  | Omit<Awaited<ReturnType<Gondi['makeCollectionOffer']>>, 'collectionId'>;\n\ntype OfferFromExecutionOffer = OptionalNullable<\n  MakeOfferType,\n  'borrowerAddress' | 'lenderAddress' | 'offerHash' | 'signature'\n>;\n\nexport interface EmitLoanArgs {\n  offerExecution: {\n    offer: Omit<model.SingleNftOffer | model.CollectionOffer, 'nftId'>;\n    amount?: bigint;\n    lenderOfferSignature: Hash;\n  }[];\n  tokenId: bigint;\n  duration: bigint;\n  principalReceiver?: Address;\n  expirationTime?: bigint;\n}\n", "import { ApolloClient, NormalizedCacheObject } from '@apollo/client';\nimport { getAddress } from 'viem';\n\nimport { apolloClient } from '@/api/client';\nimport { getSdkApollo } from '@/api/sdk';\nimport { zeroAddress } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport {\n  CollectionSignedOfferInput,\n  ListListingsQueryVariables,\n  ListLoansQueryVariables,\n  ListOffersQueryVariables,\n  SingleNftSignedOfferInput,\n} from '@/generated/graphql';\nimport { RenegotiationOffer } from '@/model';\nimport { isDefined } from '@/utils/types';\n\nexport type Props = {\n  apiClient?: ApolloClient<NormalizedCacheObject>;\n  wallet: Wallet;\n};\n\ntype PageInfo = { endCursor?: string | null; hasNextPage: boolean };\n\nconst mapPageInfo = ({ endCursor, hasNextPage }: PageInfo) =>\n  hasNextPage\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      { hasNextPage, cursor: endCursor! }\n    : { hasNextPage, cursor: null };\n\nexport const apiDomain = () => process.env.GONDI_URL ?? 'https://api.gondi.xyz';\n\nexport class Api {\n  api: ReturnType<typeof getSdkApollo>;\n  generateSingleNftOfferHash;\n  generateCollectionOfferHash;\n  generateRenegotiationOfferHash;\n  nftIdBySlugTokenId;\n  nftIdByContractAddressAndTokenId;\n  collections;\n  collectionIdBySlug;\n  collectionsIdByContractAddress;\n  listNft;\n  unlistNft;\n  ownedNfts;\n  hideOffer;\n  hideRenegotiationOffer;\n  unhideOffer;\n  unhideRenegotiationOffer;\n  saveSignedSaleOffer;\n  hideSaleOffer;\n  unhideSaleOffer;\n  listBestBidsForNft;\n\n  constructor({ apiClient, wallet }: Props) {\n    const gqlClient = apiClient ?? apolloClient(wallet);\n    this.api = getSdkApollo(gqlClient);\n\n    this.generateSingleNftOfferHash = this.api.generateSingleNftOfferHash;\n    this.generateCollectionOfferHash = this.api.generateCollectionOfferHash;\n    this.generateRenegotiationOfferHash = this.api.generateRenegotiationOfferHash;\n    this.nftIdBySlugTokenId = this.api.nftIdBySlugTokenId;\n    this.nftIdByContractAddressAndTokenId = this.api.nftIdByContractAddressAndTokenId;\n    this.collectionIdBySlug = this.api.collectionIdBySlug;\n    this.collectionsIdByContractAddress = this.api.collectionsIdByContractAddress;\n    this.collections = this.api.collections;\n    this.listNft = this.api.listNft;\n    this.unlistNft = this.api.unlistNft;\n    this.ownedNfts = this.api.ownedNfts;\n    this.saveSignedSaleOffer = this.api.saveSignedSaleOffer;\n    this.hideOffer = this.api.hideOffer;\n    this.hideRenegotiationOffer = this.api.hideRenegotiationOffer;\n    this.unhideOffer = this.api.unhideOffer;\n    this.unhideRenegotiationOffer = this.api.unhideRenegotiationOffer;\n    this.hideSaleOffer = this.api.hideSaleOffer;\n    this.unhideSaleOffer = this.api.unhideSaleOffer;\n    this.listBestBidsForNft = this.api.listBestBidsForNft;\n  }\n\n  async saveSingleNftOffer(offerInput: SingleNftSignedOfferInput) {\n    const offer = {\n      ...offerInput,\n      borrowerAddress: offerInput.borrowerAddress || zeroAddress,\n    };\n    const response = await this.api.saveSingleNftOffer({ offer });\n    const nftCollateralAddress =\n      response.offer.nft.collection?.contractData?.contractAddress || zeroAddress;\n    return {\n      id: response.offer.id,\n      nftCollateralAddress,\n      nftCollateralTokenId: response.offer.nft.tokenId,\n      ...offerInput,\n    };\n  }\n\n  async saveCollectionOffer(offerInput: CollectionSignedOfferInput) {\n    const offer = {\n      ...offerInput,\n      borrowerAddress: offerInput.borrowerAddress || zeroAddress,\n    };\n    const response = await this.api.saveCollectionOffer({ offer });\n    const nftCollateralAddress =\n      response.offer.collection?.contractData?.contractAddress || zeroAddress;\n    return {\n      id: response.offer.id,\n      nftCollateralAddress,\n      nftCollateralTokenId: 0n,\n      ...offerInput,\n    };\n  }\n\n  async saveRefinanceOffer(offerInput: RenegotiationOffer) {\n    const response = await this.api.saveRenegotiationOffer({\n      offer: offerInput,\n    });\n    return {\n      id: response.offer.id,\n      ...offerInput,\n    };\n  }\n  async listOffers(props: ListOffersQueryVariables) {\n    const {\n      result: { edges, pageInfo },\n    } = await this.api.listOffers(props);\n    const offers = edges\n      .map((edge) => {\n        const { __typename, ...node } = edge.node;\n        const nftCollateralAddress =\n          'collection' in node\n            ? node.collection.contractData?.contractAddress\n            : node.nft.collection?.contractData?.contractAddress;\n        const nftCollateralTokenId = 'collection' in node ? 0n : node.nft.tokenId;\n        if (!isDefined(nftCollateralAddress)) return undefined;\n        return {\n          ...node,\n          type: __typename,\n          lender: node.lenderAddress,\n          borrower: node.borrowerAddress,\n          signer: node.signerAddress,\n          offerValidators: node.validators,\n          nftCollateralAddress,\n          nftCollateralTokenId,\n        };\n      })\n      .filter(isDefined);\n    return {\n      ...mapPageInfo(pageInfo),\n      offers,\n    };\n  }\n\n  async listLoans(props: ListLoansQueryVariables) {\n    const {\n      loans: { edges, pageInfo },\n    } = await this.api.listLoans(props);\n    const loans = edges.map((edge) => {\n      const { __typename, ...node } = edge.node;\n      return {\n        ...node,\n        type: __typename,\n        contractAddress: node.address,\n        nftCollateralTokenId: node.nft.tokenId,\n        nftCollateralAddress: node.nft.collection?.contractData?.contractAddress,\n        borrower: node.borrowerAddress,\n        startTime: BigInt(Math.floor(node.startTime.getTime() / 1_000)),\n        source: node.sources.map((source) => ({\n          ...source,\n          lender: getAddress(source.lenderAddress),\n          loanId: BigInt(source.loanId),\n          startTime: BigInt(Math.floor(source.startTime.getTime() / 1_000)),\n        })),\n      };\n    });\n    return {\n      ...mapPageInfo(pageInfo),\n      loans,\n    };\n  }\n\n  async listListings(props: ListListingsQueryVariables) {\n    const {\n      result: { edges, pageInfo },\n    } = await this.api.listListings(props);\n    const listings = edges.map((edge) => edge.node);\n    return {\n      ...mapPageInfo(pageInfo),\n      listings,\n    };\n  }\n}\n", "import {\n  ApolloClient,\n  ApolloLink,\n  createHttpLink,\n  InMemoryCache,\n} from '@apollo/client/core/index.js';\nimport { setContext } from '@apollo/client/link/context/index.js';\nimport { withScalars } from 'apollo-link-scalars';\nimport { buildSchema } from 'graphql';\n\nimport { apiDomain } from '@/api';\nimport { Credential, SessionToken } from '@/api/auth';\nimport { Wallet } from '@/contracts';\nimport lendingSchemaText from '@/generated/graphql/lending-schema.graphql';\n\nconst apiUrl = () => `${apiDomain()}/lending/graphql`;\nconst lendingSchema = buildSchema(lendingSchemaText);\n\nObject.assign(BigInt.prototype, {\n  toJSON() {\n    return this.toString();\n  },\n});\n\nconst typesMap = {\n  datetime: {\n    serialize: (parsed: unknown) => {\n      if (parsed instanceof Date) return parsed.toISOString();\n      return null;\n    },\n    parseValue: (raw: unknown) => {\n      if (typeof raw === 'string') return new Date(raw);\n      if (raw instanceof Date) return raw;\n      return null;\n    },\n  },\n  BigInt: {\n    serialize: (parsed: unknown) => {\n      if (typeof parsed === 'bigint') return String(parsed);\n      return null;\n    },\n    parseValue: (raw: unknown) => {\n      if (typeof raw === 'string') return BigInt(raw);\n      return null;\n    },\n  },\n  DateTime: {\n    serialize: (parsed: unknown) => {\n      if (parsed instanceof Date) return parsed.toISOString();\n      return null;\n    },\n    parseValue: (raw: unknown) => {\n      if (typeof raw === 'string') return new Date(raw);\n      if (raw instanceof Date) return raw;\n      return null;\n    },\n  },\n};\n\nconst authLink = (credential: Credential) =>\n  setContext(async (request) => {\n    return await credential.authorizeRequest(request);\n  });\n\nconst link = ApolloLink.from([\n  withScalars({ schema: lendingSchema, typesMap }),\n  createHttpLink({\n    uri: ({ operationName }) => `${apiUrl()}?operation=${encodeURIComponent(operationName)}`,\n  }) as unknown as ApolloLink,\n]);\n\nexport const apolloClient = (wallet: Wallet) => {\n  const credential = new SessionToken({ wallet });\n  return new ApolloClient({\n    link: ApolloLink.from([authLink(credential), link]),\n    defaultOptions: {\n      query: {\n        errorPolicy: 'all',\n        fetchPolicy: 'no-cache',\n      },\n      mutate: {\n        errorPolicy: 'all',\n        fetchPolicy: 'no-cache',\n      },\n      watchQuery: {\n        fetchPolicy: 'no-cache',\n        nextFetchPolicy: 'no-cache',\n        errorPolicy: 'ignore',\n      },\n    },\n    cache: new InMemoryCache({}),\n  });\n};\n", "import {\n  ApolloClient,\n  ApolloLink,\n  createHttpLink,\n  GraphQLRequest,\n  InMemoryCache,\n} from '@apollo/client/core/index.js';\nimport { gql } from 'graphql-tag';\nimport { SiweMessage } from 'siwe';\n\nimport { apiDomain } from '@/api';\nimport { Wallet } from '@/contracts';\n\nexport type Credential = SessionToken;\n\nconst authApiUrl = () => `${apiDomain()}/graphql`;\n\nexport const getAuthClient = async () => {\n  const link = ApolloLink.from([\n    createHttpLink({\n      uri: ({ operationName }) => `${authApiUrl()}?operation=${encodeURIComponent(operationName)}`,\n    }) as unknown as ApolloLink,\n  ]);\n  return new ApolloClient({\n    link: ApolloLink.from([link]),\n    defaultOptions: {\n      query: {\n        errorPolicy: 'all',\n      },\n      mutate: {\n        errorPolicy: 'all',\n      },\n    },\n    cache: new InMemoryCache({}),\n  });\n};\n\nexport const signIn = async ({ wallet }: { wallet: Wallet }) => {\n  const authClient = await getAuthClient();\n\n  const { data, errors } = await authClient.mutate({\n    mutation: gql`\n      mutation GenerateSignInNonce($nonceInput: NonceInput!) {\n        generateSignInNonce(nonceInput: $nonceInput)\n      }\n    `,\n    variables: {\n      nonceInput: {\n        walletAddress: wallet.account.address,\n        blockchain: 'ETHEREUM',\n      },\n    },\n  });\n\n  if (errors) throw new Error(errors.map((e) => e.message).join(', '));\n\n  const nonce = data?.generateSignInNonce;\n\n  const message = new SiweMessage({\n    domain: 'gondi.xyz',\n    address: wallet.account.address,\n    chainId: wallet.chain.id,\n    statement: 'Sign in with Ethereum to the app.',\n    uri: authApiUrl(),\n    version: '1',\n    nonce,\n  });\n\n  const signature = await wallet.signMessage({\n    message: message.prepareMessage(),\n  });\n\n  const { data: siweData, errors: siweErrors } = await authClient.mutate({\n    mutation: gql`\n      mutation SignInWithEthereum($siweInput: SiweInput!) {\n        signInWithEthereum(siweInput: $siweInput)\n      }\n    `,\n    variables: {\n      siweInput: { message: message.prepareMessage(), signature: signature },\n    },\n  });\n\n  if (siweErrors) throw new Error(siweErrors.map((e) => e.message).join(', '));\n\n  const accessToken = siweData?.signInWithEthereum;\n  if (!accessToken) throw new Error(\"Couldn't generate Access Token, please try again later\");\n  return accessToken;\n};\n\nexport class SessionToken {\n  token?: string;\n  wallet: Wallet;\n\n  constructor({ token, wallet }: { token?: string; wallet: Wallet }) {\n    this.token = token;\n    this.wallet = wallet;\n  }\n\n  async authorizeRequest(request: GraphQLRequest) {\n    await this.signIn();\n    const { headers = {} }: { headers?: object } = request.context || {\n      headers: {},\n    };\n    return {\n      ...request,\n      headers: { ...headers, authorization: `Bearer ${this.token}` },\n    };\n  }\n  private async signIn() {\n    if (!this.token) {\n      this.token = await signIn({ wallet: this.wallet });\n    }\n  }\n}\n", "/* eslint-disable */\n//@ts-nocheck\nimport { Address, Hash, Hex } from 'viem'\nimport { FieldPolicy, FieldReadFunction, TypePolicies, TypePolicy } from '@apollo/client/cache';\nimport { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Address: Address;\n  BigInt: bigint;\n  DateTime: Date;\n  Hash: Hash;\n  Hex: Hex;\n  Signature: Hex;\n  Void: any;\n};\n\nexport type ActiveOfferNotification = Node & Notification & {\n  __typename?: 'ActiveOfferNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  notificationType: Scalars['String'];\n  offer: Offer;\n  offerId: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type Activity = {\n  id: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  txHash?: Maybe<Scalars['Hash']>;\n};\n\nexport type Asset = {\n  __typename?: 'Asset';\n  accessTypeName: Scalars['String'];\n  cacheUrl?: Maybe<Scalars['String']>;\n  contentTypeMime: Scalars['String'];\n  data: Scalars['String'];\n};\n\nexport type Auction = Node & {\n  __typename?: 'Auction';\n  duration?: Maybe<Scalars['BigInt']>;\n  endTime?: Maybe<Scalars['DateTime']>;\n  highestBid?: Maybe<Bid>;\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  minBid: Scalars['BigInt'];\n  originator?: Maybe<Scalars['Address']>;\n  settler?: Maybe<Scalars['Address']>;\n  startTime?: Maybe<Scalars['DateTime']>;\n  status: Scalars['String'];\n  triggerFee?: Maybe<Scalars['BigInt']>;\n};\n\nexport type AuctionBidConfirmationNotification = Node & Notification & {\n  __typename?: 'AuctionBidConfirmationNotification';\n  auction: Auction;\n  auctionId: Scalars['String'];\n  bid: Bid;\n  bidId: Scalars['Int'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type AuctionConnection = {\n  __typename?: 'AuctionConnection';\n  edges: Array<AuctionEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type AuctionEdge = {\n  __typename?: 'AuctionEdge';\n  cursor: Scalars['String'];\n  node: Auction;\n};\n\nexport type AuctionEndedNotification = Node & Notification & {\n  __typename?: 'AuctionEndedNotification';\n  auction: Auction;\n  auctionId: Scalars['String'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport enum AuctionSortField {\n  EndTime = 'END_TIME'\n}\n\nexport type AuctionSortInput = {\n  field: AuctionSortField;\n  order: Ordering;\n};\n\nexport type AuctionStartedNotification = Node & Notification & {\n  __typename?: 'AuctionStartedNotification';\n  auction: Auction;\n  auctionId: Scalars['String'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport enum AuctionStatus {\n  Ended = 'ENDED',\n  Live = 'LIVE',\n  Past = 'PAST',\n  Upcoming = 'UPCOMING'\n}\n\nexport type AuctionWonNotification = Node & Notification & {\n  __typename?: 'AuctionWonNotification';\n  auction: Auction;\n  auctionId: Scalars['String'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type Bid = Node & {\n  __typename?: 'Bid';\n  amount: Scalars['BigInt'];\n  auction: Auction;\n  auctionId: Scalars['String'];\n  bidder: Scalars['Address'];\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type BidConnection = {\n  __typename?: 'BidConnection';\n  edges: Array<BidEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type BidEdge = {\n  __typename?: 'BidEdge';\n  cursor: Scalars['String'];\n  node: Bid;\n};\n\nexport enum BidSortField {\n  Bid = 'BID',\n  HighestBid = 'HIGHEST_BID'\n}\n\nexport type BidSortInput = {\n  field: BidSortField;\n  order: Ordering;\n};\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  bannerImage?: Maybe<Asset>;\n  collectionUrl?: Maybe<Scalars['String']>;\n  contractData?: Maybe<ContractData>;\n  description?: Maybe<Scalars['String']>;\n  discordUrl?: Maybe<Scalars['String']>;\n  externalUrl?: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  image?: Maybe<Asset>;\n  imageId?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  nftsCount?: Maybe<Scalars['Int']>;\n  slug?: Maybe<Scalars['String']>;\n  statistics: CollectionStatistics;\n  twitterUsername?: Maybe<Scalars['String']>;\n  verified: Scalars['Boolean'];\n};\n\nexport type CollectionConnection = {\n  __typename?: 'CollectionConnection';\n  edges: Array<CollectionEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type CollectionEdge = {\n  __typename?: 'CollectionEdge';\n  cursor: Scalars['String'];\n  node: Collection;\n};\n\nexport type CollectionLoansData = {\n  __typename?: 'CollectionLoansData';\n  maxAprBps: Scalars['Float'];\n  maxPrincipalAmount: Scalars['BigInt'];\n  maxRemainingTime: Scalars['BigInt'];\n  minAprBps: Scalars['Float'];\n  minPrincipalAmount: Scalars['BigInt'];\n  minRemainingTime: Scalars['BigInt'];\n};\n\nexport type CollectionOffer = Node & Offer & {\n  __typename?: 'CollectionOffer';\n  aprBps: Scalars['BigInt'];\n  borrowerAddress?: Maybe<Scalars['Address']>;\n  capacity: Scalars['BigInt'];\n  collection: Collection;\n  consumedCapacity: Scalars['BigInt'];\n  contractAddress: Scalars['Address'];\n  createdDate?: Maybe<Scalars['DateTime']>;\n  currency: Currency;\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  hidden?: Maybe<Scalars['Boolean']>;\n  id: Scalars['String'];\n  lenderAddress?: Maybe<Scalars['Address']>;\n  maxPrincipal: Scalars['BigInt'];\n  maxSeniorRepayment: Scalars['BigInt'];\n  /**\n   * Deprecated field: use maxSeniorRepayment instead.\n   * @deprecated Use maxSeniorRepayment instead.\n   */\n  maxTrancheFloor: Scalars['BigInt'];\n  netPrincipal: Scalars['BigInt'];\n  offerHash?: Maybe<Scalars['Hash']>;\n  offerId: Scalars['BigInt'];\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  repayment: Scalars['BigInt'];\n  requiresLiquidation?: Maybe<Scalars['Boolean']>;\n  signature?: Maybe<Scalars['Signature']>;\n  signerAddress?: Maybe<Scalars['Address']>;\n  statistics: CollectionOfferStatistics;\n  status: Scalars['String'];\n  validators: Array<OfferValidator>;\n};\n\nexport type CollectionOfferInput = {\n  aprBps: Scalars['BigInt'];\n  borrowerAddress: Scalars['Address'];\n  capacity: Scalars['BigInt'];\n  collectionId: Scalars['Int'];\n  contractAddress: Scalars['Address'];\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  lenderAddress: Scalars['Address'];\n  maxSeniorRepayment?: InputMaybe<Scalars['BigInt']>;\n  maxTrancheFloor?: InputMaybe<Scalars['BigInt']>;\n  offerValidators: Array<OfferValidatorInput>;\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  requiresLiquidation?: InputMaybe<Scalars['Boolean']>;\n  signerAddress?: InputMaybe<Scalars['Address']>;\n};\n\nexport type CollectionOfferStatistics = {\n  __typename?: 'CollectionOfferStatistics';\n  acceptedLoans: Scalars['Int'];\n  consumedCapacity: Scalars['BigInt'];\n};\n\nexport type CollectionOrder = Activity & Node & Order & {\n  __typename?: 'CollectionOrder';\n  collection: Collection;\n  createdDate: Scalars['DateTime'];\n  currency: Currency;\n  currencyAddress: Scalars['Address'];\n  expiration?: Maybe<Scalars['DateTime']>;\n  fees: Scalars['BigInt'];\n  hidden: Scalars['Boolean'];\n  id: Scalars['String'];\n  isAsk: Scalars['Boolean'];\n  maker: Scalars['Address'];\n  marketPlace: Scalars['String'];\n  netAmount: Scalars['BigInt'];\n  nonce: Scalars['BigInt'];\n  orderType: Scalars['String'];\n  price: Scalars['BigInt'];\n  signature: Scalars['Hash'];\n  startTime: Scalars['DateTime'];\n  status: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  txHash?: Maybe<Scalars['Hash']>;\n};\n\nexport type CollectionSignedOfferInput = {\n  aprBps: Scalars['BigInt'];\n  borrowerAddress: Scalars['Address'];\n  capacity: Scalars['BigInt'];\n  collectionId: Scalars['Int'];\n  contractAddress: Scalars['Address'];\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  lenderAddress: Scalars['Address'];\n  maxSeniorRepayment?: InputMaybe<Scalars['BigInt']>;\n  maxTrancheFloor?: InputMaybe<Scalars['BigInt']>;\n  offerHash: Scalars['Hash'];\n  offerId: Scalars['BigInt'];\n  offerValidators: Array<OfferValidatorInput>;\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  requiresLiquidation?: InputMaybe<Scalars['Boolean']>;\n  signature: Scalars['Signature'];\n  signerAddress?: InputMaybe<Scalars['Address']>;\n};\n\nexport enum CollectionSortField {\n  ListingCount = 'LISTING_COUNT',\n  LoanCount = 'LOAN_COUNT',\n  OutstandingPrincipal = 'OUTSTANDING_PRINCIPAL',\n  TotalOutstandingPrincipal = 'TOTAL_OUTSTANDING_PRINCIPAL',\n  TotalVolume = 'TOTAL_VOLUME'\n}\n\nexport type CollectionSortInput = {\n  field: CollectionSortField;\n  order: Ordering;\n  principalAddress?: InputMaybe<Scalars['Address']>;\n};\n\nexport type CollectionStatistics = {\n  __typename?: 'CollectionStatistics';\n  bestOffer?: Maybe<CurrencyAmount>;\n  floorPrice?: Maybe<CurrencyAmount>;\n  floorPrice7d?: Maybe<Scalars['Float']>;\n  floorPrice30d?: Maybe<Scalars['Float']>;\n  lastSale?: Maybe<Sale>;\n  nftsCount?: Maybe<Scalars['Float']>;\n  numberOfOffers: Scalars['Float'];\n  numberOfPricedNfts: Scalars['Int'];\n  outstandingLoanCount: Scalars['Int'];\n  outstandingPrincipal: Scalars['BigInt'];\n  percentageInOutstandingLoans: Scalars['Float'];\n  repaymentRate: Scalars['Float'];\n  totalLoanVolume: Scalars['BigInt'];\n  totalLoanVolume1d: Scalars['BigInt'];\n  totalLoanVolume1m: Scalars['BigInt'];\n  totalLoanVolume1w: Scalars['BigInt'];\n  totalLoanVolume1y: Scalars['BigInt'];\n  totalLoanVolume2m: Scalars['BigInt'];\n  totalLoanVolume3m: Scalars['BigInt'];\n  totalLoanVolume4m: Scalars['BigInt'];\n  totalOutstandingPrincipal: Scalars['BigInt'];\n  totalVolume?: Maybe<Scalars['Float']>;\n  totalVolume1d?: Maybe<Scalars['Float']>;\n  totalVolume1m?: Maybe<Scalars['Float']>;\n  totalVolume1w?: Maybe<Scalars['Float']>;\n  totalVolume1y?: Maybe<Scalars['Float']>;\n  totalVolume2m?: Maybe<Scalars['Float']>;\n  totalVolume3m?: Maybe<Scalars['Float']>;\n  totalVolume4m?: Maybe<Scalars['Float']>;\n};\n\n\nexport type CollectionStatisticsNumberOfOffersArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsOutstandingPrincipalArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolumeArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume1dArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume1mArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume1wArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume1yArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume2mArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume3mArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type CollectionStatisticsTotalLoanVolume4mArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\nexport type ConsiderationInput = {\n  endAmount: Scalars['BigInt'];\n  identifierOrCriteria: Scalars['BigInt'];\n  itemType: Scalars['Int'];\n  recipient: Scalars['Address'];\n  startAmount: Scalars['BigInt'];\n  token: Scalars['Address'];\n};\n\nexport type ContractData = Node & {\n  __typename?: 'ContractData';\n  blockchain: Scalars['String'];\n  contractAddress: Scalars['Address'];\n  createdDate: Scalars['DateTime'];\n  creatorAddress?: Maybe<Scalars['Address']>;\n  id: Scalars['String'];\n  standard: Scalars['String'];\n};\n\nexport type Currency = Node & {\n  __typename?: 'Currency';\n  address: Scalars['Address'];\n  currentEthRate?: Maybe<Scalars['Float']>;\n  currentUsdcPrice?: Maybe<Scalars['Float']>;\n  decimals: Scalars['Int'];\n  id: Scalars['String'];\n  symbol: Scalars['String'];\n};\n\nexport type CurrencyAmount = {\n  __typename?: 'CurrencyAmount';\n  amount: Scalars['Float'];\n  currency: Currency;\n};\n\nexport type Delegation = Node & {\n  __typename?: 'Delegation';\n  contractAddress: Scalars['String'];\n  delegateTo: Scalars['Address'];\n  id: Scalars['String'];\n  nft: Nft;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type DelegationConnection = {\n  __typename?: 'DelegationConnection';\n  edges: Array<DelegationEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type DelegationEdge = {\n  __typename?: 'DelegationEdge';\n  cursor: Scalars['String'];\n  node: Delegation;\n};\n\nexport type Interval = {\n  max?: InputMaybe<Scalars['Float']>;\n  min?: InputMaybe<Scalars['Float']>;\n};\n\nexport type LinkedWallets = Node & {\n  __typename?: 'LinkedWallets';\n  id: Scalars['String'];\n  pending: Scalars['Boolean'];\n  shouldAccept: Scalars['Boolean'];\n  walletAddress: Scalars['String'];\n};\n\nexport type Listing = Node & {\n  __typename?: 'Listing';\n  createdDate: Scalars['DateTime'];\n  desiredDuration?: Maybe<Scalars['Int']>;\n  desiredPrincipalAddress?: Maybe<Scalars['Address']>;\n  expirationDate: Scalars['DateTime'];\n  id: Scalars['String'];\n  marketplaceName: MarketplaceEnum;\n  nft: Nft;\n  user: User;\n};\n\nexport type ListingConnection = {\n  __typename?: 'ListingConnection';\n  edges: Array<ListingEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type ListingEdge = {\n  __typename?: 'ListingEdge';\n  cursor: Scalars['String'];\n  node: Listing;\n};\n\nexport type Loan = {\n  activities: Array<LoanActivity>;\n  address: Scalars['Address'];\n  borrowerAddress: Scalars['Address'];\n  contractStartTime: Scalars['DateTime'];\n  currency: Currency;\n  duration: Scalars['BigInt'];\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loanId: Scalars['Int'];\n  /**\n   * Deprecated field. Use offerIds to return loan offer ids instead.\n   * @deprecated Use offerIds to return loan offer ids instead.\n   */\n  offer: Offer;\n  offerIds: Array<Scalars['String']>;\n  principalAddress: Scalars['Address'];\n  protocolFee: Scalars['BigInt'];\n  repaidActivity?: Maybe<LoanRepaid>;\n  startTime: Scalars['DateTime'];\n  status: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanActivity = {\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanActivityConnection = {\n  __typename?: 'LoanActivityConnection';\n  edges: Array<LoanActivityEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type LoanActivityEdge = {\n  __typename?: 'LoanActivityEdge';\n  cursor: Scalars['String'];\n  node: LoanActivity;\n};\n\nexport enum LoanActivitySortField {\n  Timestamp = 'TIMESTAMP'\n}\n\nexport type LoanActivitySortInput = {\n  field: LoanActivitySortField;\n  order: Ordering;\n};\n\nexport enum LoanActivityType {\n  LoanAuctioned = 'LOAN_AUCTIONED',\n  LoanExtended = 'LOAN_EXTENDED',\n  LoanForeclosed = 'LOAN_FORECLOSED',\n  LoanInitiated = 'LOAN_INITIATED',\n  LoanRefinanced = 'LOAN_REFINANCED',\n  LoanRefinancedFromOffers = 'LOAN_REFINANCED_FROM_OFFERS',\n  LoanRepaid = 'LOAN_REPAID',\n  LoanSentToAuction = 'LOAN_SENT_TO_AUCTION'\n}\n\nexport type LoanAuctioned = LoanActivity & Node & {\n  __typename?: 'LoanAuctioned';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  loanPayments: Array<LoanPayment>;\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  totalAuctioned: Scalars['BigInt'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanAuctionedNotification = Node & Notification & {\n  __typename?: 'LoanAuctionedNotification';\n  auction: Auction;\n  auctionId: Scalars['String'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type LoanDefaultReminderNotification = Node & Notification & {\n  __typename?: 'LoanDefaultReminderNotification';\n  createdOn: Scalars['DateTime'];\n  defaultsInHours: Scalars['Int'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type LoanDefaultedNotification = Node & Notification & {\n  __typename?: 'LoanDefaultedNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type LoanExtended = LoanActivity & Node & {\n  __typename?: 'LoanExtended';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanExtendedNotification = Node & Notification & {\n  __typename?: 'LoanExtendedNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  newHistory: MultiSourceLoanHistory;\n  newHistoryId: Scalars['String'];\n  notificationType: Scalars['String'];\n  previousHistory: MultiSourceLoanHistory;\n  previousHistoryId: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type LoanForeclosed = LoanActivity & Node & {\n  __typename?: 'LoanForeclosed';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanInitiated = LoanActivity & Node & {\n  __typename?: 'LoanInitiated';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanPayment = Node & {\n  __typename?: 'LoanPayment';\n  accruedInterest: Scalars['BigInt'];\n  activityId: Scalars['String'];\n  destination: Scalars['Address'];\n  id: Scalars['String'];\n  pendingInterest: Scalars['BigInt'];\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  protocolFee: Scalars['BigInt'];\n  source: Scalars['Address'];\n};\n\nexport type LoanRefinanced = LoanActivity & Node & {\n  __typename?: 'LoanRefinanced';\n  addedNewTranche: Scalars['Boolean'];\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  isRenegotiation: Scalars['Boolean'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanRefinancedFromOffers = LoanActivity & Node & {\n  __typename?: 'LoanRefinancedFromOffers';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanRefinancedNotification = Node & Notification & {\n  __typename?: 'LoanRefinancedNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  newHistory: MultiSourceLoanHistory;\n  newHistoryId: Scalars['String'];\n  notificationType: Scalars['String'];\n  previousHistory: MultiSourceLoanHistory;\n  previousHistoryId: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type LoanRepaid = LoanActivity & Node & {\n  __typename?: 'LoanRepaid';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  totalInterest: Scalars['BigInt'];\n  txHash: Scalars['Hash'];\n};\n\nexport type LoanRepaidNotification = Node & Notification & {\n  __typename?: 'LoanRepaidNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type LoanSentToAuction = LoanActivity & Node & {\n  __typename?: 'LoanSentToAuction';\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  liquidatorAddress: Scalars['String'];\n  loan: Loan;\n  loanId: Scalars['String'];\n  multiSourceLoanHistory?: Maybe<MultiSourceLoanHistory>;\n  timestamp: Scalars['DateTime'];\n  txHash: Scalars['Hash'];\n};\n\nexport enum LoanSortField {\n  AprBps = 'APR_BPS',\n  Duration = 'DURATION',\n  EffectiveAprBps = 'EFFECTIVE_APR_BPS',\n  ExpectedInterest = 'EXPECTED_INTEREST',\n  ExpirationDate = 'EXPIRATION_DATE',\n  OriginationFee = 'ORIGINATION_FEE',\n  PaidInterest = 'PAID_INTEREST',\n  PrincipalAmount = 'PRINCIPAL_AMOUNT',\n  RenegotiationRequested = 'RENEGOTIATION_REQUESTED',\n  StartTime = 'START_TIME',\n  TotalInterest = 'TOTAL_INTEREST'\n}\n\nexport type LoanSortInput = {\n  field: LoanSortField;\n  order: Ordering;\n};\n\nexport enum LoanStatusType {\n  LoanAuctioned = 'LOAN_AUCTIONED',\n  LoanDefaulted = 'LOAN_DEFAULTED',\n  LoanForeclosed = 'LOAN_FORECLOSED',\n  LoanInitiated = 'LOAN_INITIATED',\n  LoanRepaid = 'LOAN_REPAID',\n  LoanSentToAuction = 'LOAN_SENT_TO_AUCTION'\n}\n\nexport type LoansData = {\n  __typename?: 'LoansData';\n  maxAprBps: Scalars['Float'];\n  maxPrincipalAmount: Scalars['BigInt'];\n  maxRemainingTime: Scalars['BigInt'];\n  minAprBps: Scalars['Float'];\n  minPrincipalAmount: Scalars['BigInt'];\n  minRemainingTime: Scalars['BigInt'];\n};\n\nexport type LostSource = Node & {\n  __typename?: 'LostSource';\n  accruedInterest: Scalars['BigInt'];\n  activityId: Scalars['String'];\n  aprBps: Scalars['BigInt'];\n  duration: Scalars['BigInt'];\n  id: Scalars['String'];\n  lenderAddress: Scalars['String'];\n  loan: MultiSourceLoan;\n  originationFee: Scalars['BigInt'];\n  principalAmount: Scalars['BigInt'];\n  startTime: Scalars['DateTime'];\n};\n\nexport type LostSourceNotification = Node & Notification & {\n  __typename?: 'LostSourceNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  lostSource: LostSource;\n  lostSourceId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport enum MarketplaceEnum {\n  Gondi = 'GONDI',\n  Nftfi = 'NFTFI'\n}\n\nexport type MultiSourceLoan = Loan & Node & {\n  __typename?: 'MultiSourceLoan';\n  activities: Array<LoanActivity>;\n  address: Scalars['Address'];\n  auction?: Maybe<Auction>;\n  blendedAprBps: Scalars['Float'];\n  borrowerAddress: Scalars['Address'];\n  contractStartTime: Scalars['DateTime'];\n  currency: Currency;\n  duration: Scalars['BigInt'];\n  id: Scalars['String'];\n  indexInBlock: Scalars['Int'];\n  loanId: Scalars['Int'];\n  nft: Nft;\n  /**\n   * Deprecated field. Use offerIds to return loan offer ids instead.\n   * @deprecated Use offerIds to return loan offer ids instead.\n   */\n  offer: Offer;\n  offerIds: Array<Scalars['String']>;\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  protocolFee: Scalars['BigInt'];\n  renegotiationRequest?: Maybe<RenegotiationRequest>;\n  repaidActivity?: Maybe<LoanRepaid>;\n  sources: Array<Source>;\n  startTime: Scalars['DateTime'];\n  status: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  topUpRequest?: Maybe<TopUpRequest>;\n  totalOriginationFee: Scalars['BigInt'];\n  txHash: Scalars['Hash'];\n};\n\nexport type MultiSourceLoanConnection = {\n  __typename?: 'MultiSourceLoanConnection';\n  edges: Array<MultiSourceLoanEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type MultiSourceLoanEdge = {\n  __typename?: 'MultiSourceLoanEdge';\n  cursor: Scalars['String'];\n  node: MultiSourceLoan;\n};\n\nexport type MultiSourceLoanHistory = Node & {\n  __typename?: 'MultiSourceLoanHistory';\n  activity: LoanActivity;\n  activityId: Scalars['String'];\n  borrowerAddress: Scalars['String'];\n  duration: Scalars['BigInt'];\n  id: Scalars['String'];\n  loanId: Scalars['Int'];\n  offerIds: Array<Scalars['String']>;\n  principalAddress: Scalars['String'];\n  principalAmount: Scalars['BigInt'];\n  sources: Array<SourceHistory>;\n  startTime: Scalars['DateTime'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  addListingsOfNftsFromUser?: Maybe<Scalars['Void']>;\n  addOrUpdateListing: Listing;\n  addOrUpdateRenegotiationRequest: RenegotiationRequest;\n  addOrUpdateTopUpRequest: TopUpRequest;\n  generateCollectionOfferToBeSigned: CollectionOffer;\n  generateRenegotiationOfferToBeSigned: Renegotiation;\n  generateSingleNftOfferToBeSigned: SingleNftOffer;\n  hideAllOffers: Array<Offer>;\n  hideOffer: Offer;\n  hideRenegotiation: Renegotiation;\n  hideSaleOffer: SingleNftOrder;\n  markNotificationIdsAsRead?: Maybe<Scalars['Void']>;\n  markNotificationsAsRead?: Maybe<Scalars['Void']>;\n  removeListing: Listing;\n  removeListingsOfNftsFromUser?: Maybe<Scalars['Void']>;\n  removeRenegotiationRequest: RenegotiationRequest;\n  removeTopUpRequest: TopUpRequest;\n  saveRenegotiationSignedOffer: Renegotiation;\n  saveSignedCollectionOffer: CollectionOffer;\n  saveSignedSaleOffer: SingleNftOrder;\n  saveSignedSingleNftOffer: SingleNftOffer;\n  setReferral?: Maybe<Scalars['Void']>;\n  showOffer: Offer;\n  showRenegotiation: Renegotiation;\n  showSaleOffer: SingleNftOrder;\n};\n\n\nexport type MutationAddListingsOfNftsFromUserArgs = {\n  desiredDuration?: InputMaybe<Scalars['Int']>;\n  desiredPrincipalAddress?: InputMaybe<Scalars['Address']>;\n  excludeCollections?: InputMaybe<Array<Scalars['String']>>;\n  onlyCollections?: InputMaybe<Array<Scalars['String']>>;\n};\n\n\nexport type MutationAddOrUpdateListingArgs = {\n  desiredDuration?: InputMaybe<Scalars['Int']>;\n  desiredPrincipalAddress?: InputMaybe<Scalars['Address']>;\n  nftId: Scalars['Int'];\n};\n\n\nexport type MutationAddOrUpdateRenegotiationRequestArgs = {\n  desiredAprBps: Scalars['BigInt'];\n  desiredDuration: Scalars['BigInt'];\n  desiredPrincipalAmount: Scalars['BigInt'];\n  loanId: Scalars['String'];\n};\n\n\nexport type MutationAddOrUpdateTopUpRequestArgs = {\n  desiredAprBps: Scalars['BigInt'];\n  desiredTopUp: Scalars['BigInt'];\n  loanId: Scalars['String'];\n};\n\n\nexport type MutationGenerateCollectionOfferToBeSignedArgs = {\n  offerInput: CollectionOfferInput;\n};\n\n\nexport type MutationGenerateRenegotiationOfferToBeSignedArgs = {\n  renegotiationInput: RenegotiationOfferInput;\n};\n\n\nexport type MutationGenerateSingleNftOfferToBeSignedArgs = {\n  offerInput: SingleNftOfferInput;\n};\n\n\nexport type MutationHideAllOffersArgs = {\n  contractAddress: Scalars['Address'];\n  minOfferId: Scalars['String'];\n};\n\n\nexport type MutationHideOfferArgs = {\n  contractAddress: Scalars['Address'];\n  offerId: Scalars['String'];\n};\n\n\nexport type MutationHideRenegotiationArgs = {\n  contractAddress?: InputMaybe<Scalars['Address']>;\n  renegotiationId: Scalars['String'];\n};\n\n\nexport type MutationHideSaleOfferArgs = {\n  saleOfferId: Scalars['String'];\n};\n\n\nexport type MutationMarkNotificationIdsAsReadArgs = {\n  ids?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type MutationRemoveListingArgs = {\n  nftId: Scalars['Int'];\n};\n\n\nexport type MutationRemoveListingsOfNftsFromUserArgs = {\n  excludeCollections?: InputMaybe<Array<Scalars['String']>>;\n  onlyCollections?: InputMaybe<Array<Scalars['String']>>;\n};\n\n\nexport type MutationRemoveRenegotiationRequestArgs = {\n  loanId: Scalars['String'];\n};\n\n\nexport type MutationRemoveTopUpRequestArgs = {\n  loanId: Scalars['String'];\n};\n\n\nexport type MutationSaveRenegotiationSignedOfferArgs = {\n  signedRenegotiationInput: SignedRenegotiationOfferInput;\n};\n\n\nexport type MutationSaveSignedCollectionOfferArgs = {\n  signedOfferInput: CollectionSignedOfferInput;\n};\n\n\nexport type MutationSaveSignedSaleOfferArgs = {\n  signedOfferInput: SignedOrderInput;\n};\n\n\nexport type MutationSaveSignedSingleNftOfferArgs = {\n  signedOfferInput: SingleNftSignedOfferInput;\n};\n\n\nexport type MutationSetReferralArgs = {\n  referrerId: Scalars['Int'];\n};\n\n\nexport type MutationShowOfferArgs = {\n  contractAddress: Scalars['Address'];\n  offerId: Scalars['String'];\n};\n\n\nexport type MutationShowRenegotiationArgs = {\n  contractAddress?: InputMaybe<Scalars['Address']>;\n  renegotiationId: Scalars['String'];\n};\n\n\nexport type MutationShowSaleOfferArgs = {\n  saleOfferId: Scalars['String'];\n};\n\nexport type Nft = Node & {\n  __typename?: 'NFT';\n  activeLoan?: Maybe<Loan>;\n  collection?: Maybe<Collection>;\n  collectionId?: Maybe<Scalars['Int']>;\n  createdDate: Scalars['DateTime'];\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  image?: Maybe<Asset>;\n  isFlagged?: Maybe<Scalars['Boolean']>;\n  listed?: Maybe<Listing>;\n  marketPlaceOfPrice?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  nftId: Scalars['String'];\n  owner?: Maybe<Scalars['Address']>;\n  price?: Maybe<Scalars['BigInt']>;\n  priceCurrencyAddress?: Maybe<Scalars['String']>;\n  rarityRank?: Maybe<Scalars['Int']>;\n  rarityScore?: Maybe<Scalars['Float']>;\n  statistics: NftStatistics;\n  tokenId: Scalars['BigInt'];\n  traits: Array<Trait>;\n  url?: Maybe<Scalars['String']>;\n  wrapsNfts?: Maybe<Array<Nft>>;\n};\n\nexport type NftConnection = {\n  __typename?: 'NFTConnection';\n  edges: Array<NftEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type NftEdge = {\n  __typename?: 'NFTEdge';\n  cursor: Scalars['String'];\n  node: Nft;\n};\n\nexport type NewOfferNotification = Node & Notification & {\n  __typename?: 'NewOfferNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  notificationType: Scalars['String'];\n  offer: Offer;\n  offerId: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type NewRenegotiationOfferNotification = Node & Notification & {\n  __typename?: 'NewRenegotiationOfferNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  renegotiation: Renegotiation;\n  renegotiationId: Scalars['String'];\n  user: User;\n};\n\nexport enum NftSortField {\n  Collection = 'COLLECTION',\n  Name = 'NAME',\n  OffersCount = 'OFFERS_COUNT',\n  Status = 'STATUS'\n}\n\nexport type NftSortInput = {\n  field: NftSortField;\n  order: Ordering;\n  principalAddress?: InputMaybe<Scalars['Address']>;\n};\n\nexport type NftStatistics = {\n  __typename?: 'NftStatistics';\n  bestOffer?: Maybe<CurrencyAmount>;\n  floorPrice?: Maybe<CurrencyAmount>;\n  floorPrice7d?: Maybe<Scalars['Float']>;\n  floorPrice30d?: Maybe<Scalars['Float']>;\n  lastSale?: Maybe<Sale>;\n  loansTotalVolume: Scalars['BigInt'];\n  numberOfOffers: Scalars['Float'];\n  topTraitFloorPrice?: Maybe<CurrencyAmount>;\n  totalVolume?: Maybe<Scalars['Float']>;\n  totalVolume1d?: Maybe<Scalars['Float']>;\n  totalVolume1m?: Maybe<Scalars['Float']>;\n  totalVolume1w?: Maybe<Scalars['Float']>;\n  totalVolume1y?: Maybe<Scalars['Float']>;\n  totalVolume2m?: Maybe<Scalars['Float']>;\n  totalVolume3m?: Maybe<Scalars['Float']>;\n  totalVolume4m?: Maybe<Scalars['Float']>;\n};\n\n\nexport type NftStatisticsLoansTotalVolumeArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\n\nexport type NftStatisticsNumberOfOffersArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\nexport type Node = {\n  id: Scalars['String'];\n};\n\nexport type Notification = {\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  edges: Array<NotificationEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  cursor: Scalars['String'];\n  node: Notification;\n};\n\nexport enum NotificationType {\n  AuctionWonNotification = 'AUCTION_WON_NOTIFICATION',\n  LoanDefaultedNotification = 'LOAN_DEFAULTED_NOTIFICATION',\n  LoanDefaultReminderNotification = 'LOAN_DEFAULT_REMINDER_NOTIFICATION',\n  LoanRepaidNotification = 'LOAN_REPAID_NOTIFICATION',\n  LostSourceNotification = 'LOST_SOURCE_NOTIFICATION',\n  NewOfferNotification = 'NEW_OFFER_NOTIFICATION',\n  NewRenegotiationOfferNotification = 'NEW_RENEGOTIATION_OFFER_NOTIFICATION',\n  OfferAcceptedNotification = 'OFFER_ACCEPTED_NOTIFICATION',\n  OutbidNotification = 'OUTBID_NOTIFICATION',\n  SetNftNotification = 'SET_NFT_NOTIFICATION'\n}\n\nexport type Offer = {\n  aprBps: Scalars['BigInt'];\n  borrowerAddress?: Maybe<Scalars['Address']>;\n  capacity: Scalars['BigInt'];\n  consumedCapacity: Scalars['BigInt'];\n  contractAddress: Scalars['Address'];\n  createdDate?: Maybe<Scalars['DateTime']>;\n  currency: Currency;\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  hidden?: Maybe<Scalars['Boolean']>;\n  id: Scalars['String'];\n  lenderAddress?: Maybe<Scalars['Address']>;\n  maxPrincipal: Scalars['BigInt'];\n  maxSeniorRepayment: Scalars['BigInt'];\n  /**\n   * Deprecated field: use maxSeniorRepayment instead.\n   * @deprecated Use maxSeniorRepayment instead.\n   */\n  maxTrancheFloor: Scalars['BigInt'];\n  netPrincipal: Scalars['BigInt'];\n  offerHash?: Maybe<Scalars['Hash']>;\n  offerId: Scalars['BigInt'];\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  repayment: Scalars['BigInt'];\n  requiresLiquidation?: Maybe<Scalars['Boolean']>;\n  signature?: Maybe<Scalars['Signature']>;\n  signerAddress?: Maybe<Scalars['Address']>;\n  status: Scalars['String'];\n  validators: Array<OfferValidator>;\n};\n\nexport type OfferAcceptedNotification = Node & Notification & {\n  __typename?: 'OfferAcceptedNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  offer: Offer;\n  offerId: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type OfferConnection = {\n  __typename?: 'OfferConnection';\n  edges: Array<OfferEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type OfferEdge = {\n  __typename?: 'OfferEdge';\n  cursor: Scalars['String'];\n  node: Offer;\n};\n\nexport type OfferStatistics = {\n  __typename?: 'OfferStatistics';\n  consumedCapacity: Scalars['BigInt'];\n};\n\nexport enum OfferStatus {\n  Active = 'ACTIVE',\n  Cancelled = 'CANCELLED',\n  Executed = 'EXECUTED',\n  Expired = 'EXPIRED',\n  Inactive = 'INACTIVE',\n  Outperformed = 'OUTPERFORMED'\n}\n\nexport type OfferValidator = Node & {\n  __typename?: 'OfferValidator';\n  arguments: Scalars['Hex'];\n  id: Scalars['String'];\n  offerId: Scalars['String'];\n  validator: Scalars['Address'];\n};\n\nexport type OfferValidatorInput = {\n  arguments: Scalars['Hex'];\n  validator: Scalars['Address'];\n};\n\nexport enum OffersSortField {\n  AprBps = 'APR_BPS',\n  CreatedDate = 'CREATED_DATE',\n  DailyInterest = 'DAILY_INTEREST',\n  Duration = 'DURATION',\n  EffectiveAprBps = 'EFFECTIVE_APR_BPS',\n  Expiration = 'EXPIRATION',\n  Fee = 'FEE',\n  MaxPrincipal = 'MAX_PRINCIPAL',\n  NetInterest = 'NET_INTEREST',\n  NetPrincipal = 'NET_PRINCIPAL',\n  PrincipalAmount = 'PRINCIPAL_AMOUNT',\n  Repayment = 'REPAYMENT',\n  Status = 'STATUS',\n  TotalInterest = 'TOTAL_INTEREST'\n}\n\nexport type OffersSortInput = {\n  durationOfInterest?: InputMaybe<Scalars['Int']>;\n  field: OffersSortField;\n  order: Ordering;\n  principalOfInterest?: InputMaybe<Scalars['BigInt']>;\n};\n\nexport type Order = {\n  createdDate: Scalars['DateTime'];\n  currency: Currency;\n  currencyAddress: Scalars['Address'];\n  expiration?: Maybe<Scalars['DateTime']>;\n  fees: Scalars['BigInt'];\n  hidden: Scalars['Boolean'];\n  id: Scalars['String'];\n  isAsk: Scalars['Boolean'];\n  maker: Scalars['Address'];\n  marketPlace: Scalars['String'];\n  netAmount: Scalars['BigInt'];\n  nonce: Scalars['BigInt'];\n  orderType: Scalars['String'];\n  price: Scalars['BigInt'];\n  signature: Scalars['Hash'];\n  startTime: Scalars['DateTime'];\n  status: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  txHash?: Maybe<Scalars['Hash']>;\n};\n\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  edges: Array<OrderEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  cursor: Scalars['String'];\n  node: Order;\n};\n\nexport enum Ordering {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport type OutbidNotification = Node & Notification & {\n  __typename?: 'OutbidNotification';\n  auction: Auction;\n  auctionId: Scalars['String'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  newBid: Bid;\n  newBidId: Scalars['Int'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n  userBid: Bid;\n  userBidId: Scalars['Int'];\n};\n\nexport type OutstandingLoanStatistics = {\n  __typename?: 'OutstandingLoanStatistics';\n  loansData: LoansData;\n  outstandingLoanCount: Scalars['Int'];\n  outstandingPrincipal: Scalars['BigInt'];\n  totalOutstandingPrincipal: Scalars['BigInt'];\n};\n\n\nexport type OutstandingLoanStatisticsLoansDataArgs = {\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n};\n\n\nexport type OutstandingLoanStatisticsOutstandingPrincipalArgs = {\n  currencyAddress: Scalars['Address'];\n};\n\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  endCursor?: Maybe<Scalars['String']>;\n  hasNextPage: Scalars['Boolean'];\n  hasPreviousPage: Scalars['Boolean'];\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport type PointActivity = Node & {\n  __typename?: 'PointActivity';\n  id: Scalars['String'];\n  loanActivity: LoanActivity;\n  points: Scalars['BigInt'];\n  reason: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  userId: Scalars['Int'];\n};\n\nexport type PointActivityConnection = {\n  __typename?: 'PointActivityConnection';\n  edges: Array<PointActivityEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type PointActivityEdge = {\n  __typename?: 'PointActivityEdge';\n  cursor: Scalars['String'];\n  node: PointActivity;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  getCollectionBySlug?: Maybe<Collection>;\n  getCollectionLoansData: CollectionLoansData;\n  getCollectionsByContractAddress: Array<Collection>;\n  getListingById?: Maybe<Listing>;\n  getLoanById?: Maybe<Loan>;\n  getNftByContractAddressAndTokenId?: Maybe<Nft>;\n  getNftBySlugAndTokenId?: Maybe<Nft>;\n  getOutstandingLoanStatistics: OutstandingLoanStatistics;\n  getPointsFromReferrals: Scalars['Int'];\n  getReferredWallets: Scalars['Int'];\n  getUserPointActivities: PointActivityConnection;\n  getUserPoints: Scalars['Int'];\n  listAuctions: AuctionConnection;\n  listBestBidsForNft: Array<Order>;\n  listBids: BidConnection;\n  listCollections: CollectionConnection;\n  listCollectionsWithListings: CollectionConnection;\n  listCollectionsWithLoans: CollectionConnection;\n  listListings: ListingConnection;\n  listLoanActivities: LoanActivityConnection;\n  listLoans: MultiSourceLoanConnection;\n  listNftDelegations: DelegationConnection;\n  listNftOffersAndRenegotiations: SingleNftOfferCollectionOfferRenegotiationConnection;\n  listNftsFromCollections: NftConnection;\n  listNftsFromUser: NftConnection;\n  listNotifications: NotificationConnection;\n  listOffers: OfferConnection;\n  listRenegotiations: RenegotiationConnection;\n  listSaleOffers: OrderConnection;\n  listSources: SourceLostSourceConnection;\n  listUserSaleOffers: OrderConnection;\n  me?: Maybe<User>;\n};\n\n\nexport type QueryGetCollectionBySlugArgs = {\n  slug: Scalars['String'];\n};\n\n\nexport type QueryGetCollectionLoansDataArgs = {\n  collectionId: Scalars['Int'];\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n};\n\n\nexport type QueryGetCollectionsByContractAddressArgs = {\n  contractAddress: Scalars['Address'];\n};\n\n\nexport type QueryGetListingByIdArgs = {\n  listingId: Scalars['Int'];\n};\n\n\nexport type QueryGetLoanByIdArgs = {\n  address: Scalars['String'];\n  loanId: Scalars['Int'];\n};\n\n\nexport type QueryGetNftByContractAddressAndTokenIdArgs = {\n  contractAddress: Scalars['Address'];\n  tokenId: Scalars['BigInt'];\n};\n\n\nexport type QueryGetNftBySlugAndTokenIdArgs = {\n  slug: Scalars['String'];\n  tokenId: Scalars['BigInt'];\n};\n\n\nexport type QueryGetUserPointActivitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryListAuctionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  first?: InputMaybe<Scalars['Int']>;\n  sortBy?: InputMaybe<Array<AuctionSortInput>>;\n  statuses?: InputMaybe<Array<AuctionStatus>>;\n};\n\n\nexport type QueryListBestBidsForNftArgs = {\n  currencyAddress: Scalars['String'];\n  nftId: Scalars['Int'];\n};\n\n\nexport type QueryListBidsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  auctionId?: InputMaybe<Scalars['String']>;\n  bidders?: InputMaybe<Array<Scalars['String']>>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  first?: InputMaybe<Scalars['Int']>;\n  onlyLatest?: Scalars['Boolean'];\n  sortBy?: InputMaybe<Array<BidSortInput>>;\n};\n\n\nexport type QueryListCollectionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  excludeGondiUserVault?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  searchTerm?: InputMaybe<Scalars['String']>;\n  sortBy?: InputMaybe<Array<CollectionSortInput>>;\n  standards?: InputMaybe<Array<TokenStandardType>>;\n  withListings?: InputMaybe<Scalars['Boolean']>;\n  withLoans?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryListCollectionsWithListingsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  first?: Scalars['Int'];\n  searchTerm?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryListCollectionsWithLoansArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  first?: Scalars['Int'];\n  searchTerm?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryListListingsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collectionIds?: InputMaybe<Array<Scalars['Int']>>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  first?: InputMaybe<Scalars['Int']>;\n  marketplaceNames?: InputMaybe<Array<MarketplaceEnum>>;\n  searchTerm?: InputMaybe<Scalars['String']>;\n  userFilter?: InputMaybe<UserFilter>;\n  withLoans?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryListLoanActivitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: Scalars['Int'];\n  loanId?: InputMaybe<Scalars['String']>;\n  sortBy?: InputMaybe<Array<LoanActivitySortInput>>;\n  types?: InputMaybe<Array<LoanActivityType>>;\n};\n\n\nexport type QueryListLoansArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  borrowers?: InputMaybe<Array<Scalars['String']>>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  contractAddresses?: InputMaybe<Array<Scalars['Address']>>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  excludeOwn?: InputMaybe<Scalars['Boolean']>;\n  first?: Scalars['Int'];\n  hideLocked?: InputMaybe<Scalars['Boolean']>;\n  nfts?: InputMaybe<Array<Scalars['Int']>>;\n  orderByStatuses?: InputMaybe<Scalars['Boolean']>;\n  sortBy?: InputMaybe<Array<LoanSortInput>>;\n  statuses?: InputMaybe<Array<LoanStatusType>>;\n  terms?: InputMaybe<TermsFilter>;\n  withRenegRequestOnly?: Scalars['Boolean'];\n  withTopUpRequestOnly?: Scalars['Boolean'];\n};\n\n\nexport type QueryListNftDelegationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  contractAddress?: InputMaybe<Scalars['Address']>;\n  first?: Scalars['Int'];\n  nftId: Scalars['Int'];\n};\n\n\nexport type QueryListNftOffersAndRenegotiationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  first?: InputMaybe<Scalars['Int']>;\n  hidden?: InputMaybe<Scalars['Boolean']>;\n  isAddNewTranche?: InputMaybe<Scalars['Boolean']>;\n  lenders?: InputMaybe<Array<Scalars['String']>>;\n  loanId?: InputMaybe<Scalars['String']>;\n  nfts?: InputMaybe<Array<Scalars['Int']>>;\n  onlyCollectionOffers?: Scalars['Boolean'];\n  onlyInvalid?: Scalars['Boolean'];\n  onlySingleNftOffers?: Scalars['Boolean'];\n  sortBy?: InputMaybe<OffersSortInput>;\n  statuses?: InputMaybe<Array<OfferStatus>>;\n  terms?: InputMaybe<TermsFilter>;\n};\n\n\nexport type QueryListNftsFromCollectionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections: Array<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  onlyListed?: InputMaybe<Scalars['Boolean']>;\n  searchTerm?: InputMaybe<Scalars['String']>;\n  traitRanges?: InputMaybe<Array<TraitRangeOptionsInput>>;\n  traits?: InputMaybe<Array<TraitKeyValueOptionsInput>>;\n};\n\n\nexport type QueryListNftsFromUserArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collectionAddresses?: InputMaybe<Array<Scalars['Address']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  searchTerm?: InputMaybe<Scalars['String']>;\n  sortBy?: InputMaybe<Array<NftSortInput>>;\n  standards?: InputMaybe<Array<TokenStandardType>>;\n  withLoans?: InputMaybe<Scalars['Boolean']>;\n  withNoWraps?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryListNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  notificationTypes?: InputMaybe<Array<NotificationType>>;\n  onlyRead?: Scalars['Boolean'];\n  onlyUnread?: Scalars['Boolean'];\n};\n\n\nexport type QueryListOffersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  borrowerAddress?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  contractAddress?: InputMaybe<Scalars['Address']>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  first?: InputMaybe<Scalars['Int']>;\n  hidden?: InputMaybe<Scalars['Boolean']>;\n  lenders?: InputMaybe<Array<Scalars['String']>>;\n  nfts?: InputMaybe<Array<Scalars['Int']>>;\n  onlyCollectionOffers?: InputMaybe<Scalars['Boolean']>;\n  onlySingleNftOffers?: InputMaybe<Scalars['Boolean']>;\n  sortBy?: InputMaybe<Array<OffersSortInput>>;\n  statuses?: InputMaybe<Array<OfferStatus>>;\n  terms?: InputMaybe<TermsFilter>;\n  worseOffers?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryListRenegotiationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  hidden?: InputMaybe<Scalars['Boolean']>;\n  isAddNewTranche?: InputMaybe<Scalars['Boolean']>;\n  loanId?: InputMaybe<Scalars['String']>;\n  sortBy?: InputMaybe<Array<OffersSortInput>>;\n  statuses?: InputMaybe<Array<OfferStatus>>;\n  terms?: InputMaybe<RefinanceTermsFilter>;\n};\n\n\nexport type QueryListSaleOffersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  bidder?: InputMaybe<Array<Scalars['String']>>;\n  first?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryListSourcesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']>>;\n  contractAddresses?: InputMaybe<Array<Scalars['Address']>>;\n  currencyAddress?: InputMaybe<Scalars['Address']>;\n  excludeOwn?: InputMaybe<Scalars['Boolean']>;\n  first?: Scalars['Int'];\n  hideLocked?: InputMaybe<Scalars['Boolean']>;\n  includeLost?: InputMaybe<Scalars['Boolean']>;\n  lenders?: InputMaybe<Array<Scalars['String']>>;\n  loanPrincipal?: InputMaybe<Interval>;\n  sortBy?: InputMaybe<Array<SourceSortInput>>;\n  statuses?: InputMaybe<Array<LoanStatusType>>;\n  terms?: InputMaybe<TermsFilter>;\n};\n\n\nexport type QueryListUserSaleOffersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RangeInput = {\n  max: Scalars['Int'];\n  min: Scalars['Int'];\n};\n\nexport type RefinanceTermsFilter = {\n  aprBps?: InputMaybe<Interval>;\n  duration?: InputMaybe<Interval>;\n  fee?: InputMaybe<Interval>;\n  maxPrincipal?: InputMaybe<Interval>;\n  netPrincipal?: InputMaybe<Interval>;\n  principal?: InputMaybe<Interval>;\n  remainingTime?: InputMaybe<Interval>;\n};\n\nexport type Renegotiation = Node & {\n  __typename?: 'Renegotiation';\n  aprBps: Scalars['BigInt'];\n  createdDate?: Maybe<Scalars['DateTime']>;\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  feeAmount: Scalars['BigInt'];\n  hidden?: Maybe<Scalars['Boolean']>;\n  id: Scalars['String'];\n  isAddNewTranche: Scalars['Boolean'];\n  lenderAddress?: Maybe<Scalars['Address']>;\n  loan: Loan;\n  loanAddress: Scalars['Address'];\n  loanId: Scalars['BigInt'];\n  loanReferenceId: Scalars['String'];\n  nft: Nft;\n  offerHash?: Maybe<Scalars['Hash']>;\n  principalAmount: Scalars['BigInt'];\n  renegotiationId: Scalars['BigInt'];\n  repayment: Scalars['BigInt'];\n  requiresLiquidation: Scalars['Boolean'];\n  signature?: Maybe<Scalars['Signature']>;\n  signerAddress?: Maybe<Scalars['Address']>;\n  status: Scalars['String'];\n  strictImprovement: Scalars['Boolean'];\n};\n\nexport type RenegotiationConnection = {\n  __typename?: 'RenegotiationConnection';\n  edges: Array<RenegotiationEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type RenegotiationEdge = {\n  __typename?: 'RenegotiationEdge';\n  cursor: Scalars['String'];\n  node: Renegotiation;\n};\n\nexport type RenegotiationOfferInput = {\n  aprBps: Scalars['BigInt'];\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  feeAmount: Scalars['BigInt'];\n  isAddNewTranche?: InputMaybe<Scalars['Boolean']>;\n  lenderAddress: Scalars['Address'];\n  loanId: Scalars['String'];\n  principalAmount: Scalars['BigInt'];\n  requiresLiquidation?: InputMaybe<Scalars['Boolean']>;\n  signerAddress?: InputMaybe<Scalars['Address']>;\n  strictImprovement?: InputMaybe<Scalars['Boolean']>;\n  targetPrincipal?: InputMaybe<Array<Scalars['BigInt']>>;\n  trancheIndex?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type RenegotiationRequest = Node & {\n  __typename?: 'RenegotiationRequest';\n  desiredAprBps: Scalars['BigInt'];\n  desiredDuration: Scalars['BigInt'];\n  desiredPrincipalAmount: Scalars['BigInt'];\n  id: Scalars['String'];\n  loanId: Scalars['String'];\n};\n\nexport type RenegotiationRequestedNotification = Node & Notification & {\n  __typename?: 'RenegotiationRequestedNotification';\n  aprBps: Scalars['BigInt'];\n  createdOn: Scalars['DateTime'];\n  duration: Scalars['BigInt'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  principalAmount: Scalars['BigInt'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type Sale = Activity & Node & {\n  __typename?: 'Sale';\n  id: Scalars['String'];\n  nft: Nft;\n  order: Order;\n  orderId: Scalars['String'];\n  taker: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  txHash?: Maybe<Scalars['Hash']>;\n};\n\nexport type SaleOfferInput = {\n  endAmount: Scalars['BigInt'];\n  identifierOrCriteria: Scalars['BigInt'];\n  itemType: Scalars['Int'];\n  startAmount: Scalars['BigInt'];\n  token: Scalars['Address'];\n};\n\nexport type SignedOrderInput = {\n  conduitKey: Scalars['Hash'];\n  consideration: Array<ConsiderationInput>;\n  counter: Scalars['BigInt'];\n  endTime: Scalars['BigInt'];\n  offer: Array<SaleOfferInput>;\n  offerer: Scalars['Address'];\n  orderType: Scalars['Int'];\n  salt: Scalars['BigInt'];\n  signature: Scalars['Signature'];\n  startTime: Scalars['BigInt'];\n  zone: Scalars['Address'];\n  zoneHash: Scalars['Hash'];\n};\n\nexport type SignedRenegotiationOfferInput = {\n  aprBps: Scalars['BigInt'];\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  feeAmount: Scalars['BigInt'];\n  isAddNewTranche?: InputMaybe<Scalars['Boolean']>;\n  lenderAddress: Scalars['Address'];\n  loanId: Scalars['String'];\n  offerHash: Scalars['Hash'];\n  principalAmount: Scalars['BigInt'];\n  renegotiationId: Scalars['BigInt'];\n  requiresLiquidation?: InputMaybe<Scalars['Boolean']>;\n  signature: Scalars['Signature'];\n  signerAddress?: InputMaybe<Scalars['Address']>;\n  strictImprovement?: InputMaybe<Scalars['Boolean']>;\n  targetPrincipal?: InputMaybe<Array<Scalars['BigInt']>>;\n  trancheIndex?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type SingleNftOffer = Node & Offer & {\n  __typename?: 'SingleNFTOffer';\n  aprBps: Scalars['BigInt'];\n  borrowerAddress?: Maybe<Scalars['Address']>;\n  capacity: Scalars['BigInt'];\n  consumedCapacity: Scalars['BigInt'];\n  contractAddress: Scalars['Address'];\n  createdDate?: Maybe<Scalars['DateTime']>;\n  currency: Currency;\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  hidden?: Maybe<Scalars['Boolean']>;\n  id: Scalars['String'];\n  lenderAddress?: Maybe<Scalars['Address']>;\n  maxPrincipal: Scalars['BigInt'];\n  maxSeniorRepayment: Scalars['BigInt'];\n  /**\n   * Deprecated field: use maxSeniorRepayment instead.\n   * @deprecated Use maxSeniorRepayment instead.\n   */\n  maxTrancheFloor: Scalars['BigInt'];\n  netPrincipal: Scalars['BigInt'];\n  nft: Nft;\n  offerHash?: Maybe<Scalars['Hash']>;\n  offerId: Scalars['BigInt'];\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  repayment: Scalars['BigInt'];\n  requiresLiquidation?: Maybe<Scalars['Boolean']>;\n  signature?: Maybe<Scalars['Signature']>;\n  signerAddress?: Maybe<Scalars['Address']>;\n  statistics: OfferStatistics;\n  status: Scalars['String'];\n  validators: Array<OfferValidator>;\n};\n\nexport type SingleNftOfferCollectionOfferRenegotiation = CollectionOffer | Renegotiation | SingleNftOffer;\n\nexport type SingleNftOfferCollectionOfferRenegotiationConnection = {\n  __typename?: 'SingleNFTOfferCollectionOfferRenegotiationConnection';\n  edges: Array<SingleNftOfferCollectionOfferRenegotiationEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type SingleNftOfferCollectionOfferRenegotiationEdge = {\n  __typename?: 'SingleNFTOfferCollectionOfferRenegotiationEdge';\n  cursor: Scalars['String'];\n  node: SingleNftOfferCollectionOfferRenegotiation;\n};\n\nexport type SingleNftOfferInput = {\n  aprBps: Scalars['BigInt'];\n  borrowerAddress: Scalars['Address'];\n  capacity: Scalars['BigInt'];\n  contractAddress: Scalars['Address'];\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  lenderAddress: Scalars['Address'];\n  maxSeniorRepayment?: InputMaybe<Scalars['BigInt']>;\n  maxTrancheFloor?: InputMaybe<Scalars['BigInt']>;\n  nftId: Scalars['Int'];\n  offerValidators: Array<OfferValidatorInput>;\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  requiresLiquidation?: InputMaybe<Scalars['Boolean']>;\n  signerAddress?: InputMaybe<Scalars['Address']>;\n};\n\nexport type SingleNftOrder = Activity & Node & Order & {\n  __typename?: 'SingleNFTOrder';\n  createdDate: Scalars['DateTime'];\n  currency: Currency;\n  currencyAddress: Scalars['Address'];\n  expiration?: Maybe<Scalars['DateTime']>;\n  fees: Scalars['BigInt'];\n  hidden: Scalars['Boolean'];\n  id: Scalars['String'];\n  isAsk: Scalars['Boolean'];\n  maker: Scalars['Address'];\n  marketPlace: Scalars['String'];\n  netAmount: Scalars['BigInt'];\n  nft: Nft;\n  nonce: Scalars['BigInt'];\n  orderType: Scalars['String'];\n  price: Scalars['BigInt'];\n  signature: Scalars['Hash'];\n  startTime: Scalars['DateTime'];\n  status: Scalars['String'];\n  timestamp: Scalars['DateTime'];\n  txHash?: Maybe<Scalars['Hash']>;\n};\n\nexport type SingleNftSignedOfferInput = {\n  aprBps: Scalars['BigInt'];\n  borrowerAddress: Scalars['Address'];\n  capacity: Scalars['BigInt'];\n  contractAddress: Scalars['Address'];\n  duration: Scalars['BigInt'];\n  expirationTime: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  lenderAddress: Scalars['Address'];\n  maxSeniorRepayment?: InputMaybe<Scalars['BigInt']>;\n  maxTrancheFloor?: InputMaybe<Scalars['BigInt']>;\n  nftId: Scalars['Int'];\n  offerHash: Scalars['Hash'];\n  offerId: Scalars['BigInt'];\n  offerValidators: Array<OfferValidatorInput>;\n  principalAddress: Scalars['Address'];\n  principalAmount: Scalars['BigInt'];\n  requiresLiquidation?: InputMaybe<Scalars['Boolean']>;\n  signature: Scalars['Signature'];\n  signerAddress?: InputMaybe<Scalars['Address']>;\n};\n\nexport type Source = Node & {\n  __typename?: 'Source';\n  accruedInterest: Scalars['BigInt'];\n  aprBps: Scalars['BigInt'];\n  id: Scalars['String'];\n  lenderAddress: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  loanIndex?: Maybe<Scalars['Int']>;\n  loanReferenceId: Scalars['String'];\n  originationFee: Scalars['BigInt'];\n  principalAmount: Scalars['BigInt'];\n  refinanceNetAprBps: Scalars['BigInt'];\n  seniorPrincipalAmount?: Maybe<Scalars['BigInt']>;\n  startTime: Scalars['DateTime'];\n};\n\nexport type SourceHistory = Node & {\n  __typename?: 'SourceHistory';\n  accruedInterest: Scalars['BigInt'];\n  aprBps: Scalars['BigInt'];\n  id: Scalars['String'];\n  lenderAddress: Scalars['String'];\n  loanId: Scalars['String'];\n  loanIndex?: Maybe<Scalars['Int']>;\n  originationFee: Scalars['BigInt'];\n  principalAmount: Scalars['BigInt'];\n  seniorPrincipalAmount?: Maybe<Scalars['BigInt']>;\n  startTime: Scalars['DateTime'];\n};\n\nexport type SourceLostSource = LostSource | Source;\n\nexport type SourceLostSourceConnection = {\n  __typename?: 'SourceLostSourceConnection';\n  edges: Array<SourceLostSourceEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type SourceLostSourceEdge = {\n  __typename?: 'SourceLostSourceEdge';\n  cursor: Scalars['String'];\n  node: SourceLostSource;\n};\n\nexport enum SourceSortField {\n  AccruedInterest = 'ACCRUED_INTEREST',\n  AprBps = 'APR_BPS',\n  DueDate = 'DUE_DATE',\n  Duration = 'DURATION',\n  EarnedInterest = 'EARNED_INTEREST',\n  OriginationFee = 'ORIGINATION_FEE',\n  PrincipalAmount = 'PRINCIPAL_AMOUNT',\n  RefinanceNetAprBps = 'REFINANCE_NET_APR_BPS',\n  StartTime = 'START_TIME'\n}\n\nexport type SourceSortInput = {\n  field: SourceSortField;\n  order: Ordering;\n};\n\nexport type StatByCollection = {\n  __typename?: 'StatByCollection';\n  collection: Collection;\n  value: Scalars['BigInt'];\n};\n\nexport type TermsFilter = {\n  aprBps?: InputMaybe<Interval>;\n  duration?: InputMaybe<Interval>;\n  fee?: InputMaybe<Interval>;\n  maxPrincipal?: InputMaybe<Interval>;\n  netPrincipal?: InputMaybe<Interval>;\n  principal?: InputMaybe<Interval>;\n  remainingTime?: InputMaybe<Interval>;\n};\n\nexport enum TokenStandardType {\n  Erc721 = 'ERC721',\n  Erc1155 = 'ERC1155',\n  OldErc721 = 'OLD_ERC721'\n}\n\nexport type TopUpRequest = Node & {\n  __typename?: 'TopUpRequest';\n  desiredAprBps: Scalars['BigInt'];\n  desiredTopUp: Scalars['BigInt'];\n  id: Scalars['String'];\n  loanId: Scalars['String'];\n};\n\nexport type TopUpRequestedNotification = Node & Notification & {\n  __typename?: 'TopUpRequestedNotification';\n  aprBps: Scalars['BigInt'];\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  loan: MultiSourceLoan;\n  loanId: Scalars['String'];\n  notificationType: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  topUp: Scalars['BigInt'];\n  user: User;\n};\n\nexport type Trait = {\n  __typename?: 'Trait';\n  collectionId: Scalars['String'];\n  statistics: CollectionStatistics;\n  type: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type TraitKeyValueOptionsInput = {\n  key: Scalars['String'];\n  values: Array<Scalars['String']>;\n};\n\nexport type TraitRangeOptionsInput = {\n  key: Scalars['String'];\n  range: RangeInput;\n};\n\nexport type UnderfundedOfferNotification = Node & Notification & {\n  __typename?: 'UnderfundedOfferNotification';\n  createdOn: Scalars['DateTime'];\n  id: Scalars['String'];\n  notificationType: Scalars['String'];\n  offer: Offer;\n  offerId: Scalars['String'];\n  readOn?: Maybe<Scalars['DateTime']>;\n  user: User;\n};\n\nexport type User = Node & {\n  __typename?: 'User';\n  about?: Maybe<Scalars['String']>;\n  beta: Scalars['Boolean'];\n  blockchain: Scalars['String'];\n  createdDate: Scalars['DateTime'];\n  id: Scalars['String'];\n  linkedWallets: Array<LinkedWallets>;\n  mail?: Maybe<Scalars['String']>;\n  mailValidationDate?: Maybe<Scalars['DateTime']>;\n  originalProfilePicture?: Maybe<Scalars['String']>;\n  profilePictureId?: Maybe<Scalars['Int']>;\n  size64ProfilePicture?: Maybe<Scalars['String']>;\n  size128ProfilePicture?: Maybe<Scalars['String']>;\n  size256ProfilePicture?: Maybe<Scalars['String']>;\n  size512ProfilePicture?: Maybe<Scalars['String']>;\n  statistics: UserStatistics;\n  twitterHandle?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  usedProduct: Scalars['Boolean'];\n  username?: Maybe<Scalars['String']>;\n  walletAddress: Scalars['Address'];\n};\n\nexport type UserFilter = {\n  onlyOrExclude: Scalars['Boolean'];\n  userId: Scalars['Int'];\n};\n\nexport type UserStatistics = {\n  __typename?: 'UserStatistics';\n  defaultedPrincipal: Scalars['BigInt'];\n  interestEarnedByCollection: Array<StatByCollection>;\n  loanCount: Scalars['BigInt'];\n  loanCountByCollection: Array<StatByCollection>;\n  loanPrincipalByCollection: Array<StatByCollection>;\n  originationCountAndPrincipalByMonth: Array<Array<Scalars['BigInt']>>;\n  outstandingPrincipal: Scalars['BigInt'];\n  renegotiationCountAndPrincipalByMonth: Array<Array<Scalars['BigInt']>>;\n  totalLentPrincipal: Scalars['BigInt'];\n  wavgActualAprByCollection: Array<StatByCollection>;\n  wavgExpectedAprByCollection: Array<StatByCollection>;\n  wavgOutstandingApr: Scalars['BigInt'];\n  wavgRepaidApr: Scalars['BigInt'];\n};\n\n\nexport type UserStatisticsDefaultedPrincipalArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsInterestEarnedByCollectionArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsLoanCountArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsLoanCountByCollectionArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsLoanPrincipalByCollectionArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsOriginationCountAndPrincipalByMonthArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsOutstandingPrincipalArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsRenegotiationCountAndPrincipalByMonthArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsTotalLentPrincipalArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsWavgActualAprByCollectionArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsWavgExpectedAprByCollectionArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsWavgOutstandingAprArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\n\nexport type UserStatisticsWavgRepaidAprArgs = {\n  currencyAddress: Scalars['Address'];\n  walletsAddresses: Array<Scalars['Address']>;\n};\n\nexport type CurrencyAmountInfoFragment = { __typename?: 'CurrencyAmount', amount: number, currency: { __typename?: 'Currency', address: Address, decimals: number } };\n\nexport type CurrencyInfoFragment = { __typename?: 'Currency', address: Address, decimals: number };\n\nexport type SaleOfferInfoFragment = { __typename?: 'SingleNFTOrder', id: string, netAmount: bigint, status: string, marketPlace: string, fees: bigint, maker: Address, expiration?: Date | null, createdDate: Date, startTime: Date, hidden: boolean, signature: Hash, currencyAddress: Address, nonce: bigint };\n\nexport type ListNftMutationVariables = Exact<{\n  nftId: Scalars['Int'];\n}>;\n\n\nexport type ListNftMutation = { __typename?: 'Mutation', addOrUpdateListing: { __typename?: 'Listing', id: string } };\n\nexport type UnlistNftMutationVariables = Exact<{\n  nftId: Scalars['Int'];\n}>;\n\n\nexport type UnlistNftMutation = { __typename?: 'Mutation', removeListing: { __typename?: 'Listing', id: string } };\n\nexport type GenerateCollectionOfferHashMutationVariables = Exact<{\n  offerInput: CollectionOfferInput;\n}>;\n\n\nexport type GenerateCollectionOfferHashMutation = { __typename?: 'Mutation', offer: { __typename?: 'CollectionOffer', offerHash?: Hash | null, offerId: bigint, lenderAddress?: Address | null, signerAddress?: Address | null, borrowerAddress?: Address | null, validators: Array<{ __typename?: 'OfferValidator', validator: Address, arguments: Hex }>, collection: { __typename?: 'Collection', contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } } };\n\nexport type SaveCollectionOfferMutationVariables = Exact<{\n  offer: CollectionSignedOfferInput;\n}>;\n\n\nexport type SaveCollectionOfferMutation = { __typename?: 'Mutation', offer: { __typename?: 'CollectionOffer', id: string, status: string, collection: { __typename?: 'Collection', contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } } };\n\nexport type HideOfferMutationVariables = Exact<{\n  contract: Scalars['Address'];\n  id: Scalars['String'];\n}>;\n\n\nexport type HideOfferMutation = { __typename?: 'Mutation', hideOffer: { __typename?: 'CollectionOffer', id: string } | { __typename?: 'SingleNFTOffer', id: string } };\n\nexport type GenerateSingleNftOfferHashMutationVariables = Exact<{\n  offerInput: SingleNftOfferInput;\n}>;\n\n\nexport type GenerateSingleNftOfferHashMutation = { __typename?: 'Mutation', offer: { __typename?: 'SingleNFTOffer', offerHash?: Hash | null, offerId: bigint, lenderAddress?: Address | null, signerAddress?: Address | null, borrowerAddress?: Address | null, validators: Array<{ __typename?: 'OfferValidator', validator: Address, arguments: Hex }>, nft: { __typename?: 'NFT', tokenId: bigint, collection?: { __typename?: 'Collection', contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } | null } } };\n\nexport type SaveSingleNftOfferMutationVariables = Exact<{\n  offer: SingleNftSignedOfferInput;\n}>;\n\n\nexport type SaveSingleNftOfferMutation = { __typename?: 'Mutation', offer: { __typename?: 'SingleNFTOffer', id: string, status: string, nft: { __typename?: 'NFT', tokenId: bigint, collection?: { __typename?: 'Collection', contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } | null } } };\n\nexport type UnhideOfferMutationVariables = Exact<{\n  contract: Scalars['Address'];\n  id: Scalars['String'];\n}>;\n\n\nexport type UnhideOfferMutation = { __typename?: 'Mutation', showOffer: { __typename?: 'CollectionOffer', id: string } | { __typename?: 'SingleNFTOffer', id: string } };\n\nexport type GenerateRenegotiationOfferHashMutationVariables = Exact<{\n  renegotiationInput: RenegotiationOfferInput;\n}>;\n\n\nexport type GenerateRenegotiationOfferHashMutation = { __typename?: 'Mutation', offer: { __typename?: 'Renegotiation', loanId: bigint, renegotiationId: bigint, offerHash?: Hash | null, lenderAddress?: Address | null, signerAddress?: Address | null, nft: { __typename?: 'NFT', tokenId: bigint, collection?: { __typename?: 'Collection', contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } | null } } };\n\nexport type HideRenegotiationOfferMutationVariables = Exact<{\n  id: Scalars['String'];\n  contractAddress: Scalars['Address'];\n}>;\n\n\nexport type HideRenegotiationOfferMutation = { __typename?: 'Mutation', hideRenegotiation: { __typename?: 'Renegotiation', id: string } };\n\nexport type SaveRenegotiationOfferMutationVariables = Exact<{\n  offer: SignedRenegotiationOfferInput;\n}>;\n\n\nexport type SaveRenegotiationOfferMutation = { __typename?: 'Mutation', offer: { __typename?: 'Renegotiation', id: string, status: string } };\n\nexport type UnhideRenegotiationOfferMutationVariables = Exact<{\n  id: Scalars['String'];\n  contractAddress: Scalars['Address'];\n}>;\n\n\nexport type UnhideRenegotiationOfferMutation = { __typename?: 'Mutation', showRenegotiation: { __typename?: 'Renegotiation', id: string } };\n\nexport type HideSaleOfferMutationVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type HideSaleOfferMutation = { __typename?: 'Mutation', hideSaleOffer: { __typename?: 'SingleNFTOrder', id: string } };\n\nexport type ListBestBidsForNftQueryVariables = Exact<{\n  nftId: Scalars['Int'];\n  currencyAddress: Scalars['String'];\n}>;\n\n\nexport type ListBestBidsForNftQuery = { __typename?: 'Query', bids: Array<{ __typename?: 'CollectionOrder', id: string, netAmount: bigint, status: string, marketPlace: string, fees: bigint, maker: Address, expiration?: Date | null, createdDate: Date, hidden: boolean, signature: Hash, currencyAddress: Address, startTime: Date, nonce: bigint } | { __typename?: 'SingleNFTOrder', id: string, netAmount: bigint, status: string, marketPlace: string, fees: bigint, maker: Address, expiration?: Date | null, createdDate: Date, hidden: boolean, signature: Hash, currencyAddress: Address, startTime: Date, nonce: bigint }> };\n\nexport type SaveSignedSaleOfferMutationVariables = Exact<{\n  offer: SignedOrderInput;\n}>;\n\n\nexport type SaveSignedSaleOfferMutation = { __typename?: 'Mutation', offer: { __typename?: 'SingleNFTOrder', id: string, status: string } };\n\nexport type UnhideSaleOfferMutationVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type UnhideSaleOfferMutation = { __typename?: 'Mutation', showSaleOffer: { __typename?: 'SingleNFTOrder', id: string } };\n\nexport type CollectionsQueryVariables = Exact<{\n  currency: Scalars['Address'];\n  after?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type CollectionsQuery = { __typename?: 'Query', collections: { __typename?: 'CollectionConnection', pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean }, edges: Array<{ __typename?: 'CollectionEdge', node: { __typename?: 'Collection', id: string, name?: string | null, slug?: string | null, description?: string | null, discordUrl?: string | null, twitterUsername?: string | null, externalUrl?: string | null, collectionUrl?: string | null, verified: boolean, image?: { __typename?: 'Asset', cacheUrl?: string | null } | null, bannerImage?: { __typename?: 'Asset', cacheUrl?: string | null } | null, contractData?: { __typename?: 'ContractData', blockchain: string, contractAddress: Address, createdDate: Date, creatorAddress?: Address | null } | null, statistics: { __typename?: 'CollectionStatistics', floorPrice7d?: number | null, floorPrice30d?: number | null, totalVolume?: number | null, totalVolume1y?: number | null, totalVolume3m?: number | null, totalVolume1m?: number | null, totalVolume1w?: number | null, totalLoanVolume: bigint, totalLoanVolume1w: bigint, totalLoanVolume1m: bigint, totalLoanVolume3m: bigint, totalLoanVolume1y: bigint, numberOfPricedNfts: number, nftsCount?: number | null, percentageInOutstandingLoans: number, repaymentRate: number, numberOfOffers: number, floorPrice?: { __typename?: 'CurrencyAmount', amount: number, currency: { __typename?: 'Currency', address: Address, decimals: number } } | null, bestOffer?: { __typename?: 'CurrencyAmount', amount: number, currency: { __typename?: 'Currency', address: Address, decimals: number } } | null } } }> } };\n\nexport type CollectionsIdByContractAddressQueryVariables = Exact<{\n  contractAddress: Scalars['Address'];\n}>;\n\n\nexport type CollectionsIdByContractAddressQuery = { __typename?: 'Query', collections: Array<{ __typename?: 'Collection', id: string }> };\n\nexport type CollectionIdBySlugQueryVariables = Exact<{\n  slug: Scalars['String'];\n}>;\n\n\nexport type CollectionIdBySlugQuery = { __typename?: 'Query', collection?: { __typename?: 'Collection', id: string } | null };\n\nexport type ListListingsQueryVariables = Exact<{\n  collections?: InputMaybe<Array<Scalars['Int']> | Scalars['Int']>;\n  userFilter?: InputMaybe<UserFilter>;\n  marketplaceNames?: InputMaybe<Array<MarketplaceEnum> | MarketplaceEnum>;\n  first?: InputMaybe<Scalars['Int']>;\n  after?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type ListListingsQuery = { __typename?: 'Query', result: { __typename?: 'ListingConnection', pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean }, edges: Array<{ __typename?: 'ListingEdge', node: { __typename?: 'Listing', id: string, marketplaceName: MarketplaceEnum, createdDate: Date, desiredDuration?: number | null, desiredPrincipalAddress?: Address | null, user: { __typename?: 'User', walletAddress: Address }, nft: { __typename?: 'NFT', id: string, tokenId: bigint, collection?: { __typename?: 'Collection', id: string, slug?: string | null, contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } | null } } }> } };\n\nexport type ListLoansQueryVariables = Exact<{\n  borrowers?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;\n  collections?: InputMaybe<Array<Scalars['Int']> | Scalars['Int']>;\n  nfts?: InputMaybe<Array<Scalars['Int']> | Scalars['Int']>;\n  statuses?: InputMaybe<Array<LoanStatusType> | LoanStatusType>;\n  sortBy?: InputMaybe<Array<LoanSortInput> | LoanSortInput>;\n  terms?: InputMaybe<TermsFilter>;\n  orderByStatuses?: InputMaybe<Scalars['Boolean']>;\n  loansCurrencyAddress?: InputMaybe<Scalars['Address']>;\n  first?: InputMaybe<Scalars['Int']>;\n  after?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type ListLoansQuery = { __typename?: 'Query', loans: { __typename?: 'MultiSourceLoanConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean }, edges: Array<{ __typename?: 'MultiSourceLoanEdge', node: { __typename?: 'MultiSourceLoan', id: string, address: Address, loanId: number, timestamp: Date, txHash: Hash, indexInBlock: number, borrowerAddress: Address, principalAddress: Address, startTime: Date, duration: bigint, status: string, principalAmount: bigint, blendedAprBps: number, totalOriginationFee: bigint, protocolFee: bigint, offer: { __typename?: 'CollectionOffer', offerId: bigint, signerAddress?: Address | null } | { __typename?: 'SingleNFTOffer', offerId: bigint, signerAddress?: Address | null }, currency: { __typename?: 'Currency', symbol: string, decimals: number, address: Address }, repaidActivity?: { __typename?: 'LoanRepaid', totalInterest: bigint, timestamp: Date } | null, nft: { __typename?: 'NFT', id: string, name?: string | null, tokenId: bigint, nftId: string, owner?: Address | null, image?: { __typename?: 'Asset', data: string, cacheUrl?: string | null, contentTypeMime: string, accessTypeName: string } | null, collection?: { __typename?: 'Collection', id: string, slug?: string | null, name?: string | null, nftsCount?: number | null, contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } | null }, sources: Array<{ __typename?: 'Source', id: string, loanId: string, originationFee: bigint, principalAmount: bigint, lenderAddress: string, accruedInterest: bigint, aprBps: bigint, startTime: Date }> } }> } };\n\nexport type NftIdByContractAddressAndTokenIdQueryVariables = Exact<{\n  contractAddress: Scalars['Address'];\n  tokenId: Scalars['BigInt'];\n}>;\n\n\nexport type NftIdByContractAddressAndTokenIdQuery = { __typename?: 'Query', nft?: { __typename?: 'NFT', id: string } | null };\n\nexport type NftIdBySlugTokenIdQueryVariables = Exact<{\n  slug: Scalars['String'];\n  tokenId: Scalars['BigInt'];\n}>;\n\n\nexport type NftIdBySlugTokenIdQuery = { __typename?: 'Query', nft?: { __typename?: 'NFT', id: string } | null };\n\nexport type OwnedNftsQueryVariables = Exact<{\n  after?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type OwnedNftsQuery = { __typename?: 'Query', ownedNfts: { __typename?: 'NFTConnection', pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean }, edges: Array<{ __typename?: 'NFTEdge', node: { __typename?: 'NFT', id: string, tokenId: bigint, price?: bigint | null, priceCurrencyAddress?: string | null, collection?: { __typename?: 'Collection', id: string } | null, activeLoan?: { __typename?: 'MultiSourceLoan', id: string } | null, statistics: { __typename?: 'NftStatistics', lastSale?: { __typename?: 'Sale', order: { __typename?: 'CollectionOrder', price: bigint, currency: { __typename?: 'Currency', address: Address, decimals: number } } | { __typename?: 'SingleNFTOrder', price: bigint, currency: { __typename?: 'Currency', address: Address, decimals: number } } } | null, topTraitFloorPrice?: { __typename?: 'CurrencyAmount', amount: number, currency: { __typename?: 'Currency', address: Address, decimals: number } } | null } } }> } };\n\nexport type ListOffersQueryVariables = Exact<{\n  borrowerAddress?: InputMaybe<Scalars['String']>;\n  lenders?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;\n  sortBy: OffersSortInput;\n  terms?: InputMaybe<TermsFilter>;\n  statuses?: InputMaybe<Array<OfferStatus> | OfferStatus>;\n  nfts?: InputMaybe<Array<Scalars['Int']> | Scalars['Int']>;\n  collections?: InputMaybe<Array<Scalars['Int']> | Scalars['Int']>;\n  onlySingleNftOffers?: InputMaybe<Scalars['Boolean']>;\n  onlyCollectionOffers?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  after?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type ListOffersQuery = { __typename?: 'Query', result: { __typename?: 'OfferConnection', pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean }, edges: Array<{ __typename?: 'OfferEdge', node: { __typename?: 'CollectionOffer', id: string, offerId: bigint, lenderAddress?: Address | null, borrowerAddress?: Address | null, signerAddress?: Address | null, contractAddress: Address, requiresLiquidation?: boolean | null, principalAddress: Address, principalAmount: bigint, aprBps: bigint, fee: bigint, capacity: bigint, expirationTime: bigint, duration: bigint, status: string, offerHash?: Hash | null, signature?: Hex | null, createdDate?: Date | null, repayment: bigint, hidden?: boolean | null, maxSeniorRepayment: bigint, collection: { __typename?: 'Collection', id: string, slug?: string | null, contractData?: { __typename?: 'ContractData', contractAddress: Address } | null }, currency: { __typename?: 'Currency', symbol: string, decimals: number, address: Address }, validators: Array<{ __typename?: 'OfferValidator', arguments: Hex, validator: Address }> } | { __typename?: 'SingleNFTOffer', id: string, offerId: bigint, lenderAddress?: Address | null, borrowerAddress?: Address | null, signerAddress?: Address | null, contractAddress: Address, requiresLiquidation?: boolean | null, principalAddress: Address, principalAmount: bigint, aprBps: bigint, fee: bigint, capacity: bigint, expirationTime: bigint, duration: bigint, status: string, offerHash?: Hash | null, signature?: Hex | null, createdDate?: Date | null, repayment: bigint, hidden?: boolean | null, maxSeniorRepayment: bigint, nft: { __typename?: 'NFT', id: string, tokenId: bigint, collection?: { __typename?: 'Collection', id: string, slug?: string | null, contractData?: { __typename?: 'ContractData', contractAddress: Address } | null } | null }, currency: { __typename?: 'Currency', symbol: string, decimals: number, address: Address }, validators: Array<{ __typename?: 'OfferValidator', arguments: Hex, validator: Address }> } }> } };\n\nexport type ActiveOfferNotificationKeySpecifier = ('createdOn' | 'id' | 'notificationType' | 'offer' | 'offerId' | 'readOn' | 'user' | ActiveOfferNotificationKeySpecifier)[];\nexport type ActiveOfferNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\toffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type ActivityKeySpecifier = ('id' | 'timestamp' | 'txHash' | ActivityKeySpecifier)[];\nexport type ActivityFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AssetKeySpecifier = ('accessTypeName' | 'cacheUrl' | 'contentTypeMime' | 'data' | AssetKeySpecifier)[];\nexport type AssetFieldPolicy = {\n\taccessTypeName?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcacheUrl?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontentTypeMime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdata?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionKeySpecifier = ('duration' | 'endTime' | 'highestBid' | 'id' | 'loan' | 'minBid' | 'originator' | 'settler' | 'startTime' | 'status' | 'triggerFee' | AuctionKeySpecifier)[];\nexport type AuctionFieldPolicy = {\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tendTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\thighestBid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminBid?: FieldPolicy<any> | FieldReadFunction<any>,\n\toriginator?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsettler?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttriggerFee?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionBidConfirmationNotificationKeySpecifier = ('auction' | 'auctionId' | 'bid' | 'bidId' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | AuctionBidConfirmationNotificationKeySpecifier)[];\nexport type AuctionBidConfirmationNotificationFieldPolicy = {\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tbid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tbidId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | AuctionConnectionKeySpecifier)[];\nexport type AuctionConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionEdgeKeySpecifier = ('cursor' | 'node' | AuctionEdgeKeySpecifier)[];\nexport type AuctionEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionEndedNotificationKeySpecifier = ('auction' | 'auctionId' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | AuctionEndedNotificationKeySpecifier)[];\nexport type AuctionEndedNotificationFieldPolicy = {\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionStartedNotificationKeySpecifier = ('auction' | 'auctionId' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | AuctionStartedNotificationKeySpecifier)[];\nexport type AuctionStartedNotificationFieldPolicy = {\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type AuctionWonNotificationKeySpecifier = ('auction' | 'auctionId' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | AuctionWonNotificationKeySpecifier)[];\nexport type AuctionWonNotificationFieldPolicy = {\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type BidKeySpecifier = ('amount' | 'auction' | 'auctionId' | 'bidder' | 'id' | 'indexInBlock' | 'timestamp' | 'txHash' | BidKeySpecifier)[];\nexport type BidFieldPolicy = {\n\tamount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tbidder?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type BidConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | BidConnectionKeySpecifier)[];\nexport type BidConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type BidEdgeKeySpecifier = ('cursor' | 'node' | BidEdgeKeySpecifier)[];\nexport type BidEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionKeySpecifier = ('bannerImage' | 'collectionUrl' | 'contractData' | 'description' | 'discordUrl' | 'externalUrl' | 'id' | 'image' | 'imageId' | 'name' | 'nftsCount' | 'slug' | 'statistics' | 'twitterUsername' | 'verified' | CollectionKeySpecifier)[];\nexport type CollectionFieldPolicy = {\n\tbannerImage?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcollectionUrl?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractData?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdescription?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdiscordUrl?: FieldPolicy<any> | FieldReadFunction<any>,\n\texternalUrl?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\timage?: FieldPolicy<any> | FieldReadFunction<any>,\n\timageId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tname?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnftsCount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tslug?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttwitterUsername?: FieldPolicy<any> | FieldReadFunction<any>,\n\tverified?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | CollectionConnectionKeySpecifier)[];\nexport type CollectionConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionEdgeKeySpecifier = ('cursor' | 'node' | CollectionEdgeKeySpecifier)[];\nexport type CollectionEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionLoansDataKeySpecifier = ('maxAprBps' | 'maxPrincipalAmount' | 'maxRemainingTime' | 'minAprBps' | 'minPrincipalAmount' | 'minRemainingTime' | CollectionLoansDataKeySpecifier)[];\nexport type CollectionLoansDataFieldPolicy = {\n\tmaxAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxRemainingTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminRemainingTime?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionOfferKeySpecifier = ('aprBps' | 'borrowerAddress' | 'capacity' | 'collection' | 'consumedCapacity' | 'contractAddress' | 'createdDate' | 'currency' | 'duration' | 'expirationTime' | 'fee' | 'hidden' | 'id' | 'lenderAddress' | 'maxPrincipal' | 'maxSeniorRepayment' | 'maxTrancheFloor' | 'netPrincipal' | 'offerHash' | 'offerId' | 'principalAddress' | 'principalAmount' | 'repayment' | 'requiresLiquidation' | 'signature' | 'signerAddress' | 'statistics' | 'status' | 'validators' | CollectionOfferKeySpecifier)[];\nexport type CollectionOfferFieldPolicy = {\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tborrowerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcapacity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\tconsumedCapacity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpirationTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfee?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxSeniorRepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxTrancheFloor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnetPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferHash?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\trequiresLiquidation?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\tvalidators?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionOfferStatisticsKeySpecifier = ('acceptedLoans' | 'consumedCapacity' | CollectionOfferStatisticsKeySpecifier)[];\nexport type CollectionOfferStatisticsFieldPolicy = {\n\tacceptedLoans?: FieldPolicy<any> | FieldReadFunction<any>,\n\tconsumedCapacity?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionOrderKeySpecifier = ('collection' | 'createdDate' | 'currency' | 'currencyAddress' | 'expiration' | 'fees' | 'hidden' | 'id' | 'isAsk' | 'maker' | 'marketPlace' | 'netAmount' | 'nonce' | 'orderType' | 'price' | 'signature' | 'startTime' | 'status' | 'timestamp' | 'txHash' | CollectionOrderKeySpecifier)[];\nexport type CollectionOrderFieldPolicy = {\n\tcollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrencyAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpiration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfees?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tisAsk?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaker?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarketPlace?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnetAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnonce?: FieldPolicy<any> | FieldReadFunction<any>,\n\torderType?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CollectionStatisticsKeySpecifier = ('bestOffer' | 'floorPrice' | 'floorPrice7d' | 'floorPrice30d' | 'lastSale' | 'nftsCount' | 'numberOfOffers' | 'numberOfPricedNfts' | 'outstandingLoanCount' | 'outstandingPrincipal' | 'percentageInOutstandingLoans' | 'repaymentRate' | 'totalLoanVolume' | 'totalLoanVolume1d' | 'totalLoanVolume1m' | 'totalLoanVolume1w' | 'totalLoanVolume1y' | 'totalLoanVolume2m' | 'totalLoanVolume3m' | 'totalLoanVolume4m' | 'totalOutstandingPrincipal' | 'totalVolume' | 'totalVolume1d' | 'totalVolume1m' | 'totalVolume1w' | 'totalVolume1y' | 'totalVolume2m' | 'totalVolume3m' | 'totalVolume4m' | CollectionStatisticsKeySpecifier)[];\nexport type CollectionStatisticsFieldPolicy = {\n\tbestOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfloorPrice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfloorPrice7d?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfloorPrice30d?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlastSale?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnftsCount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnumberOfOffers?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnumberOfPricedNfts?: FieldPolicy<any> | FieldReadFunction<any>,\n\toutstandingLoanCount?: FieldPolicy<any> | FieldReadFunction<any>,\n\toutstandingPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpercentageInOutstandingLoans?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepaymentRate?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume1d?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume1m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume1w?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume1y?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume2m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume3m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLoanVolume4m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalOutstandingPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1d?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1w?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1y?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume2m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume3m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume4m?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type ContractDataKeySpecifier = ('blockchain' | 'contractAddress' | 'createdDate' | 'creatorAddress' | 'id' | 'standard' | ContractDataKeySpecifier)[];\nexport type ContractDataFieldPolicy = {\n\tblockchain?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatorAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstandard?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CurrencyKeySpecifier = ('address' | 'currentEthRate' | 'currentUsdcPrice' | 'decimals' | 'id' | 'symbol' | CurrencyKeySpecifier)[];\nexport type CurrencyFieldPolicy = {\n\taddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrentEthRate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrentUsdcPrice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdecimals?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsymbol?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type CurrencyAmountKeySpecifier = ('amount' | 'currency' | CurrencyAmountKeySpecifier)[];\nexport type CurrencyAmountFieldPolicy = {\n\tamount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type DelegationKeySpecifier = ('contractAddress' | 'delegateTo' | 'id' | 'nft' | 'timestamp' | DelegationKeySpecifier)[];\nexport type DelegationFieldPolicy = {\n\tcontractAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdelegateTo?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type DelegationConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | DelegationConnectionKeySpecifier)[];\nexport type DelegationConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type DelegationEdgeKeySpecifier = ('cursor' | 'node' | DelegationEdgeKeySpecifier)[];\nexport type DelegationEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LinkedWalletsKeySpecifier = ('id' | 'pending' | 'shouldAccept' | 'walletAddress' | LinkedWalletsKeySpecifier)[];\nexport type LinkedWalletsFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpending?: FieldPolicy<any> | FieldReadFunction<any>,\n\tshouldAccept?: FieldPolicy<any> | FieldReadFunction<any>,\n\twalletAddress?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type ListingKeySpecifier = ('createdDate' | 'desiredDuration' | 'desiredPrincipalAddress' | 'expirationDate' | 'id' | 'marketplaceName' | 'nft' | 'user' | ListingKeySpecifier)[];\nexport type ListingFieldPolicy = {\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdesiredDuration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdesiredPrincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpirationDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarketplaceName?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type ListingConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | ListingConnectionKeySpecifier)[];\nexport type ListingConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type ListingEdgeKeySpecifier = ('cursor' | 'node' | ListingEdgeKeySpecifier)[];\nexport type ListingEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanKeySpecifier = ('activities' | 'address' | 'borrowerAddress' | 'contractStartTime' | 'currency' | 'duration' | 'id' | 'indexInBlock' | 'loanId' | 'offer' | 'offerIds' | 'principalAddress' | 'protocolFee' | 'repaidActivity' | 'startTime' | 'status' | 'timestamp' | 'txHash' | LoanKeySpecifier)[];\nexport type LoanFieldPolicy = {\n\tactivities?: FieldPolicy<any> | FieldReadFunction<any>,\n\taddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tborrowerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractStartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\toffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferIds?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprotocolFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepaidActivity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanActivityKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanActivityKeySpecifier)[];\nexport type LoanActivityFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanActivityConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | LoanActivityConnectionKeySpecifier)[];\nexport type LoanActivityConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanActivityEdgeKeySpecifier = ('cursor' | 'node' | LoanActivityEdgeKeySpecifier)[];\nexport type LoanActivityEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanAuctionedKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'loanPayments' | 'multiSourceLoanHistory' | 'timestamp' | 'totalAuctioned' | 'txHash' | LoanAuctionedKeySpecifier)[];\nexport type LoanAuctionedFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanPayments?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalAuctioned?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanAuctionedNotificationKeySpecifier = ('auction' | 'auctionId' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | LoanAuctionedNotificationKeySpecifier)[];\nexport type LoanAuctionedNotificationFieldPolicy = {\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanDefaultReminderNotificationKeySpecifier = ('createdOn' | 'defaultsInHours' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | LoanDefaultReminderNotificationKeySpecifier)[];\nexport type LoanDefaultReminderNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdefaultsInHours?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanDefaultedNotificationKeySpecifier = ('createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | LoanDefaultedNotificationKeySpecifier)[];\nexport type LoanDefaultedNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanExtendedKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanExtendedKeySpecifier)[];\nexport type LoanExtendedFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanExtendedNotificationKeySpecifier = ('createdOn' | 'id' | 'newHistory' | 'newHistoryId' | 'notificationType' | 'previousHistory' | 'previousHistoryId' | 'readOn' | 'user' | LoanExtendedNotificationKeySpecifier)[];\nexport type LoanExtendedNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnewHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnewHistoryId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpreviousHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpreviousHistoryId?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanForeclosedKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanForeclosedKeySpecifier)[];\nexport type LoanForeclosedFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanInitiatedKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanInitiatedKeySpecifier)[];\nexport type LoanInitiatedFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanPaymentKeySpecifier = ('accruedInterest' | 'activityId' | 'destination' | 'id' | 'pendingInterest' | 'principalAddress' | 'principalAmount' | 'protocolFee' | 'source' | LoanPaymentKeySpecifier)[];\nexport type LoanPaymentFieldPolicy = {\n\taccruedInterest?: FieldPolicy<any> | FieldReadFunction<any>,\n\tactivityId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdestination?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpendingInterest?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprotocolFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsource?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanRefinancedKeySpecifier = ('addedNewTranche' | 'id' | 'indexInBlock' | 'isRenegotiation' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanRefinancedKeySpecifier)[];\nexport type LoanRefinancedFieldPolicy = {\n\taddedNewTranche?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tisRenegotiation?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanRefinancedFromOffersKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanRefinancedFromOffersKeySpecifier)[];\nexport type LoanRefinancedFromOffersFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanRefinancedNotificationKeySpecifier = ('createdOn' | 'id' | 'newHistory' | 'newHistoryId' | 'notificationType' | 'previousHistory' | 'previousHistoryId' | 'readOn' | 'user' | LoanRefinancedNotificationKeySpecifier)[];\nexport type LoanRefinancedNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnewHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnewHistoryId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpreviousHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpreviousHistoryId?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanRepaidKeySpecifier = ('id' | 'indexInBlock' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'totalInterest' | 'txHash' | LoanRepaidKeySpecifier)[];\nexport type LoanRepaidFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalInterest?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanRepaidNotificationKeySpecifier = ('createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'user' | LoanRepaidNotificationKeySpecifier)[];\nexport type LoanRepaidNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoanSentToAuctionKeySpecifier = ('id' | 'indexInBlock' | 'liquidatorAddress' | 'loan' | 'loanId' | 'multiSourceLoanHistory' | 'timestamp' | 'txHash' | LoanSentToAuctionKeySpecifier)[];\nexport type LoanSentToAuctionFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tliquidatorAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmultiSourceLoanHistory?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LoansDataKeySpecifier = ('maxAprBps' | 'maxPrincipalAmount' | 'maxRemainingTime' | 'minAprBps' | 'minPrincipalAmount' | 'minRemainingTime' | LoansDataKeySpecifier)[];\nexport type LoansDataFieldPolicy = {\n\tmaxAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxRemainingTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tminRemainingTime?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LostSourceKeySpecifier = ('accruedInterest' | 'activityId' | 'aprBps' | 'duration' | 'id' | 'lenderAddress' | 'loan' | 'originationFee' | 'principalAmount' | 'startTime' | LostSourceKeySpecifier)[];\nexport type LostSourceFieldPolicy = {\n\taccruedInterest?: FieldPolicy<any> | FieldReadFunction<any>,\n\tactivityId?: FieldPolicy<any> | FieldReadFunction<any>,\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\toriginationFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type LostSourceNotificationKeySpecifier = ('createdOn' | 'id' | 'lostSource' | 'lostSourceId' | 'notificationType' | 'readOn' | 'user' | LostSourceNotificationKeySpecifier)[];\nexport type LostSourceNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlostSource?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlostSourceId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type MultiSourceLoanKeySpecifier = ('activities' | 'address' | 'auction' | 'blendedAprBps' | 'borrowerAddress' | 'contractStartTime' | 'currency' | 'duration' | 'id' | 'indexInBlock' | 'loanId' | 'nft' | 'offer' | 'offerIds' | 'principalAddress' | 'principalAmount' | 'protocolFee' | 'renegotiationRequest' | 'repaidActivity' | 'sources' | 'startTime' | 'status' | 'timestamp' | 'topUpRequest' | 'totalOriginationFee' | 'txHash' | MultiSourceLoanKeySpecifier)[];\nexport type MultiSourceLoanFieldPolicy = {\n\tactivities?: FieldPolicy<any> | FieldReadFunction<any>,\n\taddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tblendedAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tborrowerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractStartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tindexInBlock?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\toffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferIds?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprotocolFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\trenegotiationRequest?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepaidActivity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsources?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttopUpRequest?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalOriginationFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type MultiSourceLoanConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | MultiSourceLoanConnectionKeySpecifier)[];\nexport type MultiSourceLoanConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type MultiSourceLoanEdgeKeySpecifier = ('cursor' | 'node' | MultiSourceLoanEdgeKeySpecifier)[];\nexport type MultiSourceLoanEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type MultiSourceLoanHistoryKeySpecifier = ('activity' | 'activityId' | 'borrowerAddress' | 'duration' | 'id' | 'loanId' | 'offerIds' | 'principalAddress' | 'principalAmount' | 'sources' | 'startTime' | MultiSourceLoanHistoryKeySpecifier)[];\nexport type MultiSourceLoanHistoryFieldPolicy = {\n\tactivity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tactivityId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tborrowerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferIds?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsources?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type MutationKeySpecifier = ('addListingsOfNftsFromUser' | 'addOrUpdateListing' | 'addOrUpdateRenegotiationRequest' | 'addOrUpdateTopUpRequest' | 'generateCollectionOfferToBeSigned' | 'generateRenegotiationOfferToBeSigned' | 'generateSingleNftOfferToBeSigned' | 'hideAllOffers' | 'hideOffer' | 'hideRenegotiation' | 'hideSaleOffer' | 'markNotificationIdsAsRead' | 'markNotificationsAsRead' | 'removeListing' | 'removeListingsOfNftsFromUser' | 'removeRenegotiationRequest' | 'removeTopUpRequest' | 'saveRenegotiationSignedOffer' | 'saveSignedCollectionOffer' | 'saveSignedSaleOffer' | 'saveSignedSingleNftOffer' | 'setReferral' | 'showOffer' | 'showRenegotiation' | 'showSaleOffer' | MutationKeySpecifier)[];\nexport type MutationFieldPolicy = {\n\taddListingsOfNftsFromUser?: FieldPolicy<any> | FieldReadFunction<any>,\n\taddOrUpdateListing?: FieldPolicy<any> | FieldReadFunction<any>,\n\taddOrUpdateRenegotiationRequest?: FieldPolicy<any> | FieldReadFunction<any>,\n\taddOrUpdateTopUpRequest?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgenerateCollectionOfferToBeSigned?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgenerateRenegotiationOfferToBeSigned?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgenerateSingleNftOfferToBeSigned?: FieldPolicy<any> | FieldReadFunction<any>,\n\thideAllOffers?: FieldPolicy<any> | FieldReadFunction<any>,\n\thideOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\thideRenegotiation?: FieldPolicy<any> | FieldReadFunction<any>,\n\thideSaleOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarkNotificationIdsAsRead?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarkNotificationsAsRead?: FieldPolicy<any> | FieldReadFunction<any>,\n\tremoveListing?: FieldPolicy<any> | FieldReadFunction<any>,\n\tremoveListingsOfNftsFromUser?: FieldPolicy<any> | FieldReadFunction<any>,\n\tremoveRenegotiationRequest?: FieldPolicy<any> | FieldReadFunction<any>,\n\tremoveTopUpRequest?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsaveRenegotiationSignedOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsaveSignedCollectionOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsaveSignedSaleOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsaveSignedSingleNftOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsetReferral?: FieldPolicy<any> | FieldReadFunction<any>,\n\tshowOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tshowRenegotiation?: FieldPolicy<any> | FieldReadFunction<any>,\n\tshowSaleOffer?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NFTKeySpecifier = ('activeLoan' | 'collection' | 'collectionId' | 'createdDate' | 'description' | 'id' | 'image' | 'isFlagged' | 'listed' | 'marketPlaceOfPrice' | 'name' | 'nftId' | 'owner' | 'price' | 'priceCurrencyAddress' | 'rarityRank' | 'rarityScore' | 'statistics' | 'tokenId' | 'traits' | 'url' | 'wrapsNfts' | NFTKeySpecifier)[];\nexport type NFTFieldPolicy = {\n\tactiveLoan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcollectionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdescription?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\timage?: FieldPolicy<any> | FieldReadFunction<any>,\n\tisFlagged?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlisted?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarketPlaceOfPrice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tname?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnftId?: FieldPolicy<any> | FieldReadFunction<any>,\n\towner?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpriceCurrencyAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\trarityRank?: FieldPolicy<any> | FieldReadFunction<any>,\n\trarityScore?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttokenId?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttraits?: FieldPolicy<any> | FieldReadFunction<any>,\n\turl?: FieldPolicy<any> | FieldReadFunction<any>,\n\twrapsNfts?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NFTConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | NFTConnectionKeySpecifier)[];\nexport type NFTConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NFTEdgeKeySpecifier = ('cursor' | 'node' | NFTEdgeKeySpecifier)[];\nexport type NFTEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NewOfferNotificationKeySpecifier = ('createdOn' | 'id' | 'notificationType' | 'offer' | 'offerId' | 'readOn' | 'user' | NewOfferNotificationKeySpecifier)[];\nexport type NewOfferNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\toffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NewRenegotiationOfferNotificationKeySpecifier = ('createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'renegotiation' | 'renegotiationId' | 'user' | NewRenegotiationOfferNotificationKeySpecifier)[];\nexport type NewRenegotiationOfferNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\trenegotiation?: FieldPolicy<any> | FieldReadFunction<any>,\n\trenegotiationId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NftStatisticsKeySpecifier = ('bestOffer' | 'floorPrice' | 'floorPrice7d' | 'floorPrice30d' | 'lastSale' | 'loansTotalVolume' | 'numberOfOffers' | 'topTraitFloorPrice' | 'totalVolume' | 'totalVolume1d' | 'totalVolume1m' | 'totalVolume1w' | 'totalVolume1y' | 'totalVolume2m' | 'totalVolume3m' | 'totalVolume4m' | NftStatisticsKeySpecifier)[];\nexport type NftStatisticsFieldPolicy = {\n\tbestOffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfloorPrice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfloorPrice7d?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfloorPrice30d?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlastSale?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloansTotalVolume?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnumberOfOffers?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttopTraitFloorPrice?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1d?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1w?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume1y?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume2m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume3m?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalVolume4m?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NodeKeySpecifier = ('id' | NodeKeySpecifier)[];\nexport type NodeFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NotificationKeySpecifier = ('createdOn' | 'id' | 'notificationType' | 'readOn' | 'user' | NotificationKeySpecifier)[];\nexport type NotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NotificationConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | NotificationConnectionKeySpecifier)[];\nexport type NotificationConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type NotificationEdgeKeySpecifier = ('cursor' | 'node' | NotificationEdgeKeySpecifier)[];\nexport type NotificationEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OfferKeySpecifier = ('aprBps' | 'borrowerAddress' | 'capacity' | 'consumedCapacity' | 'contractAddress' | 'createdDate' | 'currency' | 'duration' | 'expirationTime' | 'fee' | 'hidden' | 'id' | 'lenderAddress' | 'maxPrincipal' | 'maxSeniorRepayment' | 'maxTrancheFloor' | 'netPrincipal' | 'offerHash' | 'offerId' | 'principalAddress' | 'principalAmount' | 'repayment' | 'requiresLiquidation' | 'signature' | 'signerAddress' | 'status' | 'validators' | OfferKeySpecifier)[];\nexport type OfferFieldPolicy = {\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tborrowerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcapacity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tconsumedCapacity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpirationTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfee?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxSeniorRepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxTrancheFloor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnetPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferHash?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\trequiresLiquidation?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\tvalidators?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OfferAcceptedNotificationKeySpecifier = ('createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'offer' | 'offerId' | 'readOn' | 'user' | OfferAcceptedNotificationKeySpecifier)[];\nexport type OfferAcceptedNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\toffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OfferConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | OfferConnectionKeySpecifier)[];\nexport type OfferConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OfferEdgeKeySpecifier = ('cursor' | 'node' | OfferEdgeKeySpecifier)[];\nexport type OfferEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OfferStatisticsKeySpecifier = ('consumedCapacity' | OfferStatisticsKeySpecifier)[];\nexport type OfferStatisticsFieldPolicy = {\n\tconsumedCapacity?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OfferValidatorKeySpecifier = ('arguments' | 'id' | 'offerId' | 'validator' | OfferValidatorKeySpecifier)[];\nexport type OfferValidatorFieldPolicy = {\n\targuments?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tvalidator?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OrderKeySpecifier = ('createdDate' | 'currency' | 'currencyAddress' | 'expiration' | 'fees' | 'hidden' | 'id' | 'isAsk' | 'maker' | 'marketPlace' | 'netAmount' | 'nonce' | 'orderType' | 'price' | 'signature' | 'startTime' | 'status' | 'timestamp' | 'txHash' | OrderKeySpecifier)[];\nexport type OrderFieldPolicy = {\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrencyAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpiration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfees?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tisAsk?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaker?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarketPlace?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnetAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnonce?: FieldPolicy<any> | FieldReadFunction<any>,\n\torderType?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OrderConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | OrderConnectionKeySpecifier)[];\nexport type OrderConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OrderEdgeKeySpecifier = ('cursor' | 'node' | OrderEdgeKeySpecifier)[];\nexport type OrderEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OutbidNotificationKeySpecifier = ('auction' | 'auctionId' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'newBid' | 'newBidId' | 'notificationType' | 'readOn' | 'user' | 'userBid' | 'userBidId' | OutbidNotificationKeySpecifier)[];\nexport type OutbidNotificationFieldPolicy = {\n\tauction?: FieldPolicy<any> | FieldReadFunction<any>,\n\tauctionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnewBid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnewBidId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuserBid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuserBidId?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type OutstandingLoanStatisticsKeySpecifier = ('loansData' | 'outstandingLoanCount' | 'outstandingPrincipal' | 'totalOutstandingPrincipal' | OutstandingLoanStatisticsKeySpecifier)[];\nexport type OutstandingLoanStatisticsFieldPolicy = {\n\tloansData?: FieldPolicy<any> | FieldReadFunction<any>,\n\toutstandingLoanCount?: FieldPolicy<any> | FieldReadFunction<any>,\n\toutstandingPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalOutstandingPrincipal?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type PageInfoKeySpecifier = ('endCursor' | 'hasNextPage' | 'hasPreviousPage' | 'startCursor' | PageInfoKeySpecifier)[];\nexport type PageInfoFieldPolicy = {\n\tendCursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\thasNextPage?: FieldPolicy<any> | FieldReadFunction<any>,\n\thasPreviousPage?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartCursor?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type PointActivityKeySpecifier = ('id' | 'loanActivity' | 'points' | 'reason' | 'timestamp' | 'userId' | PointActivityKeySpecifier)[];\nexport type PointActivityFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanActivity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpoints?: FieldPolicy<any> | FieldReadFunction<any>,\n\treason?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuserId?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type PointActivityConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | PointActivityConnectionKeySpecifier)[];\nexport type PointActivityConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type PointActivityEdgeKeySpecifier = ('cursor' | 'node' | PointActivityEdgeKeySpecifier)[];\nexport type PointActivityEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type QueryKeySpecifier = ('getCollectionBySlug' | 'getCollectionLoansData' | 'getCollectionsByContractAddress' | 'getListingById' | 'getLoanById' | 'getNftByContractAddressAndTokenId' | 'getNftBySlugAndTokenId' | 'getOutstandingLoanStatistics' | 'getPointsFromReferrals' | 'getReferredWallets' | 'getUserPointActivities' | 'getUserPoints' | 'listAuctions' | 'listBestBidsForNft' | 'listBids' | 'listCollections' | 'listCollectionsWithListings' | 'listCollectionsWithLoans' | 'listListings' | 'listLoanActivities' | 'listLoans' | 'listNftDelegations' | 'listNftOffersAndRenegotiations' | 'listNftsFromCollections' | 'listNftsFromUser' | 'listNotifications' | 'listOffers' | 'listRenegotiations' | 'listSaleOffers' | 'listSources' | 'listUserSaleOffers' | 'me' | QueryKeySpecifier)[];\nexport type QueryFieldPolicy = {\n\tgetCollectionBySlug?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetCollectionLoansData?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetCollectionsByContractAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetListingById?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetLoanById?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetNftByContractAddressAndTokenId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetNftBySlugAndTokenId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetOutstandingLoanStatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetPointsFromReferrals?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetReferredWallets?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetUserPointActivities?: FieldPolicy<any> | FieldReadFunction<any>,\n\tgetUserPoints?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistAuctions?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistBestBidsForNft?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistBids?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistCollections?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistCollectionsWithListings?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistCollectionsWithLoans?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistListings?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistLoanActivities?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistLoans?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistNftDelegations?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistNftOffersAndRenegotiations?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistNftsFromCollections?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistNftsFromUser?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistNotifications?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistOffers?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistRenegotiations?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistSaleOffers?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistSources?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlistUserSaleOffers?: FieldPolicy<any> | FieldReadFunction<any>,\n\tme?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type RenegotiationKeySpecifier = ('aprBps' | 'createdDate' | 'duration' | 'expirationTime' | 'feeAmount' | 'hidden' | 'id' | 'isAddNewTranche' | 'lenderAddress' | 'loan' | 'loanAddress' | 'loanId' | 'loanReferenceId' | 'nft' | 'offerHash' | 'principalAmount' | 'renegotiationId' | 'repayment' | 'requiresLiquidation' | 'signature' | 'signerAddress' | 'status' | 'strictImprovement' | RenegotiationKeySpecifier)[];\nexport type RenegotiationFieldPolicy = {\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpirationTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfeeAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tisAddNewTranche?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanReferenceId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferHash?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\trenegotiationId?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\trequiresLiquidation?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstrictImprovement?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type RenegotiationConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | RenegotiationConnectionKeySpecifier)[];\nexport type RenegotiationConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type RenegotiationEdgeKeySpecifier = ('cursor' | 'node' | RenegotiationEdgeKeySpecifier)[];\nexport type RenegotiationEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type RenegotiationRequestKeySpecifier = ('desiredAprBps' | 'desiredDuration' | 'desiredPrincipalAmount' | 'id' | 'loanId' | RenegotiationRequestKeySpecifier)[];\nexport type RenegotiationRequestFieldPolicy = {\n\tdesiredAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdesiredDuration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdesiredPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type RenegotiationRequestedNotificationKeySpecifier = ('aprBps' | 'createdOn' | 'duration' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'principalAmount' | 'readOn' | 'user' | RenegotiationRequestedNotificationKeySpecifier)[];\nexport type RenegotiationRequestedNotificationFieldPolicy = {\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SaleKeySpecifier = ('id' | 'nft' | 'order' | 'orderId' | 'taker' | 'timestamp' | 'txHash' | SaleKeySpecifier)[];\nexport type SaleFieldPolicy = {\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\torder?: FieldPolicy<any> | FieldReadFunction<any>,\n\torderId?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttaker?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SingleNFTOfferKeySpecifier = ('aprBps' | 'borrowerAddress' | 'capacity' | 'consumedCapacity' | 'contractAddress' | 'createdDate' | 'currency' | 'duration' | 'expirationTime' | 'fee' | 'hidden' | 'id' | 'lenderAddress' | 'maxPrincipal' | 'maxSeniorRepayment' | 'maxTrancheFloor' | 'netPrincipal' | 'nft' | 'offerHash' | 'offerId' | 'principalAddress' | 'principalAmount' | 'repayment' | 'requiresLiquidation' | 'signature' | 'signerAddress' | 'statistics' | 'status' | 'validators' | SingleNFTOfferKeySpecifier)[];\nexport type SingleNFTOfferFieldPolicy = {\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tborrowerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcapacity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tconsumedCapacity?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcontractAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tduration?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpirationTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfee?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxSeniorRepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaxTrancheFloor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnetPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferHash?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\trepayment?: FieldPolicy<any> | FieldReadFunction<any>,\n\trequiresLiquidation?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignerAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\tvalidators?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SingleNFTOfferCollectionOfferRenegotiationConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | SingleNFTOfferCollectionOfferRenegotiationConnectionKeySpecifier)[];\nexport type SingleNFTOfferCollectionOfferRenegotiationConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SingleNFTOfferCollectionOfferRenegotiationEdgeKeySpecifier = ('cursor' | 'node' | SingleNFTOfferCollectionOfferRenegotiationEdgeKeySpecifier)[];\nexport type SingleNFTOfferCollectionOfferRenegotiationEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SingleNFTOrderKeySpecifier = ('createdDate' | 'currency' | 'currencyAddress' | 'expiration' | 'fees' | 'hidden' | 'id' | 'isAsk' | 'maker' | 'marketPlace' | 'netAmount' | 'nft' | 'nonce' | 'orderType' | 'price' | 'signature' | 'startTime' | 'status' | 'timestamp' | 'txHash' | SingleNFTOrderKeySpecifier)[];\nexport type SingleNFTOrderFieldPolicy = {\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrency?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcurrencyAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\texpiration?: FieldPolicy<any> | FieldReadFunction<any>,\n\tfees?: FieldPolicy<any> | FieldReadFunction<any>,\n\thidden?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tisAsk?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmaker?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmarketPlace?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnetAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnft?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnonce?: FieldPolicy<any> | FieldReadFunction<any>,\n\torderType?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprice?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsignature?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatus?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttimestamp?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttxHash?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SourceKeySpecifier = ('accruedInterest' | 'aprBps' | 'id' | 'lenderAddress' | 'loan' | 'loanId' | 'loanIndex' | 'loanReferenceId' | 'originationFee' | 'principalAmount' | 'refinanceNetAprBps' | 'seniorPrincipalAmount' | 'startTime' | SourceKeySpecifier)[];\nexport type SourceFieldPolicy = {\n\taccruedInterest?: FieldPolicy<any> | FieldReadFunction<any>,\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanIndex?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanReferenceId?: FieldPolicy<any> | FieldReadFunction<any>,\n\toriginationFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\trefinanceNetAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tseniorPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SourceHistoryKeySpecifier = ('accruedInterest' | 'aprBps' | 'id' | 'lenderAddress' | 'loanId' | 'loanIndex' | 'originationFee' | 'principalAmount' | 'seniorPrincipalAmount' | 'startTime' | SourceHistoryKeySpecifier)[];\nexport type SourceHistoryFieldPolicy = {\n\taccruedInterest?: FieldPolicy<any> | FieldReadFunction<any>,\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlenderAddress?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanIndex?: FieldPolicy<any> | FieldReadFunction<any>,\n\toriginationFee?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tseniorPrincipalAmount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstartTime?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SourceLostSourceConnectionKeySpecifier = ('edges' | 'pageInfo' | 'totalCount' | SourceLostSourceConnectionKeySpecifier)[];\nexport type SourceLostSourceConnectionFieldPolicy = {\n\tedges?: FieldPolicy<any> | FieldReadFunction<any>,\n\tpageInfo?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalCount?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type SourceLostSourceEdgeKeySpecifier = ('cursor' | 'node' | SourceLostSourceEdgeKeySpecifier)[];\nexport type SourceLostSourceEdgeFieldPolicy = {\n\tcursor?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnode?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type StatByCollectionKeySpecifier = ('collection' | 'value' | StatByCollectionKeySpecifier)[];\nexport type StatByCollectionFieldPolicy = {\n\tcollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\tvalue?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type TopUpRequestKeySpecifier = ('desiredAprBps' | 'desiredTopUp' | 'id' | 'loanId' | TopUpRequestKeySpecifier)[];\nexport type TopUpRequestFieldPolicy = {\n\tdesiredAprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tdesiredTopUp?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type TopUpRequestedNotificationKeySpecifier = ('aprBps' | 'createdOn' | 'id' | 'loan' | 'loanId' | 'notificationType' | 'readOn' | 'topUp' | 'user' | TopUpRequestedNotificationKeySpecifier)[];\nexport type TopUpRequestedNotificationFieldPolicy = {\n\taprBps?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloan?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttopUp?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type TraitKeySpecifier = ('collectionId' | 'statistics' | 'type' | 'value' | TraitKeySpecifier)[];\nexport type TraitFieldPolicy = {\n\tcollectionId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttype?: FieldPolicy<any> | FieldReadFunction<any>,\n\tvalue?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type UnderfundedOfferNotificationKeySpecifier = ('createdOn' | 'id' | 'notificationType' | 'offer' | 'offerId' | 'readOn' | 'user' | UnderfundedOfferNotificationKeySpecifier)[];\nexport type UnderfundedOfferNotificationFieldPolicy = {\n\tcreatedOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tnotificationType?: FieldPolicy<any> | FieldReadFunction<any>,\n\toffer?: FieldPolicy<any> | FieldReadFunction<any>,\n\tofferId?: FieldPolicy<any> | FieldReadFunction<any>,\n\treadOn?: FieldPolicy<any> | FieldReadFunction<any>,\n\tuser?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type UserKeySpecifier = ('about' | 'beta' | 'blockchain' | 'createdDate' | 'id' | 'linkedWallets' | 'mail' | 'mailValidationDate' | 'originalProfilePicture' | 'profilePictureId' | 'size64ProfilePicture' | 'size128ProfilePicture' | 'size256ProfilePicture' | 'size512ProfilePicture' | 'statistics' | 'twitterHandle' | 'updatedAt' | 'usedProduct' | 'username' | 'walletAddress' | UserKeySpecifier)[];\nexport type UserFieldPolicy = {\n\tabout?: FieldPolicy<any> | FieldReadFunction<any>,\n\tbeta?: FieldPolicy<any> | FieldReadFunction<any>,\n\tblockchain?: FieldPolicy<any> | FieldReadFunction<any>,\n\tcreatedDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\tid?: FieldPolicy<any> | FieldReadFunction<any>,\n\tlinkedWallets?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmail?: FieldPolicy<any> | FieldReadFunction<any>,\n\tmailValidationDate?: FieldPolicy<any> | FieldReadFunction<any>,\n\toriginalProfilePicture?: FieldPolicy<any> | FieldReadFunction<any>,\n\tprofilePictureId?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsize64ProfilePicture?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsize128ProfilePicture?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsize256ProfilePicture?: FieldPolicy<any> | FieldReadFunction<any>,\n\tsize512ProfilePicture?: FieldPolicy<any> | FieldReadFunction<any>,\n\tstatistics?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttwitterHandle?: FieldPolicy<any> | FieldReadFunction<any>,\n\tupdatedAt?: FieldPolicy<any> | FieldReadFunction<any>,\n\tusedProduct?: FieldPolicy<any> | FieldReadFunction<any>,\n\tusername?: FieldPolicy<any> | FieldReadFunction<any>,\n\twalletAddress?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type UserStatisticsKeySpecifier = ('defaultedPrincipal' | 'interestEarnedByCollection' | 'loanCount' | 'loanCountByCollection' | 'loanPrincipalByCollection' | 'originationCountAndPrincipalByMonth' | 'outstandingPrincipal' | 'renegotiationCountAndPrincipalByMonth' | 'totalLentPrincipal' | 'wavgActualAprByCollection' | 'wavgExpectedAprByCollection' | 'wavgOutstandingApr' | 'wavgRepaidApr' | UserStatisticsKeySpecifier)[];\nexport type UserStatisticsFieldPolicy = {\n\tdefaultedPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\tinterestEarnedByCollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanCount?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanCountByCollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\tloanPrincipalByCollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\toriginationCountAndPrincipalByMonth?: FieldPolicy<any> | FieldReadFunction<any>,\n\toutstandingPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\trenegotiationCountAndPrincipalByMonth?: FieldPolicy<any> | FieldReadFunction<any>,\n\ttotalLentPrincipal?: FieldPolicy<any> | FieldReadFunction<any>,\n\twavgActualAprByCollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\twavgExpectedAprByCollection?: FieldPolicy<any> | FieldReadFunction<any>,\n\twavgOutstandingApr?: FieldPolicy<any> | FieldReadFunction<any>,\n\twavgRepaidApr?: FieldPolicy<any> | FieldReadFunction<any>\n};\nexport type StrictTypedTypePolicies = {\n\tActiveOfferNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | ActiveOfferNotificationKeySpecifier | (() => undefined | ActiveOfferNotificationKeySpecifier),\n\t\tfields?: ActiveOfferNotificationFieldPolicy,\n\t},\n\tActivity?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | ActivityKeySpecifier | (() => undefined | ActivityKeySpecifier),\n\t\tfields?: ActivityFieldPolicy,\n\t},\n\tAsset?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AssetKeySpecifier | (() => undefined | AssetKeySpecifier),\n\t\tfields?: AssetFieldPolicy,\n\t},\n\tAuction?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionKeySpecifier | (() => undefined | AuctionKeySpecifier),\n\t\tfields?: AuctionFieldPolicy,\n\t},\n\tAuctionBidConfirmationNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionBidConfirmationNotificationKeySpecifier | (() => undefined | AuctionBidConfirmationNotificationKeySpecifier),\n\t\tfields?: AuctionBidConfirmationNotificationFieldPolicy,\n\t},\n\tAuctionConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionConnectionKeySpecifier | (() => undefined | AuctionConnectionKeySpecifier),\n\t\tfields?: AuctionConnectionFieldPolicy,\n\t},\n\tAuctionEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionEdgeKeySpecifier | (() => undefined | AuctionEdgeKeySpecifier),\n\t\tfields?: AuctionEdgeFieldPolicy,\n\t},\n\tAuctionEndedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionEndedNotificationKeySpecifier | (() => undefined | AuctionEndedNotificationKeySpecifier),\n\t\tfields?: AuctionEndedNotificationFieldPolicy,\n\t},\n\tAuctionStartedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionStartedNotificationKeySpecifier | (() => undefined | AuctionStartedNotificationKeySpecifier),\n\t\tfields?: AuctionStartedNotificationFieldPolicy,\n\t},\n\tAuctionWonNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | AuctionWonNotificationKeySpecifier | (() => undefined | AuctionWonNotificationKeySpecifier),\n\t\tfields?: AuctionWonNotificationFieldPolicy,\n\t},\n\tBid?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | BidKeySpecifier | (() => undefined | BidKeySpecifier),\n\t\tfields?: BidFieldPolicy,\n\t},\n\tBidConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | BidConnectionKeySpecifier | (() => undefined | BidConnectionKeySpecifier),\n\t\tfields?: BidConnectionFieldPolicy,\n\t},\n\tBidEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | BidEdgeKeySpecifier | (() => undefined | BidEdgeKeySpecifier),\n\t\tfields?: BidEdgeFieldPolicy,\n\t},\n\tCollection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionKeySpecifier | (() => undefined | CollectionKeySpecifier),\n\t\tfields?: CollectionFieldPolicy,\n\t},\n\tCollectionConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionConnectionKeySpecifier | (() => undefined | CollectionConnectionKeySpecifier),\n\t\tfields?: CollectionConnectionFieldPolicy,\n\t},\n\tCollectionEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionEdgeKeySpecifier | (() => undefined | CollectionEdgeKeySpecifier),\n\t\tfields?: CollectionEdgeFieldPolicy,\n\t},\n\tCollectionLoansData?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionLoansDataKeySpecifier | (() => undefined | CollectionLoansDataKeySpecifier),\n\t\tfields?: CollectionLoansDataFieldPolicy,\n\t},\n\tCollectionOffer?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionOfferKeySpecifier | (() => undefined | CollectionOfferKeySpecifier),\n\t\tfields?: CollectionOfferFieldPolicy,\n\t},\n\tCollectionOfferStatistics?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionOfferStatisticsKeySpecifier | (() => undefined | CollectionOfferStatisticsKeySpecifier),\n\t\tfields?: CollectionOfferStatisticsFieldPolicy,\n\t},\n\tCollectionOrder?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionOrderKeySpecifier | (() => undefined | CollectionOrderKeySpecifier),\n\t\tfields?: CollectionOrderFieldPolicy,\n\t},\n\tCollectionStatistics?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CollectionStatisticsKeySpecifier | (() => undefined | CollectionStatisticsKeySpecifier),\n\t\tfields?: CollectionStatisticsFieldPolicy,\n\t},\n\tContractData?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | ContractDataKeySpecifier | (() => undefined | ContractDataKeySpecifier),\n\t\tfields?: ContractDataFieldPolicy,\n\t},\n\tCurrency?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CurrencyKeySpecifier | (() => undefined | CurrencyKeySpecifier),\n\t\tfields?: CurrencyFieldPolicy,\n\t},\n\tCurrencyAmount?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | CurrencyAmountKeySpecifier | (() => undefined | CurrencyAmountKeySpecifier),\n\t\tfields?: CurrencyAmountFieldPolicy,\n\t},\n\tDelegation?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | DelegationKeySpecifier | (() => undefined | DelegationKeySpecifier),\n\t\tfields?: DelegationFieldPolicy,\n\t},\n\tDelegationConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | DelegationConnectionKeySpecifier | (() => undefined | DelegationConnectionKeySpecifier),\n\t\tfields?: DelegationConnectionFieldPolicy,\n\t},\n\tDelegationEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | DelegationEdgeKeySpecifier | (() => undefined | DelegationEdgeKeySpecifier),\n\t\tfields?: DelegationEdgeFieldPolicy,\n\t},\n\tLinkedWallets?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LinkedWalletsKeySpecifier | (() => undefined | LinkedWalletsKeySpecifier),\n\t\tfields?: LinkedWalletsFieldPolicy,\n\t},\n\tListing?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | ListingKeySpecifier | (() => undefined | ListingKeySpecifier),\n\t\tfields?: ListingFieldPolicy,\n\t},\n\tListingConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | ListingConnectionKeySpecifier | (() => undefined | ListingConnectionKeySpecifier),\n\t\tfields?: ListingConnectionFieldPolicy,\n\t},\n\tListingEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | ListingEdgeKeySpecifier | (() => undefined | ListingEdgeKeySpecifier),\n\t\tfields?: ListingEdgeFieldPolicy,\n\t},\n\tLoan?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanKeySpecifier | (() => undefined | LoanKeySpecifier),\n\t\tfields?: LoanFieldPolicy,\n\t},\n\tLoanActivity?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanActivityKeySpecifier | (() => undefined | LoanActivityKeySpecifier),\n\t\tfields?: LoanActivityFieldPolicy,\n\t},\n\tLoanActivityConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanActivityConnectionKeySpecifier | (() => undefined | LoanActivityConnectionKeySpecifier),\n\t\tfields?: LoanActivityConnectionFieldPolicy,\n\t},\n\tLoanActivityEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanActivityEdgeKeySpecifier | (() => undefined | LoanActivityEdgeKeySpecifier),\n\t\tfields?: LoanActivityEdgeFieldPolicy,\n\t},\n\tLoanAuctioned?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanAuctionedKeySpecifier | (() => undefined | LoanAuctionedKeySpecifier),\n\t\tfields?: LoanAuctionedFieldPolicy,\n\t},\n\tLoanAuctionedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanAuctionedNotificationKeySpecifier | (() => undefined | LoanAuctionedNotificationKeySpecifier),\n\t\tfields?: LoanAuctionedNotificationFieldPolicy,\n\t},\n\tLoanDefaultReminderNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanDefaultReminderNotificationKeySpecifier | (() => undefined | LoanDefaultReminderNotificationKeySpecifier),\n\t\tfields?: LoanDefaultReminderNotificationFieldPolicy,\n\t},\n\tLoanDefaultedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanDefaultedNotificationKeySpecifier | (() => undefined | LoanDefaultedNotificationKeySpecifier),\n\t\tfields?: LoanDefaultedNotificationFieldPolicy,\n\t},\n\tLoanExtended?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanExtendedKeySpecifier | (() => undefined | LoanExtendedKeySpecifier),\n\t\tfields?: LoanExtendedFieldPolicy,\n\t},\n\tLoanExtendedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanExtendedNotificationKeySpecifier | (() => undefined | LoanExtendedNotificationKeySpecifier),\n\t\tfields?: LoanExtendedNotificationFieldPolicy,\n\t},\n\tLoanForeclosed?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanForeclosedKeySpecifier | (() => undefined | LoanForeclosedKeySpecifier),\n\t\tfields?: LoanForeclosedFieldPolicy,\n\t},\n\tLoanInitiated?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanInitiatedKeySpecifier | (() => undefined | LoanInitiatedKeySpecifier),\n\t\tfields?: LoanInitiatedFieldPolicy,\n\t},\n\tLoanPayment?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanPaymentKeySpecifier | (() => undefined | LoanPaymentKeySpecifier),\n\t\tfields?: LoanPaymentFieldPolicy,\n\t},\n\tLoanRefinanced?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanRefinancedKeySpecifier | (() => undefined | LoanRefinancedKeySpecifier),\n\t\tfields?: LoanRefinancedFieldPolicy,\n\t},\n\tLoanRefinancedFromOffers?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanRefinancedFromOffersKeySpecifier | (() => undefined | LoanRefinancedFromOffersKeySpecifier),\n\t\tfields?: LoanRefinancedFromOffersFieldPolicy,\n\t},\n\tLoanRefinancedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanRefinancedNotificationKeySpecifier | (() => undefined | LoanRefinancedNotificationKeySpecifier),\n\t\tfields?: LoanRefinancedNotificationFieldPolicy,\n\t},\n\tLoanRepaid?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanRepaidKeySpecifier | (() => undefined | LoanRepaidKeySpecifier),\n\t\tfields?: LoanRepaidFieldPolicy,\n\t},\n\tLoanRepaidNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanRepaidNotificationKeySpecifier | (() => undefined | LoanRepaidNotificationKeySpecifier),\n\t\tfields?: LoanRepaidNotificationFieldPolicy,\n\t},\n\tLoanSentToAuction?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoanSentToAuctionKeySpecifier | (() => undefined | LoanSentToAuctionKeySpecifier),\n\t\tfields?: LoanSentToAuctionFieldPolicy,\n\t},\n\tLoansData?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LoansDataKeySpecifier | (() => undefined | LoansDataKeySpecifier),\n\t\tfields?: LoansDataFieldPolicy,\n\t},\n\tLostSource?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LostSourceKeySpecifier | (() => undefined | LostSourceKeySpecifier),\n\t\tfields?: LostSourceFieldPolicy,\n\t},\n\tLostSourceNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | LostSourceNotificationKeySpecifier | (() => undefined | LostSourceNotificationKeySpecifier),\n\t\tfields?: LostSourceNotificationFieldPolicy,\n\t},\n\tMultiSourceLoan?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | MultiSourceLoanKeySpecifier | (() => undefined | MultiSourceLoanKeySpecifier),\n\t\tfields?: MultiSourceLoanFieldPolicy,\n\t},\n\tMultiSourceLoanConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | MultiSourceLoanConnectionKeySpecifier | (() => undefined | MultiSourceLoanConnectionKeySpecifier),\n\t\tfields?: MultiSourceLoanConnectionFieldPolicy,\n\t},\n\tMultiSourceLoanEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | MultiSourceLoanEdgeKeySpecifier | (() => undefined | MultiSourceLoanEdgeKeySpecifier),\n\t\tfields?: MultiSourceLoanEdgeFieldPolicy,\n\t},\n\tMultiSourceLoanHistory?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | MultiSourceLoanHistoryKeySpecifier | (() => undefined | MultiSourceLoanHistoryKeySpecifier),\n\t\tfields?: MultiSourceLoanHistoryFieldPolicy,\n\t},\n\tMutation?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | MutationKeySpecifier | (() => undefined | MutationKeySpecifier),\n\t\tfields?: MutationFieldPolicy,\n\t},\n\tNFT?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NFTKeySpecifier | (() => undefined | NFTKeySpecifier),\n\t\tfields?: NFTFieldPolicy,\n\t},\n\tNFTConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NFTConnectionKeySpecifier | (() => undefined | NFTConnectionKeySpecifier),\n\t\tfields?: NFTConnectionFieldPolicy,\n\t},\n\tNFTEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NFTEdgeKeySpecifier | (() => undefined | NFTEdgeKeySpecifier),\n\t\tfields?: NFTEdgeFieldPolicy,\n\t},\n\tNewOfferNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NewOfferNotificationKeySpecifier | (() => undefined | NewOfferNotificationKeySpecifier),\n\t\tfields?: NewOfferNotificationFieldPolicy,\n\t},\n\tNewRenegotiationOfferNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NewRenegotiationOfferNotificationKeySpecifier | (() => undefined | NewRenegotiationOfferNotificationKeySpecifier),\n\t\tfields?: NewRenegotiationOfferNotificationFieldPolicy,\n\t},\n\tNftStatistics?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NftStatisticsKeySpecifier | (() => undefined | NftStatisticsKeySpecifier),\n\t\tfields?: NftStatisticsFieldPolicy,\n\t},\n\tNode?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NodeKeySpecifier | (() => undefined | NodeKeySpecifier),\n\t\tfields?: NodeFieldPolicy,\n\t},\n\tNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NotificationKeySpecifier | (() => undefined | NotificationKeySpecifier),\n\t\tfields?: NotificationFieldPolicy,\n\t},\n\tNotificationConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NotificationConnectionKeySpecifier | (() => undefined | NotificationConnectionKeySpecifier),\n\t\tfields?: NotificationConnectionFieldPolicy,\n\t},\n\tNotificationEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | NotificationEdgeKeySpecifier | (() => undefined | NotificationEdgeKeySpecifier),\n\t\tfields?: NotificationEdgeFieldPolicy,\n\t},\n\tOffer?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OfferKeySpecifier | (() => undefined | OfferKeySpecifier),\n\t\tfields?: OfferFieldPolicy,\n\t},\n\tOfferAcceptedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OfferAcceptedNotificationKeySpecifier | (() => undefined | OfferAcceptedNotificationKeySpecifier),\n\t\tfields?: OfferAcceptedNotificationFieldPolicy,\n\t},\n\tOfferConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OfferConnectionKeySpecifier | (() => undefined | OfferConnectionKeySpecifier),\n\t\tfields?: OfferConnectionFieldPolicy,\n\t},\n\tOfferEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OfferEdgeKeySpecifier | (() => undefined | OfferEdgeKeySpecifier),\n\t\tfields?: OfferEdgeFieldPolicy,\n\t},\n\tOfferStatistics?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OfferStatisticsKeySpecifier | (() => undefined | OfferStatisticsKeySpecifier),\n\t\tfields?: OfferStatisticsFieldPolicy,\n\t},\n\tOfferValidator?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OfferValidatorKeySpecifier | (() => undefined | OfferValidatorKeySpecifier),\n\t\tfields?: OfferValidatorFieldPolicy,\n\t},\n\tOrder?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OrderKeySpecifier | (() => undefined | OrderKeySpecifier),\n\t\tfields?: OrderFieldPolicy,\n\t},\n\tOrderConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OrderConnectionKeySpecifier | (() => undefined | OrderConnectionKeySpecifier),\n\t\tfields?: OrderConnectionFieldPolicy,\n\t},\n\tOrderEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OrderEdgeKeySpecifier | (() => undefined | OrderEdgeKeySpecifier),\n\t\tfields?: OrderEdgeFieldPolicy,\n\t},\n\tOutbidNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OutbidNotificationKeySpecifier | (() => undefined | OutbidNotificationKeySpecifier),\n\t\tfields?: OutbidNotificationFieldPolicy,\n\t},\n\tOutstandingLoanStatistics?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | OutstandingLoanStatisticsKeySpecifier | (() => undefined | OutstandingLoanStatisticsKeySpecifier),\n\t\tfields?: OutstandingLoanStatisticsFieldPolicy,\n\t},\n\tPageInfo?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | PageInfoKeySpecifier | (() => undefined | PageInfoKeySpecifier),\n\t\tfields?: PageInfoFieldPolicy,\n\t},\n\tPointActivity?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | PointActivityKeySpecifier | (() => undefined | PointActivityKeySpecifier),\n\t\tfields?: PointActivityFieldPolicy,\n\t},\n\tPointActivityConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | PointActivityConnectionKeySpecifier | (() => undefined | PointActivityConnectionKeySpecifier),\n\t\tfields?: PointActivityConnectionFieldPolicy,\n\t},\n\tPointActivityEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | PointActivityEdgeKeySpecifier | (() => undefined | PointActivityEdgeKeySpecifier),\n\t\tfields?: PointActivityEdgeFieldPolicy,\n\t},\n\tQuery?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | QueryKeySpecifier | (() => undefined | QueryKeySpecifier),\n\t\tfields?: QueryFieldPolicy,\n\t},\n\tRenegotiation?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | RenegotiationKeySpecifier | (() => undefined | RenegotiationKeySpecifier),\n\t\tfields?: RenegotiationFieldPolicy,\n\t},\n\tRenegotiationConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | RenegotiationConnectionKeySpecifier | (() => undefined | RenegotiationConnectionKeySpecifier),\n\t\tfields?: RenegotiationConnectionFieldPolicy,\n\t},\n\tRenegotiationEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | RenegotiationEdgeKeySpecifier | (() => undefined | RenegotiationEdgeKeySpecifier),\n\t\tfields?: RenegotiationEdgeFieldPolicy,\n\t},\n\tRenegotiationRequest?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | RenegotiationRequestKeySpecifier | (() => undefined | RenegotiationRequestKeySpecifier),\n\t\tfields?: RenegotiationRequestFieldPolicy,\n\t},\n\tRenegotiationRequestedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | RenegotiationRequestedNotificationKeySpecifier | (() => undefined | RenegotiationRequestedNotificationKeySpecifier),\n\t\tfields?: RenegotiationRequestedNotificationFieldPolicy,\n\t},\n\tSale?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SaleKeySpecifier | (() => undefined | SaleKeySpecifier),\n\t\tfields?: SaleFieldPolicy,\n\t},\n\tSingleNFTOffer?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SingleNFTOfferKeySpecifier | (() => undefined | SingleNFTOfferKeySpecifier),\n\t\tfields?: SingleNFTOfferFieldPolicy,\n\t},\n\tSingleNFTOfferCollectionOfferRenegotiationConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SingleNFTOfferCollectionOfferRenegotiationConnectionKeySpecifier | (() => undefined | SingleNFTOfferCollectionOfferRenegotiationConnectionKeySpecifier),\n\t\tfields?: SingleNFTOfferCollectionOfferRenegotiationConnectionFieldPolicy,\n\t},\n\tSingleNFTOfferCollectionOfferRenegotiationEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SingleNFTOfferCollectionOfferRenegotiationEdgeKeySpecifier | (() => undefined | SingleNFTOfferCollectionOfferRenegotiationEdgeKeySpecifier),\n\t\tfields?: SingleNFTOfferCollectionOfferRenegotiationEdgeFieldPolicy,\n\t},\n\tSingleNFTOrder?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SingleNFTOrderKeySpecifier | (() => undefined | SingleNFTOrderKeySpecifier),\n\t\tfields?: SingleNFTOrderFieldPolicy,\n\t},\n\tSource?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SourceKeySpecifier | (() => undefined | SourceKeySpecifier),\n\t\tfields?: SourceFieldPolicy,\n\t},\n\tSourceHistory?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SourceHistoryKeySpecifier | (() => undefined | SourceHistoryKeySpecifier),\n\t\tfields?: SourceHistoryFieldPolicy,\n\t},\n\tSourceLostSourceConnection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SourceLostSourceConnectionKeySpecifier | (() => undefined | SourceLostSourceConnectionKeySpecifier),\n\t\tfields?: SourceLostSourceConnectionFieldPolicy,\n\t},\n\tSourceLostSourceEdge?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | SourceLostSourceEdgeKeySpecifier | (() => undefined | SourceLostSourceEdgeKeySpecifier),\n\t\tfields?: SourceLostSourceEdgeFieldPolicy,\n\t},\n\tStatByCollection?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | StatByCollectionKeySpecifier | (() => undefined | StatByCollectionKeySpecifier),\n\t\tfields?: StatByCollectionFieldPolicy,\n\t},\n\tTopUpRequest?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | TopUpRequestKeySpecifier | (() => undefined | TopUpRequestKeySpecifier),\n\t\tfields?: TopUpRequestFieldPolicy,\n\t},\n\tTopUpRequestedNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | TopUpRequestedNotificationKeySpecifier | (() => undefined | TopUpRequestedNotificationKeySpecifier),\n\t\tfields?: TopUpRequestedNotificationFieldPolicy,\n\t},\n\tTrait?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | TraitKeySpecifier | (() => undefined | TraitKeySpecifier),\n\t\tfields?: TraitFieldPolicy,\n\t},\n\tUnderfundedOfferNotification?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | UnderfundedOfferNotificationKeySpecifier | (() => undefined | UnderfundedOfferNotificationKeySpecifier),\n\t\tfields?: UnderfundedOfferNotificationFieldPolicy,\n\t},\n\tUser?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | UserKeySpecifier | (() => undefined | UserKeySpecifier),\n\t\tfields?: UserFieldPolicy,\n\t},\n\tUserStatistics?: Omit<TypePolicy, \"fields\" | \"keyFields\"> & {\n\t\tkeyFields?: false | UserStatisticsKeySpecifier | (() => undefined | UserStatisticsKeySpecifier),\n\t\tfields?: UserStatisticsFieldPolicy,\n\t}\n};\nexport type TypedTypePolicies = StrictTypedTypePolicies & TypePolicies;\nexport const CurrencyInfoFragmentDoc = gql`\n    fragment CurrencyInfo on Currency {\n  address\n  decimals\n}\n    `;\nexport const CurrencyAmountInfoFragmentDoc = gql`\n    fragment CurrencyAmountInfo on CurrencyAmount {\n  amount\n  currency {\n    ...CurrencyInfo\n  }\n}\n    ${CurrencyInfoFragmentDoc}`;\nexport const SaleOfferInfoFragmentDoc = gql`\n    fragment SaleOfferInfo on SingleNFTOrder {\n  id\n  netAmount\n  status\n  marketPlace\n  fees\n  maker\n  expiration\n  createdDate\n  startTime\n  hidden\n  signature\n  currencyAddress\n  nonce\n}\n    `;\nexport const ListNftDocument = gql`\n    mutation listNft($nftId: Int!) {\n  addOrUpdateListing(nftId: $nftId) {\n    id\n  }\n}\n    `;\nexport const UnlistNftDocument = gql`\n    mutation unlistNft($nftId: Int!) {\n  removeListing(nftId: $nftId) {\n    id\n  }\n}\n    `;\nexport const GenerateCollectionOfferHashDocument = gql`\n    mutation generateCollectionOfferHash($offerInput: CollectionOfferInput!) {\n  offer: generateCollectionOfferToBeSigned(offerInput: $offerInput) {\n    offerHash\n    offerId\n    lenderAddress\n    signerAddress\n    borrowerAddress\n    validators {\n      validator\n      arguments\n    }\n    collection {\n      contractData {\n        contractAddress\n      }\n    }\n  }\n}\n    `;\nexport const SaveCollectionOfferDocument = gql`\n    mutation saveCollectionOffer($offer: CollectionSignedOfferInput!) {\n  offer: saveSignedCollectionOffer(signedOfferInput: $offer) {\n    id\n    status\n    collection {\n      contractData {\n        contractAddress\n      }\n    }\n  }\n}\n    `;\nexport const HideOfferDocument = gql`\n    mutation hideOffer($contract: Address!, $id: String!) {\n  hideOffer(contractAddress: $contract, offerId: $id) {\n    id\n  }\n}\n    `;\nexport const GenerateSingleNftOfferHashDocument = gql`\n    mutation generateSingleNftOfferHash($offerInput: SingleNFTOfferInput!) {\n  offer: generateSingleNftOfferToBeSigned(offerInput: $offerInput) {\n    offerHash\n    offerId\n    lenderAddress\n    signerAddress\n    borrowerAddress\n    validators {\n      validator\n      arguments\n    }\n    nft {\n      tokenId\n      collection {\n        contractData {\n          contractAddress\n        }\n      }\n    }\n  }\n}\n    `;\nexport const SaveSingleNftOfferDocument = gql`\n    mutation saveSingleNftOffer($offer: SingleNFTSignedOfferInput!) {\n  offer: saveSignedSingleNftOffer(signedOfferInput: $offer) {\n    id\n    status\n    nft {\n      tokenId\n      collection {\n        contractData {\n          contractAddress\n        }\n      }\n    }\n  }\n}\n    `;\nexport const UnhideOfferDocument = gql`\n    mutation unhideOffer($contract: Address!, $id: String!) {\n  showOffer(contractAddress: $contract, offerId: $id) {\n    id\n  }\n}\n    `;\nexport const GenerateRenegotiationOfferHashDocument = gql`\n    mutation generateRenegotiationOfferHash($renegotiationInput: RenegotiationOfferInput!) {\n  offer: generateRenegotiationOfferToBeSigned(\n    renegotiationInput: $renegotiationInput\n  ) {\n    loanId\n    renegotiationId\n    offerHash\n    lenderAddress\n    signerAddress\n    nft {\n      tokenId\n      collection {\n        contractData {\n          contractAddress\n        }\n      }\n    }\n  }\n}\n    `;\nexport const HideRenegotiationOfferDocument = gql`\n    mutation hideRenegotiationOffer($id: String!, $contractAddress: Address!) {\n  hideRenegotiation(renegotiationId: $id, contractAddress: $contractAddress) {\n    id\n  }\n}\n    `;\nexport const SaveRenegotiationOfferDocument = gql`\n    mutation saveRenegotiationOffer($offer: SignedRenegotiationOfferInput!) {\n  offer: saveRenegotiationSignedOffer(signedRenegotiationInput: $offer) {\n    id\n    status\n  }\n}\n    `;\nexport const UnhideRenegotiationOfferDocument = gql`\n    mutation unhideRenegotiationOffer($id: String!, $contractAddress: Address!) {\n  showRenegotiation(renegotiationId: $id, contractAddress: $contractAddress) {\n    id\n  }\n}\n    `;\nexport const HideSaleOfferDocument = gql`\n    mutation hideSaleOffer($id: String!) {\n  hideSaleOffer(saleOfferId: $id) {\n    id\n  }\n}\n    `;\nexport const ListBestBidsForNftDocument = gql`\n    query listBestBidsForNft($nftId: Int!, $currencyAddress: String!) {\n  bids: listBestBidsForNft(nftId: $nftId, currencyAddress: $currencyAddress) {\n    id\n    netAmount\n    status\n    marketPlace\n    fees\n    maker\n    expiration\n    createdDate\n    hidden\n    signature\n    currencyAddress\n    startTime\n    nonce\n  }\n}\n    `;\nexport const SaveSignedSaleOfferDocument = gql`\n    mutation saveSignedSaleOffer($offer: SignedOrderInput!) {\n  offer: saveSignedSaleOffer(signedOfferInput: $offer) {\n    id\n    status\n  }\n}\n    `;\nexport const UnhideSaleOfferDocument = gql`\n    mutation unhideSaleOffer($id: String!) {\n  showSaleOffer(saleOfferId: $id) {\n    id\n  }\n}\n    `;\nexport const CollectionsDocument = gql`\n    query collections($currency: Address!, $after: String) {\n  collections: listCollections(after: $after) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        name\n        slug\n        description\n        discordUrl\n        twitterUsername\n        externalUrl\n        collectionUrl\n        verified\n        image {\n          cacheUrl\n        }\n        bannerImage {\n          cacheUrl\n        }\n        contractData {\n          blockchain\n          contractAddress\n          createdDate\n          creatorAddress\n        }\n        statistics {\n          floorPrice {\n            ...CurrencyAmountInfo\n          }\n          floorPrice7d\n          floorPrice30d\n          bestOffer {\n            ...CurrencyAmountInfo\n          }\n          totalVolume\n          totalVolume1y\n          totalVolume3m\n          totalVolume1m\n          totalVolume1w\n          totalLoanVolume(currencyAddress: $currency)\n          totalLoanVolume1w(currencyAddress: $currency)\n          totalLoanVolume1m(currencyAddress: $currency)\n          totalLoanVolume3m(currencyAddress: $currency)\n          totalLoanVolume1y(currencyAddress: $currency)\n          numberOfPricedNfts\n          nftsCount\n          percentageInOutstandingLoans\n          repaymentRate\n          numberOfOffers(currencyAddress: $currency)\n        }\n      }\n    }\n  }\n}\n    ${CurrencyAmountInfoFragmentDoc}`;\nexport const CollectionsIdByContractAddressDocument = gql`\n    query collectionsIdByContractAddress($contractAddress: Address!) {\n  collections: getCollectionsByContractAddress(contractAddress: $contractAddress) {\n    id\n  }\n}\n    `;\nexport const CollectionIdBySlugDocument = gql`\n    query collectionIdBySlug($slug: String!) {\n  collection: getCollectionBySlug(slug: $slug) {\n    id\n  }\n}\n    `;\nexport const ListListingsDocument = gql`\n    query listListings($collections: [Int!], $userFilter: UserFilter, $marketplaceNames: [MarketplaceEnum!], $first: Int = 24, $after: String) {\n  result: listListings(\n    collectionIds: $collections\n    userFilter: $userFilter\n    marketplaceNames: $marketplaceNames\n    first: $first\n    after: $after\n  ) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        marketplaceName\n        createdDate\n        desiredDuration\n        desiredPrincipalAddress\n        user {\n          walletAddress\n        }\n        nft {\n          id\n          tokenId\n          collection {\n            id\n            slug\n            contractData {\n              contractAddress\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport const ListLoansDocument = gql`\n    query listLoans($borrowers: [String!] = [], $collections: [Int!] = [], $nfts: [Int!], $statuses: [LoanStatusType!] = [], $sortBy: [LoanSortInput!] = [], $terms: TermsFilter, $orderByStatuses: Boolean, $loansCurrencyAddress: Address, $first: Int = 24, $after: String) {\n  loans: listLoans(\n    borrowers: $borrowers\n    collections: $collections\n    nfts: $nfts\n    statuses: $statuses\n    sortBy: $sortBy\n    terms: $terms\n    orderByStatuses: $orderByStatuses\n    currencyAddress: $loansCurrencyAddress\n    first: $first\n    after: $after\n  ) {\n    totalCount\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        address\n        loanId\n        timestamp\n        txHash\n        indexInBlock\n        borrowerAddress\n        principalAddress\n        startTime\n        duration\n        status\n        offer {\n          offerId\n          signerAddress\n        }\n        currency {\n          symbol\n          decimals\n          address\n        }\n        repaidActivity {\n          totalInterest\n          timestamp\n        }\n        principalAmount\n        blendedAprBps\n        totalOriginationFee\n        protocolFee\n        nft {\n          id\n          name\n          tokenId\n          nftId\n          owner\n          image {\n            data\n            cacheUrl\n            contentTypeMime\n            accessTypeName\n          }\n          collection {\n            id\n            slug\n            name\n            nftsCount\n            contractData {\n              contractAddress\n            }\n          }\n        }\n        sources {\n          id\n          loanId\n          originationFee\n          principalAmount\n          lenderAddress\n          accruedInterest\n          aprBps\n          startTime\n        }\n      }\n    }\n  }\n}\n    `;\nexport const NftIdByContractAddressAndTokenIdDocument = gql`\n    query nftIdByContractAddressAndTokenId($contractAddress: Address!, $tokenId: BigInt!) {\n  nft: getNftByContractAddressAndTokenId(\n    contractAddress: $contractAddress\n    tokenId: $tokenId\n  ) {\n    id\n  }\n}\n    `;\nexport const NftIdBySlugTokenIdDocument = gql`\n    query nftIdBySlugTokenId($slug: String!, $tokenId: BigInt!) {\n  nft: getNftBySlugAndTokenId(slug: $slug, tokenId: $tokenId) {\n    id\n  }\n}\n    `;\nexport const OwnedNftsDocument = gql`\n    query ownedNfts($after: String) {\n  ownedNfts: listNftsFromUser(after: $after) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        collection {\n          id\n        }\n        tokenId\n        price\n        priceCurrencyAddress\n        activeLoan {\n          id\n        }\n        statistics {\n          lastSale {\n            order {\n              price\n              currency {\n                ...CurrencyInfo\n              }\n            }\n          }\n          topTraitFloorPrice {\n            ...CurrencyAmountInfo\n          }\n        }\n      }\n    }\n  }\n}\n    ${CurrencyInfoFragmentDoc}\n${CurrencyAmountInfoFragmentDoc}`;\nexport const ListOffersDocument = gql`\n    query listOffers($borrowerAddress: String, $lenders: [String!], $sortBy: OffersSortInput!, $terms: TermsFilter, $statuses: [OfferStatus!] = [ACTIVE, CANCELLED, INACTIVE, EXPIRED], $nfts: [Int!], $collections: [Int!], $onlySingleNftOffers: Boolean, $onlyCollectionOffers: Boolean, $first: Int = 24, $after: String) {\n  result: listOffers(\n    borrowerAddress: $borrowerAddress\n    lenders: $lenders\n    sortBy: [$sortBy]\n    terms: $terms\n    nfts: $nfts\n    collections: $collections\n    onlySingleNftOffers: $onlySingleNftOffers\n    onlyCollectionOffers: $onlyCollectionOffers\n    statuses: $statuses\n    first: $first\n    after: $after\n  ) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        offerId\n        lenderAddress\n        borrowerAddress\n        signerAddress\n        contractAddress\n        requiresLiquidation\n        principalAddress\n        principalAmount\n        currency {\n          symbol\n          decimals\n          address\n        }\n        aprBps\n        fee\n        capacity\n        expirationTime\n        duration\n        status\n        offerHash\n        signature\n        createdDate\n        repayment\n        hidden\n        maxSeniorRepayment\n        validators {\n          arguments\n          validator\n        }\n        ... on SingleNFTOffer {\n          nft {\n            id\n            tokenId\n            collection {\n              id\n              slug\n              contractData {\n                contractAddress\n              }\n            }\n          }\n        }\n        ... on CollectionOffer {\n          collection {\n            id\n            slug\n            contractData {\n              contractAddress\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type Requester<C = {}, E = unknown> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R> | AsyncIterable<R>\nexport function getSdk<C, E>(requester: Requester<C, E>) {\n  return {\n    listNft(variables: ListNftMutationVariables, options?: C): Promise<ListNftMutation> {\n      return requester<ListNftMutation, ListNftMutationVariables>(ListNftDocument, variables, options) as Promise<ListNftMutation>;\n    },\n    unlistNft(variables: UnlistNftMutationVariables, options?: C): Promise<UnlistNftMutation> {\n      return requester<UnlistNftMutation, UnlistNftMutationVariables>(UnlistNftDocument, variables, options) as Promise<UnlistNftMutation>;\n    },\n    generateCollectionOfferHash(variables: GenerateCollectionOfferHashMutationVariables, options?: C): Promise<GenerateCollectionOfferHashMutation> {\n      return requester<GenerateCollectionOfferHashMutation, GenerateCollectionOfferHashMutationVariables>(GenerateCollectionOfferHashDocument, variables, options) as Promise<GenerateCollectionOfferHashMutation>;\n    },\n    saveCollectionOffer(variables: SaveCollectionOfferMutationVariables, options?: C): Promise<SaveCollectionOfferMutation> {\n      return requester<SaveCollectionOfferMutation, SaveCollectionOfferMutationVariables>(SaveCollectionOfferDocument, variables, options) as Promise<SaveCollectionOfferMutation>;\n    },\n    hideOffer(variables: HideOfferMutationVariables, options?: C): Promise<HideOfferMutation> {\n      return requester<HideOfferMutation, HideOfferMutationVariables>(HideOfferDocument, variables, options) as Promise<HideOfferMutation>;\n    },\n    generateSingleNftOfferHash(variables: GenerateSingleNftOfferHashMutationVariables, options?: C): Promise<GenerateSingleNftOfferHashMutation> {\n      return requester<GenerateSingleNftOfferHashMutation, GenerateSingleNftOfferHashMutationVariables>(GenerateSingleNftOfferHashDocument, variables, options) as Promise<GenerateSingleNftOfferHashMutation>;\n    },\n    saveSingleNftOffer(variables: SaveSingleNftOfferMutationVariables, options?: C): Promise<SaveSingleNftOfferMutation> {\n      return requester<SaveSingleNftOfferMutation, SaveSingleNftOfferMutationVariables>(SaveSingleNftOfferDocument, variables, options) as Promise<SaveSingleNftOfferMutation>;\n    },\n    unhideOffer(variables: UnhideOfferMutationVariables, options?: C): Promise<UnhideOfferMutation> {\n      return requester<UnhideOfferMutation, UnhideOfferMutationVariables>(UnhideOfferDocument, variables, options) as Promise<UnhideOfferMutation>;\n    },\n    generateRenegotiationOfferHash(variables: GenerateRenegotiationOfferHashMutationVariables, options?: C): Promise<GenerateRenegotiationOfferHashMutation> {\n      return requester<GenerateRenegotiationOfferHashMutation, GenerateRenegotiationOfferHashMutationVariables>(GenerateRenegotiationOfferHashDocument, variables, options) as Promise<GenerateRenegotiationOfferHashMutation>;\n    },\n    hideRenegotiationOffer(variables: HideRenegotiationOfferMutationVariables, options?: C): Promise<HideRenegotiationOfferMutation> {\n      return requester<HideRenegotiationOfferMutation, HideRenegotiationOfferMutationVariables>(HideRenegotiationOfferDocument, variables, options) as Promise<HideRenegotiationOfferMutation>;\n    },\n    saveRenegotiationOffer(variables: SaveRenegotiationOfferMutationVariables, options?: C): Promise<SaveRenegotiationOfferMutation> {\n      return requester<SaveRenegotiationOfferMutation, SaveRenegotiationOfferMutationVariables>(SaveRenegotiationOfferDocument, variables, options) as Promise<SaveRenegotiationOfferMutation>;\n    },\n    unhideRenegotiationOffer(variables: UnhideRenegotiationOfferMutationVariables, options?: C): Promise<UnhideRenegotiationOfferMutation> {\n      return requester<UnhideRenegotiationOfferMutation, UnhideRenegotiationOfferMutationVariables>(UnhideRenegotiationOfferDocument, variables, options) as Promise<UnhideRenegotiationOfferMutation>;\n    },\n    hideSaleOffer(variables: HideSaleOfferMutationVariables, options?: C): Promise<HideSaleOfferMutation> {\n      return requester<HideSaleOfferMutation, HideSaleOfferMutationVariables>(HideSaleOfferDocument, variables, options) as Promise<HideSaleOfferMutation>;\n    },\n    listBestBidsForNft(variables: ListBestBidsForNftQueryVariables, options?: C): Promise<ListBestBidsForNftQuery> {\n      return requester<ListBestBidsForNftQuery, ListBestBidsForNftQueryVariables>(ListBestBidsForNftDocument, variables, options) as Promise<ListBestBidsForNftQuery>;\n    },\n    saveSignedSaleOffer(variables: SaveSignedSaleOfferMutationVariables, options?: C): Promise<SaveSignedSaleOfferMutation> {\n      return requester<SaveSignedSaleOfferMutation, SaveSignedSaleOfferMutationVariables>(SaveSignedSaleOfferDocument, variables, options) as Promise<SaveSignedSaleOfferMutation>;\n    },\n    unhideSaleOffer(variables: UnhideSaleOfferMutationVariables, options?: C): Promise<UnhideSaleOfferMutation> {\n      return requester<UnhideSaleOfferMutation, UnhideSaleOfferMutationVariables>(UnhideSaleOfferDocument, variables, options) as Promise<UnhideSaleOfferMutation>;\n    },\n    collections(variables: CollectionsQueryVariables, options?: C): Promise<CollectionsQuery> {\n      return requester<CollectionsQuery, CollectionsQueryVariables>(CollectionsDocument, variables, options) as Promise<CollectionsQuery>;\n    },\n    collectionsIdByContractAddress(variables: CollectionsIdByContractAddressQueryVariables, options?: C): Promise<CollectionsIdByContractAddressQuery> {\n      return requester<CollectionsIdByContractAddressQuery, CollectionsIdByContractAddressQueryVariables>(CollectionsIdByContractAddressDocument, variables, options) as Promise<CollectionsIdByContractAddressQuery>;\n    },\n    collectionIdBySlug(variables: CollectionIdBySlugQueryVariables, options?: C): Promise<CollectionIdBySlugQuery> {\n      return requester<CollectionIdBySlugQuery, CollectionIdBySlugQueryVariables>(CollectionIdBySlugDocument, variables, options) as Promise<CollectionIdBySlugQuery>;\n    },\n    listListings(variables?: ListListingsQueryVariables, options?: C): Promise<ListListingsQuery> {\n      return requester<ListListingsQuery, ListListingsQueryVariables>(ListListingsDocument, variables, options) as Promise<ListListingsQuery>;\n    },\n    listLoans(variables?: ListLoansQueryVariables, options?: C): Promise<ListLoansQuery> {\n      return requester<ListLoansQuery, ListLoansQueryVariables>(ListLoansDocument, variables, options) as Promise<ListLoansQuery>;\n    },\n    nftIdByContractAddressAndTokenId(variables: NftIdByContractAddressAndTokenIdQueryVariables, options?: C): Promise<NftIdByContractAddressAndTokenIdQuery> {\n      return requester<NftIdByContractAddressAndTokenIdQuery, NftIdByContractAddressAndTokenIdQueryVariables>(NftIdByContractAddressAndTokenIdDocument, variables, options) as Promise<NftIdByContractAddressAndTokenIdQuery>;\n    },\n    nftIdBySlugTokenId(variables: NftIdBySlugTokenIdQueryVariables, options?: C): Promise<NftIdBySlugTokenIdQuery> {\n      return requester<NftIdBySlugTokenIdQuery, NftIdBySlugTokenIdQueryVariables>(NftIdBySlugTokenIdDocument, variables, options) as Promise<NftIdBySlugTokenIdQuery>;\n    },\n    ownedNfts(variables?: OwnedNftsQueryVariables, options?: C): Promise<OwnedNftsQuery> {\n      return requester<OwnedNftsQuery, OwnedNftsQueryVariables>(OwnedNftsDocument, variables, options) as Promise<OwnedNftsQuery>;\n    },\n    listOffers(variables: ListOffersQueryVariables, options?: C): Promise<ListOffersQuery> {\n      return requester<ListOffersQuery, ListOffersQueryVariables>(ListOffersDocument, variables, options) as Promise<ListOffersQuery>;\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;", "import {\n  ApolloClient,\n  MutationOptions,\n  OperationVariables,\n  QueryOptions,\n} from '@apollo/client/core/index.js';\nimport { DocumentNode } from 'graphql';\n\nimport { getSdk, Requester } from '@/generated/graphql';\n\nexport type ApolloRequesterOptions<V, R> =\n  | Omit<QueryOptions<V>, 'variables' | 'query'>\n  | Omit<MutationOptions<R, V>, 'variables' | 'mutation'>;\n\nconst validDocDefOps = ['mutation', 'query', 'subscription'];\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function getSdkApollo<C>(client: ApolloClient<C>) {\n  const requester: Requester = async <R, V>(\n    doc: DocumentNode,\n    variables?: V,\n    options?: ApolloRequesterOptions<OperationVariables, R>,\n  ): Promise<R> => {\n    options = {\n      ...options,\n      context: {\n        ...options?.context,\n        clientName: 'lending',\n      },\n    };\n    // Valid document should contain *single* query or mutation unless it's has a fragment\n    if (\n      doc.definitions.filter(\n        (d) => d.kind === 'OperationDefinition' && validDocDefOps.includes(d.operation),\n      ).length !== 1\n    ) {\n      throw new Error('DocumentNode passed to Apollo Client must contain single query or mutation');\n    }\n\n    const definition = doc.definitions[0];\n\n    // Valid document should contain *OperationDefinition*\n    if (definition.kind !== 'OperationDefinition') {\n      throw new Error('DocumentNode passed to Apollo Client must contain single query or mutation');\n    }\n\n    switch (definition.operation) {\n      case 'mutation': {\n        const response = await client.mutate({\n          mutation: doc,\n          variables: variables as unknown as OperationVariables,\n          ...options,\n          fetchPolicy: 'no-cache',\n        });\n\n        if (response.errors) {\n          throw new Error(JSON.stringify(response.errors));\n        }\n\n        if (response.data === undefined || response.data === null) {\n          throw new Error('No data presented in the GraphQL response');\n        }\n\n        return response.data;\n      }\n      case 'query': {\n        const response = await client.query({\n          query: doc,\n          variables: variables as unknown as OperationVariables,\n          ...options,\n        });\n\n        if (response.errors) {\n          throw new Error(JSON.stringify(response.errors));\n        }\n\n        if (response.data === undefined || response.data === null) {\n          throw new Error('No data presented in the GraphQL response');\n        }\n\n        return response.data;\n      }\n      case 'subscription': {\n        throw new Error('Subscription requests through SDK interface are not supported');\n      }\n      default:\n        throw new Error('Operation not supported');\n    }\n  };\n\n  return getSdk(requester);\n}\n\nexport type Sdk = ReturnType<typeof getSdkApollo>;\n", "import {\n  Abi,\n  AbiParametersToPrimitiveTypes,\n  ExtractAbiEventNames,\n  ExtractAbiFunction,\n} from 'abitype';\nimport {\n  Address,\n  decodeEventLog,\n  DecodeEventLogReturnType,\n  encodeEventTopics,\n  EncodeEventTopicsParameters,\n  Hash,\n  TransactionReceipt,\n  zeroAddress as zeroAddressViem,\n} from 'viem';\n\nimport type { multiSourceLoanABI as multiSourceLoanABIV4 } from '@/generated/blockchain/v4';\nimport type {\n  auctionLoanLiquidatorABI as auctionLoanLiquidatorABIV5,\n  multiSourceLoanABI as multiSourceLoanABIV5,\n} from '@/generated/blockchain/v5';\nimport type {\n  auctionLoanLiquidatorAbi as auctionLoanLiquidatorABIV6,\n  multiSourceLoanAbi as multiSourceLoanABIV6,\n} from '@/generated/blockchain/v6';\n\ntype RepayAbiTypeV4 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV4, 'repayLoan'>['inputs']\n>;\ntype RepayAbiTypeV5 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV5, 'repayLoan'>['inputs']\n>;\ntype RepayAbiTypeV6 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV6, 'repayLoan'>['inputs']\n>;\n\ntype EmitAbiTypeV4 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV4, 'emitLoan'>['inputs']\n>;\ntype EmitAbiTypeV5 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV5, 'emitLoan'>['inputs']\n>;\ntype EmitAbiTypeV6 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV6, 'emitLoan'>['inputs']\n>;\n\ntype RefiAbiTypeV4 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV4, 'refinanceFull'>['inputs']\n>;\ntype RefiAbiTypeV5 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV5, 'refinanceFull'>['inputs']\n>;\ntype RefiAbiTypeV6 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof multiSourceLoanABIV6, 'refinanceFull'>['inputs']\n>;\n\ntype PlaceBidAbiTypeV5 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof auctionLoanLiquidatorABIV5, 'placeBid'>['inputs']\n>;\ntype PlaceBidAbiTypeV6 = AbiParametersToPrimitiveTypes<\n  ExtractAbiFunction<typeof auctionLoanLiquidatorABIV6, 'placeBid'>['inputs']\n>;\n\nexport type LoanV4 = RepayAbiTypeV4[2] & { contractAddress: Address };\nexport type LoanV5 = RepayAbiTypeV5[0]['loan'] & {\n  contractAddress: Address;\n  startTime: Date | bigint;\n};\nexport type LoanV6 = RepayAbiTypeV6[0]['loan'] & {\n  contractAddress: Address;\n  startTime: Date | bigint;\n  contractStartTime: Date | bigint;\n};\nexport type Loan = LoanV4 | LoanV5 | LoanV6;\n\nexport type OfferV4 = EmitAbiTypeV4[0];\nexport type OfferV5 = EmitAbiTypeV5[0]['executionData']['offer'];\nexport type OfferV6 = EmitAbiTypeV6[0]['executionData']['offerExecution'][number]['offer'];\n\nexport type RenegotiationV4 = RefiAbiTypeV4[0];\nexport type RenegotiationV5 = RefiAbiTypeV5[0];\nexport type RenegotiationV6 = RefiAbiTypeV6[0];\n\ntype AuctionV5 = PlaceBidAbiTypeV5[2];\ntype AuctionV6 = PlaceBidAbiTypeV6[2];\nexport type Auction = AuctionV5 | AuctionV6;\n\nexport type HexString = `0x${string}`;\nexport type Signature = HexString;\n\nexport const zeroAddress: Address = zeroAddressViem;\nexport const zeroHash: Hash = `0x${'0'.repeat(64)}`;\nexport const zeroHex: HexString = `0x0`;\n\nexport const REORG_SAFETY_BUFFER = 5n * 60n;\n\nexport function filterLogs<TAbi extends Abi, TEventName extends ExtractAbiEventNames<TAbi>>(\n  receipt: TransactionReceipt,\n  filter: EncodeEventTopicsParameters<TAbi, TEventName>,\n): (DecodeEventLogReturnType<TAbi, TEventName> & { topics: string[] })[] {\n  return receipt.logs\n    .filter((log) => {\n      const topics = encodeEventTopics(filter);\n      return topics[0] == log.topics[0];\n    })\n    .map((log) => {\n      const decoded = decodeEventLog({\n        abi: filter.abi,\n        data: log.data,\n        topics: log.topics,\n        eventName: filter.eventName,\n      });\n      return { ...decoded, topics: log.topics };\n    })\n    .filter((event) => event.eventName == filter.eventName);\n}\n", "export type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\nexport type OptionalNullable<T, K extends keyof T> = Omit<T, K> & {\n  [P in K]?: T[P] | null | undefined;\n};\nexport const isDefined = <T>(value: T | null | undefined): value is T =>\n  value !== null && value !== undefined;\n", "import {\n  Account,\n  Address,\n  Chain,\n  getContract,\n  GetContractReturnType,\n  PublicClient,\n  Transport,\n  WalletClient,\n} from 'viem';\n\nimport { oldErc721Abi } from '@/generated/blockchain/oldErc721';\nimport { erc20ABI, erc721ABI } from '@/generated/blockchain/v5';\nimport { areSameAddress } from '@/utils/string';\n\nimport { AllV4 } from './AllV4';\nimport { AllV5 } from './AllV5';\nimport { AllV6 } from './AllV6';\nimport { CryptoPunks } from './CryptoPunks';\nimport { LeverageV5 } from './LeverageV5';\nimport { MslV4 } from './MslV4';\nimport { MslV5 } from './MslV5';\nimport { MslV6 } from './MslV6';\nimport { Seaport } from './Seaport';\nimport { UserVaultV5 } from './UserVaultV5';\nimport { UserVaultV6 } from './UserVaultV6';\n\nexport type Wallet = WalletClient<Transport, Chain, Account>;\n\nexport class Contracts {\n  walletClient: Wallet;\n  publicClient: PublicClient;\n\n  MultiSourceLoanV4: MslV4;\n  MultiSourceLoanV5: MslV5;\n  MultiSourceLoanV6: MslV6;\n  AuctionLoanLiquidatorV4: AllV4;\n  AuctionLoanLiquidatorV5: AllV5;\n  AuctionLoanLiquidatorV6: AllV6;\n  UserVaultV5: UserVaultV5;\n  UserVaultV6: UserVaultV6;\n  Leverage: LeverageV5;\n  Seaport: Seaport;\n  CryptoPunks: CryptoPunks;\n\n  constructor(publicClient: PublicClient, walletClient: Wallet) {\n    this.walletClient = walletClient;\n    this.publicClient = publicClient;\n\n    this.MultiSourceLoanV4 = new MslV4({ walletClient });\n    this.MultiSourceLoanV5 = new MslV5({ walletClient });\n    this.MultiSourceLoanV6 = new MslV6({ walletClient });\n    this.AuctionLoanLiquidatorV4 = new AllV4({ walletClient });\n    this.AuctionLoanLiquidatorV5 = new AllV5({ walletClient });\n    this.AuctionLoanLiquidatorV6 = new AllV6({ walletClient });\n    this.UserVaultV5 = new UserVaultV5({ walletClient });\n    this.UserVaultV6 = new UserVaultV6({ walletClient });\n    this.Leverage = new LeverageV5({\n      walletClient,\n      mslAddress: this.MultiSourceLoanV5.address,\n    });\n    this.Seaport = new Seaport({ walletClient });\n    this.CryptoPunks = new CryptoPunks({ walletClient });\n  }\n\n  Msl(contractAddress: Address) {\n    if (areSameAddress(contractAddress, this.MultiSourceLoanV4.address)) {\n      return this.MultiSourceLoanV4;\n    }\n    if (areSameAddress(contractAddress, this.MultiSourceLoanV5.address)) {\n      return this.MultiSourceLoanV5;\n    }\n    if (areSameAddress(contractAddress, this.MultiSourceLoanV6.address)) {\n      return this.MultiSourceLoanV6;\n    }\n    throw new Error(`Invalid Contract Address ${contractAddress}`);\n  }\n\n  /**\n   *\n   * @param contractAddress The contract address of the MultiSourceLoanV4 or MultiSourceLoanV5 contract\n   * @returns The corresponding AuctionLoanLiquidator contract\n   */\n  All(contractAddress: Address) {\n    if (areSameAddress(contractAddress, this.MultiSourceLoanV4.address)) {\n      return this.AuctionLoanLiquidatorV4;\n    }\n    if (areSameAddress(contractAddress, this.MultiSourceLoanV5.address)) {\n      return this.AuctionLoanLiquidatorV5;\n    }\n    if (areSameAddress(contractAddress, this.MultiSourceLoanV6.address)) {\n      return this.AuctionLoanLiquidatorV6;\n    }\n    throw new Error(`Invalid Contract Address ${contractAddress}`);\n  }\n\n  UserVault(contractAddress: Address) {\n    if (areSameAddress(contractAddress, this.UserVaultV5.address)) {\n      return this.UserVaultV5;\n    }\n    if (areSameAddress(contractAddress, this.UserVaultV6.address)) {\n      return this.UserVaultV6;\n    }\n\n    throw new Error(`Invalid Contract Address ${contractAddress}`);\n  }\n\n  ERC721(\n    nftAddress: Address,\n  ): GetContractReturnType<typeof erc721ABI, PublicClient, Wallet, Address> {\n    return getContract({\n      address: nftAddress,\n      abi: erc721ABI,\n      walletClient: this.walletClient,\n      publicClient: this.publicClient,\n    });\n  }\n\n  OldERC721(\n    nftAddress: Address,\n  ): GetContractReturnType<typeof oldErc721Abi, PublicClient, Wallet, Address> {\n    return getContract({\n      address: nftAddress,\n      abi: oldErc721Abi,\n      walletClient: this.walletClient,\n      publicClient: this.publicClient,\n    });\n  }\n\n  ERC20(\n    nftAddress: Address,\n  ): GetContractReturnType<typeof erc20ABI, PublicClient, Wallet, Address> {\n    return getContract({\n      address: nftAddress,\n      abi: erc20ABI,\n      walletClient: this.walletClient,\n      publicClient: this.publicClient,\n    });\n  }\n}\n", "export const oldErc721Abi = [\n  {\n    constant: false,\n    inputs: [\n      { name: '_uri', type: 'string' },\n      { name: '_editions', type: 'uint256' },\n      { name: '_salePrice', type: 'uint256' },\n    ],\n    name: 'addNewTokenWithEditions',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_tokenId', type: 'uint256' },\n      { name: '_salePrice', type: 'uint256' },\n    ],\n    name: 'setSalePrice',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '_name', type: 'string' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_to', type: 'address' },\n      { name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'currentBidDetailsOfToken',\n    outputs: [\n      { name: '', type: 'uint256' },\n      { name: '', type: 'address' },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'approvedFor',\n    outputs: [{ name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'acceptBid',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_creator', type: 'address' }],\n    name: 'isWhitelisted',\n    outputs: [{ name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'bid',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'tokensOf',\n    outputs: [{ name: '', type: 'uint256[]' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_percentage', type: 'uint256' }],\n    name: 'setMaintainerPercentage',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_creator', type: 'address' }],\n    name: 'whitelistCreator',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_uri', type: 'string' }],\n    name: 'originalTokenOfUri',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '_symbol', type: 'string' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'cancelBid',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'salePriceOfToken',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_to', type: 'address' },\n      { name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'takeOwnership',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_percentage', type: 'uint256' }],\n    name: 'setCreatorPercentage',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', type: 'string' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'creatorOfToken',\n    outputs: [{ name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_tokenId', type: 'uint256' }],\n    name: 'buy',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: '_uri', type: 'string' }],\n    name: 'addNewToken',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'creatorPercentage',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'maintainerPercentage',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{ name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: true, name: '_creator', type: 'address' }],\n    name: 'WhitelistCreator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_bidder', type: 'address' },\n      { indexed: true, name: '_amount', type: 'uint256' },\n      { indexed: true, name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'Bid',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_bidder', type: 'address' },\n      { indexed: true, name: '_seller', type: 'address' },\n      { indexed: false, name: '_amount', type: 'uint256' },\n      { indexed: true, name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'AcceptBid',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_bidder', type: 'address' },\n      { indexed: true, name: '_amount', type: 'uint256' },\n      { indexed: true, name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'CancelBid',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_buyer', type: 'address' },\n      { indexed: true, name: '_seller', type: 'address' },\n      { indexed: false, name: '_amount', type: 'uint256' },\n      { indexed: true, name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'Sold',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_tokenId', type: 'uint256' },\n      { indexed: true, name: '_price', type: 'uint256' },\n    ],\n    name: 'SalePriceSet',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: 'previousOwner', type: 'address' },\n      { indexed: true, name: 'newOwner', type: 'address' },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_from', type: 'address' },\n      { indexed: true, name: '_to', type: 'address' },\n      { indexed: false, name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, name: '_owner', type: 'address' },\n      { indexed: true, name: '_approved', type: 'address' },\n      { indexed: false, name: '_tokenId', type: 'uint256' },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n] as const;\n", "// Generated by @wagmi/cli@1.0.2 on 10/30/2023 at 11:37:35 AM\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AddressManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const addressManagerABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_original', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'AddressAlreadyAddedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'AddressNotAddedError',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'address_added', internalType: 'address', type: 'address', indexed: false }],\n    name: 'AddressAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'address_removed', internalType: 'address', type: 'address', indexed: false }],\n    name: 'AddressRemovedFromWhitelist',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'address_whitelisted', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'AddressWhitelisted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'add',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'addToWhitelist',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'addressToIndex',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_index', internalType: 'uint16', type: 'uint16' }],\n    name: 'indexToAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'isWhitelisted',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'removeFromWhitelist',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CollectionOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const collectionOracleABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  { type: 'error', inputs: [], name: 'InvalidLengthsError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'NftNotFoundError',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address', indexed: false },\n      { name: '_asset', internalType: 'address', type: 'address', indexed: false },\n      { name: '_price', internalType: 'uint128', type: 'uint128', indexed: false },\n      { name: '_timestamp', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'PriceUpdated',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n    ],\n    name: 'getPrice',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IOracle.PriceUpdate',\n        type: 'tuple',\n        components: [\n          { name: 'price', internalType: 'uint128', type: 'uint128' },\n          { name: 'updatedTimestamp', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'collections', internalType: 'address[]', type: 'address[]' },\n      { name: 'assets', internalType: 'address[]', type: 'address[]' },\n      { name: 'price', internalType: 'uint128[]', type: 'uint128[]' },\n      { name: 'timestamp', internalType: 'uint128', type: 'uint128' },\n    ],\n    name: 'updatePrices',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AuctionLoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const auctionLoanLiquidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: 'liquidationDistributor', internalType: 'address', type: 'address' },\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'AuctionAlreadyInProgressError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionNotOverError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionOverError',\n  },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CouldNotModifyValidLoansError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'InvalidHashAuctionError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidTriggerFee',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_loan', internalType: 'address', type: 'address' }],\n    name: 'LoanNotAcceptedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_minBid', internalType: 'uint256', type: 'uint256' }],\n    name: 'MinBidError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'NFTNotOwnedError',\n  },\n  { type: 'error', inputs: [], name: 'NoBidsError' },\n  { type: 'error', inputs: [], name: 'ZeroAddressError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'auctionContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'asset', internalType: 'address', type: 'address', indexed: false },\n      { name: 'proceeds', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'settler', internalType: 'address', type: 'address', indexed: false },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AuctionSettled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newBidder', internalType: 'address', type: 'address', indexed: false },\n      { name: 'bid', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BidPlaced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'liquidationDistributor', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LiquidationDistributorUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractRemoved',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'LoanLiquidationStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'TriggerFeeUpdated',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_TRIGGER_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_INCREMENT_BPS',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'addLoanContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getAuctionHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationDistributor',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTriggerFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getValidLoanContracts',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      { name: '_bid', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'placeBid',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'removeLoanContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'settleAuction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '__liquidationDistributor', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationDistributor',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateTriggerFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// BaseLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const baseLoanABI = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CannotLiquidateError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredRenegotiationOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'InvalidAmountError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },\n  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },\n  { type: 'error', inputs: [], name: 'InvalidDurationError' },\n  { type: 'error', inputs: [], name: 'InvalidLenderError' },\n  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidProtocolFeeError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  { type: 'error', inputs: [], name: 'InvalidValueError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderOrBorrowerCallableError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'ZeroDurationError' },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllRenegotiationOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'borrower', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BorrowerOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'minimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ImprovementMinimumUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_PROTOCOL_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getImprovementMinimum',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isBorrowerOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinRenegotiationOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'minOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newMinimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateImprovementMinimum',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ECDSA\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ecdsaABI = [\n  { type: 'error', inputs: [], name: 'ECDSAInvalidSignature' },\n  {\n    type: 'error',\n    inputs: [{ name: 'length', internalType: 'uint256', type: 'uint256' }],\n    name: 'ECDSAInvalidSignatureLength',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 's', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'ECDSAInvalidSignatureS',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC165\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc165ABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc20ABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC721\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc721ABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC721TokenReceiver\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc721TokenReceiverABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DelegateRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const delegateRegistryABI = [\n  { type: 'error', inputs: [], name: 'MulticallFailed' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateContract',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC1155',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateERC721',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForAll',\n    outputs: [{ name: 'valid', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForContract',\n    outputs: [{ name: 'valid', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC1155',\n    outputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC20',\n    outputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC721',\n    outputs: [{ name: 'valid', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateAll',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateContract',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC1155',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC20',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateERC721',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'hashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'getDelegationsFromHashes',\n    outputs: [\n      {\n        name: 'delegations_',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegations',\n    outputs: [\n      {\n        name: 'delegations_',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegations',\n    outputs: [\n      {\n        name: 'delegations_',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'location', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'readSlot',\n    outputs: [{ name: 'contents', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'locations', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'readSlots',\n    outputs: [{ name: 'contents', internalType: 'bytes32[]', type: 'bytes32[]' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'sweep', outputs: [] },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DelegationRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const delegationRegistryABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateForContract',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateForToken',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address', indexed: false }],\n    name: 'RevokeAllDelegates',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'RevokeDelegate',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'vault', internalType: 'address', type: 'address' },\n    ],\n    name: 'checkDelegateForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n    ],\n    name: 'checkDelegateForContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'checkDelegateForToken',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateForContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateForToken',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'getContractLevelDelegations',\n    outputs: [\n      {\n        name: 'contractDelegations',\n        internalType: 'struct IDelegationRegistry.ContractDelegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'delegate', internalType: 'address', type: 'address' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'getDelegatesForAll',\n    outputs: [{ name: 'delegates', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n    ],\n    name: 'getDelegatesForContract',\n    outputs: [{ name: 'delegates', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getDelegatesForToken',\n    outputs: [{ name: 'delegates', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'delegate', internalType: 'address', type: 'address' }],\n    name: 'getDelegationsByDelegate',\n    outputs: [\n      {\n        name: 'info',\n        internalType: 'struct IDelegationRegistry.DelegationInfo[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegationRegistry.DelegationType', type: 'uint8' },\n          { name: 'vault', internalType: 'address', type: 'address' },\n          { name: 'delegate', internalType: 'address', type: 'address' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'getTokenLevelDelegations',\n    outputs: [\n      {\n        name: 'tokenDelegations',\n        internalType: 'struct IDelegationRegistry.TokenDelegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'delegate', internalType: 'address', type: 'address' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'revokeAllDelegates',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'delegate', internalType: 'address', type: 'address' }],\n    name: 'revokeDelegate',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'revokeSelf',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IAuctionLoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iAuctionLoanLiquidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'addLoanContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getAuctionHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationDistributor',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTriggerFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getValidLoanContracts',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      { name: '_bid', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'placeBid',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'removeLoanContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'settleAuction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_liquidationDistributor', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationDistributor',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateTriggerFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IBaseLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iBaseLoanABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IBaseOfferValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iBaseOfferValidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_offer',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ICryptoPunksMarket\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iCryptoPunksMarketABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],\n    name: 'pendingWithdrawals',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'punkBids',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct ICryptoPunksMarket.Bid',\n        type: 'tuple',\n        components: [\n          { name: 'hasBid', internalType: 'bool', type: 'bool' },\n          { name: 'punkIndex', internalType: 'uint256', type: 'uint256' },\n          { name: 'bidder', internalType: 'address', type: 'address' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'punkIndexToAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'punkIndex', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferPunk',\n    outputs: [],\n  },\n  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'withdraw', outputs: [] },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IDelegateRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iDelegateRegistryABI = [\n  { type: 'error', inputs: [], name: 'MulticallFailed' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateContract',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC1155',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateERC721',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC1155',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC20',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC721',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateAll',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateContract',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC1155',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC20',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateERC721',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'getDelegationsFromHashes',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegations',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegations',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'location', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'readSlot',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'locations', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'readSlots',\n    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IDelegationRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iDelegationRegistryABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateForContract',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateForToken',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address', indexed: false }],\n    name: 'RevokeAllDelegates',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'RevokeDelegate',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'vault', internalType: 'address', type: 'address' },\n    ],\n    name: 'checkDelegateForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n    ],\n    name: 'checkDelegateForContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'checkDelegateForToken',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateForContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateForToken',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'getContractLevelDelegations',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegationRegistry.ContractDelegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'delegate', internalType: 'address', type: 'address' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'getDelegatesForAll',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n    ],\n    name: 'getDelegatesForContract',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'vault', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getDelegatesForToken',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'delegate', internalType: 'address', type: 'address' }],\n    name: 'getDelegationsByDelegate',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IDelegationRegistry.DelegationInfo[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegationRegistry.DelegationType', type: 'uint8' },\n          { name: 'vault', internalType: 'address', type: 'address' },\n          { name: 'delegate', internalType: 'address', type: 'address' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'getTokenLevelDelegations',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegationRegistry.TokenDelegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'delegate', internalType: 'address', type: 'address' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'revokeAllDelegates',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'delegate', internalType: 'address', type: 'address' }],\n    name: 'revokeDelegate',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'vault', internalType: 'address', type: 'address' }],\n    name: 'revokeSelf',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC1271\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ierc1271ABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'hash', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'signature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'isValidSignature',\n    outputs: [{ name: 'magicValue', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC165\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ierc165ABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILeverage\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLeverageABI = [\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'buy',\n    outputs: [\n      { name: '', internalType: 'uint256[]', type: 'uint256[]' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'finalUpdateMultiSourceLoanAddress',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'finalUpdateSeaportAddress',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMultiSourceLoanAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getSeaportAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'sell',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'updateMultiSourceLoanAddressFirst',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'updateSeaportAddressFirst',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILiquidationDistributor\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLiquidationDistributorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_repayment', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'distribute',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanCallback\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanCallbackABI = [\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterNFTTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_fee', internalType: 'uint256', type: 'uint256' },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterPrincipalTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanLiquidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMultiSourceLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMultiSourceLoanABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegate',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_executionData',\n        internalType: 'struct IMultiSourceLoan.LoanExecutionData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'executionData',\n            internalType: 'struct IBaseLoan.ExecutionData',\n            type: 'tuple',\n            components: [\n              {\n                name: 'offer',\n                internalType: 'struct IBaseLoan.LoanOffer',\n                type: 'tuple',\n                components: [\n                  { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lender', internalType: 'address', type: 'address' },\n                  { name: 'fee', internalType: 'uint256', type: 'uint256' },\n                  { name: 'borrower', internalType: 'address', type: 'address' },\n                  { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n                  { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n                  { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'principalAddress', internalType: 'address', type: 'address' },\n                  { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                  { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n                  { name: 'duration', internalType: 'uint256', type: 'uint256' },\n                  {\n                    name: 'validators',\n                    internalType: 'struct IBaseLoan.OfferValidator[]',\n                    type: 'tuple[]',\n                    components: [\n                      { name: 'validator', internalType: 'address', type: 'address' },\n                      { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n                    ],\n                  },\n                ],\n              },\n              { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'amount', internalType: 'uint256', type: 'uint256' },\n              { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n          { name: 'borrowerOfferSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'emitLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'executeFlashAction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_extension', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'extendLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getDelegateRegistry',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getFlashActionContract',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'getLoanHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMaxSources',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMinLockPeriod',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'refinanceFull',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'refinancePartial',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_repaymentData',\n        internalType: 'struct IMultiSourceLoan.LoanRepaymentData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'data',\n            internalType: 'struct IMultiSourceLoan.SignableRepaymentData',\n            type: 'tuple',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n              { name: 'shouldDelegate', internalType: 'bool', type: 'bool' },\n            ],\n          },\n          {\n            name: 'loan',\n            internalType: 'struct IMultiSourceLoan.Loan',\n            type: 'tuple',\n            components: [\n              { name: 'borrower', internalType: 'address', type: 'address' },\n              { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              {\n                name: 'source',\n                internalType: 'struct IMultiSourceLoan.Source[]',\n                type: 'tuple[]',\n                components: [\n                  { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lender', internalType: 'address', type: 'address' },\n                  { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n                  { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n                  { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                ],\n              },\n            ],\n          },\n          { name: 'borrowerSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'repayLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'revokeDelegate',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDelegationRegistry', internalType: 'address', type: 'address' }],\n    name: 'setDelegateRegistry',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newFlashActionContract', internalType: 'address', type: 'address' }],\n    name: 'setFlashActionContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'maxSources', internalType: 'uint256', type: 'uint256' }],\n    name: 'setMaxSources',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minLockPeriod', internalType: 'uint256', type: 'uint256' }],\n    name: 'setMinLockPeriod',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMulticall3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMulticall3ABI = [\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'returnData', internalType: 'bytes[]', type: 'bytes[]' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call3[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'allowFailure', internalType: 'bool', type: 'bool' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call3Value[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'allowFailure', internalType: 'bool', type: 'bool' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate3Value',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'blockAndAggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getBasefee',\n    outputs: [{ name: 'basefee', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],\n    name: 'getBlockHash',\n    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getBlockNumber',\n    outputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getChainId',\n    outputs: [{ name: 'chainid', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockCoinbase',\n    outputs: [{ name: 'coinbase', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockDifficulty',\n    outputs: [{ name: 'difficulty', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockGasLimit',\n    outputs: [{ name: 'gaslimit', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockTimestamp',\n    outputs: [{ name: 'timestamp', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],\n    name: 'getEthBalance',\n    outputs: [{ name: 'balance', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLastBlockHash',\n    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'tryAggregate',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'tryBlockAndAggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// INFTFlashAction\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const inftFlashActionABI = [\n  { type: 'error', inputs: [], name: 'InvalidOwnerError' },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'execute',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iOracleABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n    ],\n    name: 'getPrice',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IOracle.PriceUpdate',\n        type: 'tuple',\n        components: [\n          { name: 'price', internalType: 'uint128', type: 'uint128' },\n          { name: 'updatedTimestamp', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IReservoir\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iReservoirABI = [\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_executionInfos',\n        internalType: 'struct IReservoir.ExecutionInfo[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'module', internalType: 'address', type: 'address' },\n          { name: 'data', internalType: 'bytes', type: 'bytes' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'execute',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IUserVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iUserVaultABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'ERC20BalanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'ERC721OwnerOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_assetRecipient', internalType: 'address', type: 'address' },\n    ],\n    name: 'burn',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'burnAndWithdraw',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'depositERC721s',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'depositEth',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'mint',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'withdrawERC20s',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'withdrawERC721s',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdrawEth',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IWrappedPunk\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iWrappedPunkABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'burn',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],\n    name: 'proxyInfo',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'registerProxy',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// InputChecker\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const inputCheckerABI = [{ type: 'error', inputs: [], name: 'AddressZeroError' }] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Leverage\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const leverageABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_multiSourceLoanAddress', internalType: 'address', type: 'address' },\n      { name: '_marketplaceContracts', internalType: 'address', type: 'address' },\n      { name: '_wethAddress', internalType: 'address payable', type: 'address' },\n      { name: '_punkMarketAddress', internalType: 'address payable', type: 'address' },\n      { name: '_wrappedPunkAddress', internalType: 'address payable', type: 'address' },\n      { name: '_seaportAddress', internalType: 'address payable', type: 'address' },\n    ],\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'CouldNotReturnEthError' },\n  { type: 'error', inputs: [], name: 'InvalidAddressUpdateError' },\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  { type: 'error', inputs: [], name: 'MarketplaceAddressNotWhitelisted' },\n  { type: 'error', inputs: [], name: 'OnlyMultiSourceLoanError' },\n  { type: 'error', inputs: [], name: 'OnlyWethSupportedError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_loanIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'BNPLLoansStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address', indexed: false }],\n    name: 'MultiSourceLoanPendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address', indexed: false }],\n    name: 'MultiSourceLoanUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address', indexed: false }],\n    name: 'SeaportPendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address', indexed: false }],\n    name: 'SeaportUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_loanIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'SellAndRepayExecuted',\n  },\n  { stateMutability: 'payable', type: 'fallback' },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterNFTTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_fee', internalType: 'uint256', type: 'uint256' },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterPrincipalTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'buy',\n    outputs: [\n      { name: '', internalType: 'uint256[]', type: 'uint256[]' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'finalUpdateMultiSourceLoanAddress',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'finalUpdateSeaportAddress',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMultiSourceLoanAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getSeaportAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'sell',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'updateMultiSourceLoanAddressFirst',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'updateSeaportAddressFirst',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LiquidationDistributor\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const liquidationDistributorABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_proceeds', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'distribute',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Math\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const mathABI = [{ type: 'error', inputs: [], name: 'MathOverflowedMulDiv' }] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MultiSourceCommons\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multiSourceCommonsABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeArtifacts',\n    outputs: [{ name: 'excludedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeContracts',\n    outputs: [{ name: 'excludedContracts_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeSenders',\n    outputs: [{ name: 'excludedSenders_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'setUp', outputs: [] },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifactSelectors',\n    outputs: [\n      {\n        name: 'targetedArtifactSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifacts',\n    outputs: [{ name: 'targetedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetContracts',\n    outputs: [{ name: 'targetedContracts_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetInterfaces',\n    outputs: [\n      {\n        name: 'targetedInterfaces_',\n        internalType: 'struct StdInvariant.FuzzInterface[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'artifacts', internalType: 'string[]', type: 'string[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetSelectors',\n    outputs: [\n      {\n        name: 'targetedSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetSenders',\n    outputs: [{ name: 'targetedSenders_', internalType: 'address[]', type: 'address[]' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MultiSourceLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multiSourceLoanABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: 'loanLiquidator', internalType: 'address', type: 'address' },\n      {\n        name: 'protocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'maxSources', internalType: 'uint256', type: 'uint256' },\n      { name: 'minLockPeriod', internalType: 'uint256', type: 'uint256' },\n      { name: 'delegateRegistry', internalType: 'address', type: 'address' },\n      { name: 'flashActionContract', internalType: 'address', type: 'address' },\n    ],\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CannotLiquidateError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'ECDSAInvalidSignature' },\n  {\n    type: 'error',\n    inputs: [{ name: 'length', internalType: 'uint256', type: 'uint256' }],\n    name: 'ECDSAInvalidSignatureLength',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 's', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'ECDSAInvalidSignatureS',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'ExtensionNotAvailableError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'InvalidAmountError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },\n  { type: 'error', inputs: [], name: 'InvalidDurationError' },\n  { type: 'error', inputs: [], name: 'InvalidLenderError' },\n  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidMethodError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidProtocolFeeError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidRenegotiationOfferError' },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  { type: 'error', inputs: [], name: 'InvalidValueError' },\n  { type: 'error', inputs: [], name: 'LengthMismatchError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  { type: 'error', inputs: [], name: 'LoanExpiredError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'minLockPeriod', internalType: 'uint256', type: 'uint256' }],\n    name: 'MinLockPeriodTooHighError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: 'i', internalType: 'uint256', type: 'uint256' },\n      { name: 'returndata', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'MulticallFailed',\n  },\n  { type: 'error', inputs: [], name: 'NFTNotReturnedError' },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderOrBorrowerCallableError' },\n  { type: 'error', inputs: [], name: 'PartialOfferCannotChangeDurationError' },\n  { type: 'error', inputs: [], name: 'PartialOfferCannotHaveFeeError' },\n  { type: 'error', inputs: [], name: 'RefinanceFullError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'minTimestamp', internalType: 'uint256', type: 'uint256' }],\n    name: 'SourceCannotBeRefinancedError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: 'sourcePrincipal', internalType: 'uint256', type: 'uint256' },\n      { name: 'loanPrincipal', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'TargetPrincipalTooLowError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 'sources', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooManySourcesError',\n  },\n  { type: 'error', inputs: [], name: 'ZeroDurationError' },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllRenegotiationOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'borrower', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BorrowerOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'newdelegateRegistry', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'DelegateRegistryUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'Delegated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'newFlashActionContract', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'FlashActionContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'target', internalType: 'address', type: 'address', indexed: false },\n      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'FlashActionExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'minimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ImprovementMinimumUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'borrower', internalType: 'address', type: 'address', indexed: false },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanEmitted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'oldLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n      { name: '_extension', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanExtended',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'oldLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRefinanced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'totalRepayment', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRepaid',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newMax', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MaxSourcesUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'minLockPeriod', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinLockPeriodUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RevokeDelegate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'contractAdded', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'tax',\n        internalType: 'struct WithCallbacks.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractRemoved', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_PROTOCOL_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      {\n        name: '_tax',\n        internalType: 'struct WithCallbacks.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegate',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_executionData',\n        internalType: 'struct IMultiSourceLoan.LoanExecutionData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'executionData',\n            internalType: 'struct IBaseLoan.ExecutionData',\n            type: 'tuple',\n            components: [\n              {\n                name: 'offer',\n                internalType: 'struct IBaseLoan.LoanOffer',\n                type: 'tuple',\n                components: [\n                  { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lender', internalType: 'address', type: 'address' },\n                  { name: 'fee', internalType: 'uint256', type: 'uint256' },\n                  { name: 'borrower', internalType: 'address', type: 'address' },\n                  { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n                  { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n                  { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'principalAddress', internalType: 'address', type: 'address' },\n                  { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                  { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n                  { name: 'duration', internalType: 'uint256', type: 'uint256' },\n                  {\n                    name: 'validators',\n                    internalType: 'struct IBaseLoan.OfferValidator[]',\n                    type: 'tuple[]',\n                    components: [\n                      { name: 'validator', internalType: 'address', type: 'address' },\n                      { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n                    ],\n                  },\n                ],\n              },\n              { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'amount', internalType: 'uint256', type: 'uint256' },\n              { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n          { name: 'borrowerOfferSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'emitLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'executeFlashAction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_extension', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'extendLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getDelegateRegistry',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getFlashActionContract',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getImprovementMinimum',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'getLoanHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMaxSources',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMinLockPeriod',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_loanPrincipal', internalType: 'uint256', type: 'uint256' }],\n    name: 'getMinSourcePrincipal',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isBorrowerOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinRenegotiationOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'minOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'refinanceFull',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'refinancePartial',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_repaymentData',\n        internalType: 'struct IMultiSourceLoan.LoanRepaymentData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'data',\n            internalType: 'struct IMultiSourceLoan.SignableRepaymentData',\n            type: 'tuple',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n              { name: 'shouldDelegate', internalType: 'bool', type: 'bool' },\n            ],\n          },\n          {\n            name: 'loan',\n            internalType: 'struct IMultiSourceLoan.Loan',\n            type: 'tuple',\n            components: [\n              { name: 'borrower', internalType: 'address', type: 'address' },\n              { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              {\n                name: 'source',\n                internalType: 'struct IMultiSourceLoan.Source[]',\n                type: 'tuple[]',\n                components: [\n                  { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lender', internalType: 'address', type: 'address' },\n                  { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n                  { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n                  { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                ],\n              },\n            ],\n          },\n          { name: 'borrowerSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'repayLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'revokeDelegate',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDelegateRegistry', internalType: 'address', type: 'address' }],\n    name: 'setDelegateRegistry',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newFlashActionContract', internalType: 'address', type: 'address' }],\n    name: 'setFlashActionContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '__maxSources', internalType: 'uint256', type: 'uint256' }],\n    name: 'setMaxSources',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '__minLockPeriod', internalType: 'uint256', type: 'uint256' }],\n    name: 'setMinLockPeriod',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newMinimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateImprovementMinimum',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NftBitVectorValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const nftBitVectorValidatorABI = [\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'BitVectorLengthExceededError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMulticall\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMulticallABI = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'i', internalType: 'uint256', type: 'uint256' },\n      { name: 'returndata', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'MulticallFailed',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NftPackedListValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const nftPackedListValidatorABI = [\n  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],\n    name: 'InvalidBytesPerTokenIdError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Multicall\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multicallAbi = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'i', internalType: 'uint256', type: 'uint256' },\n      { name: 'returndata', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'MulticallFailed',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Owned\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ownedABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Ownable2Step\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ownable2StepABI = [\n  {\n    type: 'error',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'OwnableInvalidOwner',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],\n    name: 'OwnableUnauthorizedAccount',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'acceptOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RangeValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const rangeValidatorABI = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'min', internalType: 'uint256', type: 'uint256' },\n      { name: 'max', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'TokenIdOutOfRangeError',\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Ownable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ownableABI = [\n  {\n    type: 'error',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'OwnableInvalidOwner',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],\n    name: 'OwnableUnauthorizedAccount',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleCollection\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleCollectionABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'lastId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'mintNext',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleMarketplace\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleMarketplaceABI = [\n  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'buy', outputs: [] },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleTokenABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// StdInvariant\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const stdInvariantABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeArtifacts',\n    outputs: [{ name: 'excludedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeContracts',\n    outputs: [{ name: 'excludedContracts_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeSenders',\n    outputs: [{ name: 'excludedSenders_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifactSelectors',\n    outputs: [\n      {\n        name: 'targetedArtifactSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifacts',\n    outputs: [{ name: 'targetedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetContracts',\n    outputs: [{ name: 'targetedContracts_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetInterfaces',\n    outputs: [\n      {\n        name: 'targetedInterfaces_',\n        internalType: 'struct StdInvariant.FuzzInterface[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'artifacts', internalType: 'string[]', type: 'string[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetSelectors',\n    outputs: [\n      {\n        name: 'targetedSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetSenders',\n    outputs: [{ name: 'targetedSenders_', internalType: 'address[]', type: 'address[]' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Strings\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const stringsABI = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'length', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'StringsInsufficientHexLength',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestLoanSetup\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testLoanSetupABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeArtifacts',\n    outputs: [{ name: 'excludedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeContracts',\n    outputs: [{ name: 'excludedContracts_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'excludeSenders',\n    outputs: [{ name: 'excludedSenders_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifactSelectors',\n    outputs: [\n      {\n        name: 'targetedArtifactSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifacts',\n    outputs: [{ name: 'targetedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetContracts',\n    outputs: [{ name: 'targetedContracts_', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetInterfaces',\n    outputs: [\n      {\n        name: 'targetedInterfaces_',\n        internalType: 'struct StdInvariant.FuzzInterface[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'artifacts', internalType: 'string[]', type: 'string[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetSelectors',\n    outputs: [\n      {\n        name: 'targetedSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'targetSenders',\n    outputs: [{ name: 'targetedSenders_', internalType: 'address[]', type: 'address[]' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestNFTFlashAction\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testNftFlashActionABI = [\n  { type: 'error', inputs: [], name: 'InvalidOwnerError' },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'execute',\n    outputs: [],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestNFTMaliciousFlashAction\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testNftMaliciousFlashActionABI = [\n  { type: 'error', inputs: [], name: 'InvalidOwnerError' },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'execute',\n    outputs: [],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ValidatorHelpers\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const validatorHelpersABI = [\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'BitVectorLengthExceededError',\n  },\n  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],\n    name: 'InvalidBytesPerTokenIdError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// WETH\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const wethABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Deposit',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Withdrawal',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  { stateMutability: 'payable', type: 'function', inputs: [], name: 'deposit', outputs: [] },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// WithCallbacks\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const withCallbacksABI = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CannotLiquidateError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredRenegotiationOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'InvalidAmountError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },\n  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },\n  { type: 'error', inputs: [], name: 'InvalidDurationError' },\n  { type: 'error', inputs: [], name: 'InvalidLenderError' },\n  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidProtocolFeeError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  { type: 'error', inputs: [], name: 'InvalidValueError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderOrBorrowerCallableError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'ZeroDurationError' },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllRenegotiationOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'borrower', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BorrowerOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'minimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ImprovementMinimumUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'contractAdded', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'tax',\n        internalType: 'struct WithCallbacks.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractRemoved', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_PROTOCOL_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      {\n        name: '_tax',\n        internalType: 'struct WithCallbacks.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' }],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getImprovementMinimum',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isBorrowerOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinRenegotiationOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'minOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newMinimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateImprovementMinimum',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// UserVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const userVaultABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n    ],\n  },\n  { type: 'error', inputs: [], name: 'AssetNotOwnedError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'LengthMismatchError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'NotApprovedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 'vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'VaultNotExistsError',\n  },\n  { type: 'error', inputs: [], name: 'WithdrawingETHError' },\n  { type: 'error', inputs: [], name: 'WrongMethodError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'token', internalType: 'address', type: 'address', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC20Deposited',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'token', internalType: 'address', type: 'address', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC20Withdrawn',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC721Deposited',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC721Withdrawn',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'ERC20BalanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'ERC721OwnerOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'ETH',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_assetRecipient', internalType: 'address', type: 'address' },\n    ],\n    name: 'burn',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'burnAndWithdraw',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'depositERC721s',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'depositEth',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'mint',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'withdrawERC20s',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'withdrawERC721s',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdrawEth',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// USDCSampleToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const usdcSampleTokenABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n", "import { Address } from 'abitype';\n\nimport { isDefined } from '@/utils/types';\n\nexport const NATIVE_MARKETPLACE = 'MarketPlace.Native';\nexport const CONTRACT_DOMAIN_NAME = 'GONDI_MULTI_SOURCE_LOAN';\n\nexport const areSameAddress = (\n  adr1: string | Address | null | undefined,\n  adr2: string | Address | null | undefined,\n) => isDefined(adr1) && adr1.toLowerCase() === adr2?.toLowerCase();\n", "import { Address, encodeAbiParameters } from 'viem';\n\nimport { filterLogs, LoanV4 } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { auctionLoanLiquidatorABI as auctionLoanLiquidatorABIV4 } from '@/generated/blockchain/v4';\n\nimport { AllV6 } from './AllV6';\nimport { BaseContract } from './BaseContract';\n\nexport class AllV4 extends BaseContract<typeof auctionLoanLiquidatorABIV4> {\n  static LOAN_SETTLEMENT_ENCODE_TYPES = [\n    {\n      name: '',\n      type: 'tuple',\n      components: [\n        { name: 'borrower', type: 'address' },\n        { name: 'nftCollateralTokenId', type: 'uint256' },\n        { name: 'nftCollateralAddress', type: 'address' },\n        { name: 'principalAddress', type: 'address' },\n        { name: 'principalAmount', type: 'uint256' },\n        { name: 'startTime', type: 'uint256' },\n        { name: 'duration', type: 'uint256' },\n        {\n          name: 'source',\n          type: 'tuple[]',\n          components: [\n            { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n            { name: 'lender', internalType: 'address', type: 'address' },\n            {\n              name: 'principalAmount',\n              internalType: 'uint256',\n              type: 'uint256',\n            },\n            {\n              name: 'accruedInterest',\n              internalType: 'uint256',\n              type: 'uint256',\n            },\n            { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n            { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          ],\n        },\n      ],\n    },\n  ];\n\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const {\n      AuctionLoanLiquidator: { v4 },\n    } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: v4,\n      abi: auctionLoanLiquidatorABIV4,\n    });\n  }\n\n  async placeBid({\n    collectionContractAddress,\n    tokenId,\n    bid,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    bid: bigint;\n  }) {\n    const txHash = await this.safeContractWrite.placeBid([collectionContractAddress, tokenId, bid]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.BidPlaced();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Bid not placed');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  getRemainingLockupSeconds() {\n    return 0;\n  }\n\n  async settleAuctionWithBuyout(): ReturnType<AllV6['settleAuctionWithBuyout']> {\n    throw new Error('Not implemented for V1');\n  }\n\n  async settleAuction({ loan }: { loan: LoanV4 }) {\n    const loanStruct = {\n      ...loan,\n      source: loan.source.map((source) => [\n        Number(source.loanId),\n        source.lender,\n        source.principalAmount,\n        source.accruedInterest,\n        source.startTime,\n        source.aprBps,\n      ]),\n    };\n\n    const txHash = await this.safeContractWrite.settleAuction([\n      loan.nftCollateralAddress,\n      loan.nftCollateralTokenId,\n      encodeAbiParameters(AllV4.LOAN_SETTLEMENT_ENCODE_TYPES, [loanStruct]),\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.AuctionSettled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Auction not settled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n}\n", "import { Address, Chain, Hash, isAddress, zeroAddress } from 'viem';\nimport { goerli } from 'viem/chains';\n\nconst ANVIL_CHAIN_ID = 31337;\n\ninterface Contracts {\n  MultiSourceLoan: {\n    v4: Address;\n    v5: Address;\n    v6: Address;\n  };\n  AuctionLoanLiquidator: {\n    v4: Address;\n    v5: Address;\n    v6: Address;\n  };\n  UserVault: {\n    v5: Address;\n    v6: Address;\n  };\n  LeverageAddress: Address;\n  SeaportAddress: Address;\n  CryptoPunksAddress: Address;\n}\n\ninterface ApiKeys {\n  reservoirApiKey: string;\n  infuraApiKey: string;\n}\n\ninterface Currencies {\n  WETH_ADDRESS: Address;\n  ETH_ADDRESS: Address;\n  USDC_ADDRESS: Address;\n}\n\nconst ensureAddress = (value: string | undefined): Address | null => {\n  if (!value || !isAddress(value)) {\n    return null;\n  }\n  return value;\n};\n\nexport const MSL_V5_TX_HASH =\n  '0xb6dfcbc1661d0c0bced9591d06e964f97d41a35984704ffe61f8e062e43919c8' as Hash;\n\nexport const getContracts = (chain: Pick<Chain, 'id'>): Contracts => {\n  if (chain?.id === ANVIL_CHAIN_ID) {\n    return {\n      MultiSourceLoan: {\n        v4:\n          ensureAddress(process.env.GONDI_MULTI_SOURCE_LOAN_V4) ??\n          '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9',\n        v5:\n          ensureAddress(process.env.GONDI_MULTI_SOURCE_LOAN_V5) ??\n          '0x610178dA211FEF7D417bC0e6FeD39F05609AD788',\n        v6:\n          ensureAddress(process.env.GONDI_MULTI_SOURCE_LOAN_V6) ??\n          '0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1',\n      },\n      AuctionLoanLiquidator: {\n        v4:\n          ensureAddress(process.env.GONDI_AUCTION_LOAN_LIQUIDATOR_V4) ??\n          '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0',\n        v5:\n          ensureAddress(process.env.GONDI_AUCTION_LOAN_LIQUIDATOR_V5) ??\n          '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318',\n        v6:\n          ensureAddress(process.env.GONDI_AUCTION_LOAN_LIQUIDATOR_V6) ??\n          '0x59b670e9fA9D0A427751Af201D676719a970857b',\n      },\n      UserVault: {\n        v5:\n          ensureAddress(process.env.GONDI_USER_VAULT_V5) ??\n          '0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82',\n        v6:\n          ensureAddress(process.env.GONDI_USER_VAULT_V6) ??\n          '0x4A679253410272dd5232B3Ff7cF5dbB88f295319',\n      },\n      LeverageAddress:\n        ensureAddress(process.env.GONDI_LEVERAGE) ?? '0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0',\n      SeaportAddress:\n        ensureAddress(process.env.SEAPORT) ?? '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n      CryptoPunksAddress:\n        ensureAddress(process.env.CRYPTO_PUNKS) ?? '0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb',\n    };\n  }\n\n  if (chain?.id === goerli.id) {\n    return {\n      MultiSourceLoan: {\n        v4: '0x60C20627429668F267b5cF55c6605c665C69887D',\n        v5: '0xTODO',\n        v6: '0xTODO',\n      },\n      AuctionLoanLiquidator: {\n        v4: '0x29C73faa2f9180ea5a7B0bEC243ebc63a5B4f280',\n        v5: '0xTODO',\n        v6: '0xTODO',\n      },\n      UserVault: {\n        v5: '0xTODO',\n        v6: '0xTODO',\n      },\n      LeverageAddress: '0xTODO',\n      SeaportAddress: '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n      CryptoPunksAddress: '0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb',\n    };\n  }\n\n  return {\n    MultiSourceLoan: {\n      v4: '0xCa5a494Ca20483e21ec1E41FE1D9461Da77595Bd',\n      v5: '0x478f6F994C6fb3cf3e444a489b3AD9edB8cCaE16',\n      v6: '0xf65b99ce6dc5f6c556172bcc0ff27d3665a7d9a8',\n    },\n    AuctionLoanLiquidator: {\n      v4: '0x237e4421C742d843Fdd96D22294D338507e17091',\n      v5: '0x97d34635b605c2f1630d6b4c6c5d222b8a2ca47d',\n      v6: '0x2995ae7233fa89b314b5a707465b57a582f440f0',\n    },\n    UserVault: {\n      v5: '0x14a6Dcebb2Bb73aae1b199CCAadA75247b81976D',\n      v6: '0xC9f152168BC7b75F76b74e1f382F90bC2FeDd15f',\n    },\n    LeverageAddress: '0x87Ce6e8124fFd68fa721FcC7f35fdA14A11E233e',\n    SeaportAddress: '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n    CryptoPunksAddress: '0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb',\n  };\n};\n\nexport const getApiKeys = (): ApiKeys => ({\n  reservoirApiKey: '5b472f8c-b471-531a-a450-56e428e5a00a',\n  infuraApiKey: '9b7006cb0b0b42f1813ae9418741fbb5',\n});\n\nexport const getCurrencies = (): Currencies => ({\n  WETH_ADDRESS: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  ETH_ADDRESS: zeroAddress,\n  USDC_ADDRESS: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n});\n", "// Generated by @wagmi/cli@1.1.0 on 7/10/2023 at 8:24:47 PM\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AddressManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const addressManagerABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_original', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'AddressAlreadyAddedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'AddressNotAddedError',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'address_added', internalType: 'address', type: 'address', indexed: false }],\n    name: 'AddressAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'address_removed', internalType: 'address', type: 'address', indexed: false }],\n    name: 'AddressRemovedFromWhitelist',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'address_whitelisted', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'AddressWhitelisted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'add',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'addToWhitelist',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'addressToIndex',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_index', internalType: 'uint16', type: 'uint16' }],\n    name: 'indexToAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'isWhitelisted',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'removeFromWhitelist',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AuctionLoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const auctionLoanLiquidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  { type: 'error', inputs: [], name: 'AuctionAlreadyInProgressError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'AuctionNotExistsError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionNotOverError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionOverError',\n  },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidTriggerFee',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_loan', internalType: 'address', type: 'address' }],\n    name: 'LoanNotAcceptedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_minBid', internalType: 'uint256', type: 'uint256' }],\n    name: 'MinBidError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'NFTNotOwnedError',\n  },\n  { type: 'error', inputs: [], name: 'NoBidsError' },\n  { type: 'error', inputs: [], name: 'ZeroAddressError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'auctionContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'asset', internalType: 'address', type: 'address', indexed: false },\n      { name: 'highestBid', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'settler', internalType: 'address', type: 'address', indexed: false },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AuctionSettled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'auctionContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newBidder', internalType: 'address', type: 'address', indexed: false },\n      { name: 'bid', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BidPlaced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractRemoved',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'duration', internalType: 'uint96', type: 'uint96', indexed: false },\n      { name: 'asset', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanLiquidationStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'TriggerFeeUpdated',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_TRIGGER_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_INCREMENT_BPS',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'addLoanContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getAuction',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct AuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTriggerFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getValidLoanContracts',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_bid', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'placeBid',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'removeLoanContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_loan', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'settleAuction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateTriggerFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// BaseLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const baseLoanABI = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOffer',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CannotLiquidateError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'ExpiredLoanError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },\n  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },\n  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidProtocolFeeError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  { type: 'error', inputs: [], name: 'InvalidSignerError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotFoundError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_id', internalType: 'uint256', type: 'uint256' }],\n    name: 'NotMintedError',\n  },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderOrSignerCallableError' },\n  { type: 'error', inputs: [], name: 'RepaymentError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'Unauthorized' },\n  {\n    type: 'error',\n    inputs: [{ name: '_authorized', internalType: 'address', type: 'address' }],\n    name: 'UnauthorizedError',\n  },\n  { type: 'error', inputs: [], name: 'ZeroAddressError' },\n  { type: 'error', inputs: [], name: 'ZeroDurationError' },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllRenegotiationOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'signer', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'ApprovedSigner',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'minimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ImprovementMinimumUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'repayment', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contract_added', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'contract_removed', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_PROTOCOL_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],\n    name: 'approveSigner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'getApprovedSigner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getImprovementMinimum',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinRenegotiationOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collateralAddress', internalType: 'address', type: 'address' },\n      { name: '_collateralTokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_repayment', internalType: 'uint256', type: 'uint256' },\n      { name: '_loan', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newMinimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateImprovementMinimum',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CollectionOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const collectionOracleABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  { type: 'error', inputs: [], name: 'InvalidLengthsError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'NftNotFoundError',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address', indexed: false },\n      { name: '_asset', internalType: 'address', type: 'address', indexed: false },\n      { name: '_price', internalType: 'uint128', type: 'uint128', indexed: false },\n      { name: '_timestamp', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'PriceUpdated',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n    ],\n    name: 'getPrice',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IOracle.PriceUpdate',\n        type: 'tuple',\n        components: [\n          { name: 'price', internalType: 'uint128', type: 'uint128' },\n          { name: 'updatedTimestamp', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'collections', internalType: 'address[]', type: 'address[]' },\n      { name: 'assets', internalType: 'address[]', type: 'address[]' },\n      { name: 'price', internalType: 'uint128[]', type: 'uint128[]' },\n      { name: 'timestamp', internalType: 'uint128', type: 'uint128' },\n    ],\n    name: 'updatePrices',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC165\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc165ABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc20ABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC721\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc721ABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC721TokenReceiver\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc721TokenReceiverABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IBaseLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iBaseLoanABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],\n    name: 'approveSigner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_lender', internalType: 'address', type: 'address' }],\n    name: 'getApprovedSigner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collateralAddress', internalType: 'address', type: 'address' },\n      { name: '_collateralTokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_repayment', internalType: 'uint256', type: 'uint256' },\n      { name: '_loan', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IBaseOfferValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iBaseOfferValidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_offer',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC1271\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ierc1271ABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'hash', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'signature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'isValidSignature',\n    outputs: [{ name: 'magicValue', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC165\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ierc165ABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanLiquidatorABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMultiSourceLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMultiSourceLoanABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_loanOffer',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n      { name: '_withCallback', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'emitLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMaxSources',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'liquidateLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'refinanceFull',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'refinancePartial',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'refinancePartialBatch',\n    outputs: [\n      { name: 'loanId', internalType: 'uint256[]', type: 'uint256[]' },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collateralTo', internalType: 'address', type: 'address' },\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_withCallback', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'repayLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'maxSources', internalType: 'uint8', type: 'uint8' }],\n    name: 'setMaxSources',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanCallback\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanCallbackABI = [\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loan', internalType: 'bytes', type: 'bytes' }],\n    name: 'afterNFTTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_loan', internalType: 'bytes', type: 'bytes' }],\n    name: 'afterPrincipalTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMulticall3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMulticall3ABI = [\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'returnData', internalType: 'bytes[]', type: 'bytes[]' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call3[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'allowFailure', internalType: 'bool', type: 'bool' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call3Value[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'allowFailure', internalType: 'bool', type: 'bool' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate3Value',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'blockAndAggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getBasefee',\n    outputs: [{ name: 'basefee', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],\n    name: 'getBlockHash',\n    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getBlockNumber',\n    outputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getChainId',\n    outputs: [{ name: 'chainid', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockCoinbase',\n    outputs: [{ name: 'coinbase', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockDifficulty',\n    outputs: [{ name: 'difficulty', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockGasLimit',\n    outputs: [{ name: 'gaslimit', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockTimestamp',\n    outputs: [{ name: 'timestamp', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],\n    name: 'getEthBalance',\n    outputs: [{ name: 'balance', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLastBlockHash',\n    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'tryAggregate',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'tryBlockAndAggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iOracleABI = [\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n    ],\n    name: 'getPrice',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IOracle.PriceUpdate',\n        type: 'tuple',\n        components: [\n          { name: 'price', internalType: 'uint128', type: 'uint128' },\n          { name: 'updatedTimestamp', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MultiSourceCommons\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multiSourceCommonsABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'setUp', outputs: [] },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MultiSourceLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multiSourceLoanABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: 'loanLiquidator', internalType: 'address', type: 'address' },\n      {\n        name: 'protocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'maxSources', internalType: 'uint8', type: 'uint8' },\n    ],\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOffer',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CannotLiquidateError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'ExpiredLoanError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredRenegotiationOfferError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidBorrowerError' },\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },\n  { type: 'error', inputs: [], name: 'InvalidLiquidationError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_fraction', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidProtocolFeeError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidRenegotiationOfferError' },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  { type: 'error', inputs: [], name: 'InvalidSignerError' },\n  { type: 'error', inputs: [], name: 'LengthMismatchError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  { type: 'error', inputs: [], name: 'LoanExpiredError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotFoundError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_id', internalType: 'uint256', type: 'uint256' }],\n    name: 'NotMintedError',\n  },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  { type: 'error', inputs: [], name: 'OnlyBorrowerCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyLenderOrSignerCallableError' },\n  { type: 'error', inputs: [], name: 'PartialOfferCannotChangeDurationError' },\n  { type: 'error', inputs: [], name: 'PartialOfferCannotHaveFeeError' },\n  { type: 'error', inputs: [], name: 'RefinanceFullError' },\n  { type: 'error', inputs: [], name: 'RepaymentError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: 'sourcePrincipal', internalType: 'uint256', type: 'uint256' },\n      { name: 'loanPrincipal', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'TargetPrincipalTooLowError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 'sources', internalType: 'uint8', type: 'uint8' }],\n    name: 'TooManySourcesError',\n  },\n  { type: 'error', inputs: [], name: 'Unauthorized' },\n  {\n    type: 'error',\n    inputs: [{ name: '_authorized', internalType: 'address', type: 'address' }],\n    name: 'UnauthorizedError',\n  },\n  { type: 'error', inputs: [], name: 'ZeroAddressError' },\n  { type: 'error', inputs: [], name: 'ZeroDurationError' },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minRenegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllRenegotiationOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'signer', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'ApprovedSigner',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'minimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ImprovementMinimumUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanEmitted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'repayment', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'oldLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRefinanced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'totalRepayment', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRepaid',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newMax', internalType: 'uint8', type: 'uint8', indexed: false }],\n    name: 'MaxSourcesUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contract_added', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'contract_removed', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MAX_PROTOCOL_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],\n    name: 'approveSigner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelAllOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_minRenegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelAllRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'cancelOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_renegotiationIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'cancelRenegotiationOffers',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_loanOffer',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n      { name: '_withCallback', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'emitLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'getApprovedSigner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getImprovementMinimum',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'getLoanHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getMaxSources',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_loanPrincipal', internalType: 'uint256', type: 'uint256' }],\n    name: 'getMinSourcePrincipal',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'lenderMinRenegotiationOfferId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'liquidateLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collateralAddress', internalType: 'address', type: 'address' },\n      { name: '_collateralTokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_repayment', internalType: 'uint256', type: 'uint256' },\n      { name: '_loan', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'refinanceFull',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'refinancePartial',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'targetPrincipal', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'strictImprovement', internalType: 'bool', type: 'bool' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'refinancePartialBatch',\n    outputs: [\n      { name: 'loanId', internalType: 'uint256[]', type: 'uint256[]' },\n      {\n        name: 'loans',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_collateralTo', internalType: 'address', type: 'address' },\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'source',\n            internalType: 'struct IMultiSourceLoan.Source[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: '_withCallback', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'repayLoan',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'maxSources', internalType: 'uint8', type: 'uint8' }],\n    name: 'setMaxSources',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newMinimum',\n        internalType: 'struct IBaseLoan.ImprovementMinimum',\n        type: 'tuple',\n        components: [\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'interest', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateImprovementMinimum',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'contract ILoanLiquidator', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct IBaseLoan.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NftPackedListValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const nftPackedListValidatorABI = [\n  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],\n    name: 'InvalidBytesPerTokenIdError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NftBitVectorValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const nftBitVectorValidatorABI = [\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'BitVectorLengthExceededError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RangeValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const rangeValidatorABI = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'min', internalType: 'uint256', type: 'uint256' },\n      { name: 'max', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'TokenIdOutOfRangeError',\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IBaseLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'signer', internalType: 'address', type: 'address' },\n          { name: 'requiresLiquidation', internalType: 'bool', type: 'bool' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Owned\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ownedABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleCollection\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleCollectionABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'lastId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'mintNext',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleTokenABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestLoanSetup\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testLoanSetupABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ValidatorHelpers\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const validatorHelpersABI = [\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'BitVectorLengthExceededError',\n  },\n  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],\n    name: 'InvalidBytesPerTokenIdError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n] as const\n", "import { ExtractAbiFunctionNames } from 'abitype';\nimport {\n  Abi,\n  Address,\n  createPublicClient,\n  createTransport,\n  getContract,\n  GetContractReturnType,\n  Hash,\n  PublicClient,\n  SimulateContractParameters,\n} from 'viem';\n\nimport { Wallet } from '@/contracts';\n\nexport class BaseContract<TAbi extends Abi> {\n  abi: TAbi;\n  address: Address;\n  bcClient: PublicClient;\n  wallet: Wallet;\n  contract: GetContractReturnType<TAbi, PublicClient, Wallet, Address>;\n\n  safeContractWrite: {\n    [TFunctionName in ExtractAbiFunctionNames<TAbi>]: (\n      args: SimulateContractParameters<TAbi, TFunctionName>['args'],\n      options?: { value?: bigint },\n    ) => Promise<Hash>;\n  };\n\n  constructor({\n    walletClient,\n    address,\n    abi,\n  }: {\n    walletClient: Wallet;\n    address: Address;\n    abi: TAbi;\n  }) {\n    this.wallet = walletClient;\n    const bcClient = createPublicClient({\n      transport: () => createTransport(walletClient.transport),\n    });\n    this.bcClient = bcClient;\n    this.address = address;\n    this.abi = abi;\n    this.contract = getContract({\n      address: this.address,\n      abi: this.abi,\n      walletClient,\n      publicClient: this.bcClient,\n    });\n\n    this.safeContractWrite = new Proxy({} as typeof this.safeContractWrite, {\n      get<TFunctionName extends string>(_: unknown, functionName: TFunctionName) {\n        return async (\n          args: SimulateContractParameters<TAbi, TFunctionName>['args'],\n          options: { value?: bigint } = {},\n        ) => {\n          // The typecast here is necessary,\n          // we still enjoy the type checking on the arguments themselves so it's not the end of the world\n          const { request } = await bcClient.simulateContract({\n            address: address,\n            abi: abi,\n            functionName,\n            args,\n            account: walletClient.account,\n            ...options,\n          } as SimulateContractParameters);\n\n          return walletClient.writeContract(request);\n        };\n      },\n    });\n  }\n}\n", "import { Address } from 'viem';\n\nimport { Auction, filterLogs, LoanV5 } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { auctionLoanLiquidatorABI as auctionLoanLiquidatorABIV5 } from '@/generated/blockchain/v5';\n\nimport { AllV6 } from './AllV6';\nimport { BaseContract } from './BaseContract';\n\nexport class AllV5 extends BaseContract<typeof auctionLoanLiquidatorABIV5> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const {\n      AuctionLoanLiquidator: { v5 },\n    } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: v5,\n      abi: auctionLoanLiquidatorABIV5,\n    });\n  }\n\n  async placeBid({\n    collectionContractAddress,\n    tokenId,\n    bid,\n    auction,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    bid: bigint;\n    auction: Auction;\n  }) {\n    const txHash = await this.safeContractWrite.placeBid([\n      collectionContractAddress,\n      tokenId,\n      auction,\n      bid,\n    ]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.BidPlaced();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Bid not placed');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  getRemainingLockupSeconds() {\n    return 0;\n  }\n\n  async settleAuctionWithBuyout(): ReturnType<AllV6['settleAuctionWithBuyout']> {\n    throw new Error('Not implemented for V2');\n  }\n\n  async settleAuction({ auction, loan }: { auction: Auction; loan: LoanV5 }) {\n    const txHash = await this.safeContractWrite.settleAuction([auction, loan]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.AuctionSettled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Auction not settled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n}\n", "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AddressManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const addressManagerAbi = [\n  {\n    type: 'constructor',\n    inputs: [{ name: '_original', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'AddressAlreadyAddedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'AddressNotAddedError',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'address_added', internalType: 'address', type: 'address', indexed: false }],\n    name: 'AddressAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'address_removed', internalType: 'address', type: 'address', indexed: false }],\n    name: 'AddressRemovedFromWhitelist',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'address_whitelisted', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'AddressWhitelisted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'add',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'addToWhitelist',\n    outputs: [],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_address', internalType: 'address', type: 'address' }],\n    name: 'addressToIndex',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_index', internalType: 'uint16', type: 'uint16' }],\n    name: 'indexToAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'isWhitelisted',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_entry', internalType: 'address', type: 'address' }],\n    name: 'removeFromWhitelist',\n    outputs: [],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AuctionLoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const auctionLoanLiquidatorAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      { name: 'liquidationDistributor', internalType: 'address', type: 'address' },\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n      { name: 'maxExtension', internalType: 'uint96', type: 'uint96' },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'AuctionAlreadyInProgressError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionNotOverError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionOverError',\n  },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CouldNotModifyValidLoansError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'InvalidHashAuctionError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidTriggerFee',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_loan', internalType: 'address', type: 'address' }],\n    name: 'LoanNotAcceptedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_minBid', internalType: 'uint256', type: 'uint256' }],\n    name: 'MinBidError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'NFTNotOwnedError',\n  },\n  { type: 'error', inputs: [], name: 'NoBidsError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'asset', internalType: 'address', type: 'address', indexed: false },\n      { name: 'proceeds', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'settler', internalType: 'address', type: 'address', indexed: false },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AuctionSettled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newBidder', internalType: 'address', type: 'address', indexed: false },\n      { name: 'bid', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BidPlaced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'liquidationDistributor', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LiquidationDistributorUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractRemoved',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'LoanLiquidationStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'TriggerFeeUpdated',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MAX_TRIGGER_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_INCREMENT_BPS',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'addLoanContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getAuctionHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationDistributor',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMaxExtension',\n    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTriggerFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getValidLoanContracts',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_minBid', internalType: 'uint256', type: 'uint256' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      { name: '_bid', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'placeBid',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'removeLoanContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'settleAuction',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__liquidationDistributor', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationDistributor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateTriggerFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AuctionWithBuyoutLoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const auctionWithBuyoutLoanLiquidatorAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      { name: 'liquidationDistributor', internalType: 'address', type: 'address' },\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'loanManagerRegistry', internalType: 'address', type: 'address' },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n      { name: 'maxExtension', internalType: 'uint96', type: 'uint96' },\n      { name: 'timeForMainLenderToBuy', internalType: 'uint256', type: 'uint256' },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'AuctionAlreadyInProgressError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionNotOverError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expiration', internalType: 'uint96', type: 'uint96' }],\n    name: 'AuctionOverError',\n  },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CouldNotModifyValidLoansError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'InvalidHashAuctionError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidTriggerFee',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_loan', internalType: 'address', type: 'address' }],\n    name: 'LoanNotAcceptedError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_minBid', internalType: 'uint256', type: 'uint256' }],\n    name: 'MinBidError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'NFTNotOwnedError',\n  },\n  { type: 'error', inputs: [], name: 'NoBidsError' },\n  { type: 'error', inputs: [], name: 'NotMainLenderError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'timeLimit', internalType: 'uint256', type: 'uint256' }],\n    name: 'OptionToBuyExpiredError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 'timeLimit', internalType: 'uint256', type: 'uint256' }],\n    name: 'OptionToBuyStilValidError',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanContract', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'asset', internalType: 'address', type: 'address', indexed: false },\n      { name: 'proceeds', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'settler', internalType: 'address', type: 'address', indexed: false },\n      { name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AuctionSettled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'nftAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'largestTrancheIdx', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AuctionSettledWithBuyout',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newBidder', internalType: 'address', type: 'address', indexed: false },\n      { name: 'bid', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'loanAddress', internalType: 'address', type: 'address', indexed: false },\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'BidPlaced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'liquidationDistributor', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LiquidationDistributorUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loan', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LoanContractRemoved',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'LoanLiquidationStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'timeForMainLenderToBuy', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'TimeForMainLenderToBuyUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'TriggerFeeUpdated',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MAX_TIME_FOR_MAIN_LENDER_TO_BUY',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MAX_TRIGGER_FEE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_INCREMENT_BPS',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'addLoanContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getAuctionHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationDistributor',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLoanManagerRegistry',\n    outputs: [{ name: '', internalType: 'contract ILoanManagerRegistry', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMaxExtension',\n    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTimeForMainLenderToBuy',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTriggerFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getValidLoanContracts',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_minBid', internalType: 'uint256', type: 'uint256' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      { name: '_bid', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'placeBid',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'removeLoanContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__timeForMainLenderToBuy', internalType: 'uint256', type: 'uint256' }],\n    name: 'setTimeForMainLenderToBuy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'settleAuction',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_nftAddress', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'settleWithBuyout',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__liquidationDistributor', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationDistributor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateTriggerFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// BaseLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const baseLoanAbi = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'InvalidAmountError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidDurationError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_minimum', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinAprImprovementUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newMinBid', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinBidLiquidationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractAdded', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractRemoved', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MAX_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_BID_LIQUIDATION',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'VERSION',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMinImprovementApr',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address' },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: 'notActive', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address' },\n      { name: 'renegotiationIf', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: 'notActive', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],\n    name: 'minOfferId',\n    outputs: [{ name: 'minOfferId', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__loanLiquidator', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newMinimum', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateMinImprovementApr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CallbackHandler\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const callbackHandlerAbi = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractAdded', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractRemoved', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DSTest\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const dsTestAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DelegateRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const delegateRegistryAbi = [\n  { type: 'error', inputs: [], name: 'MulticallFailed' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateContract',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC1155',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateERC721',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForAll',\n    outputs: [{ name: 'valid', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForContract',\n    outputs: [{ name: 'valid', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC1155',\n    outputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC20',\n    outputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC721',\n    outputs: [{ name: 'valid', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateAll',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateContract',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC1155',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC20',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateERC721',\n    outputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'hashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'getDelegationsFromHashes',\n    outputs: [\n      {\n        name: 'delegations_',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegations',\n    outputs: [\n      {\n        name: 'delegations_',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegations',\n    outputs: [\n      {\n        name: 'delegations_',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'location', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'readSlot',\n    outputs: [{ name: 'contents', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'locations', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'readSlots',\n    outputs: [{ name: 'contents', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'pure',\n  },\n  { type: 'function', inputs: [], name: 'sweep', outputs: [], stateMutability: 'nonpayable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ECDSA\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ecdsaAbi = [\n  { type: 'error', inputs: [], name: 'ECDSAInvalidSignature' },\n  {\n    type: 'error',\n    inputs: [{ name: 'length', internalType: 'uint256', type: 'uint256' }],\n    name: 'ECDSAInvalidSignatureLength',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 's', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'ECDSAInvalidSignatureS',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc20Abi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC4626\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc4626Abi = [\n  { type: 'error', inputs: [], name: 'MathOverflowedMulDiv' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'caller', internalType: 'address', type: 'address', indexed: true },\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'assets', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'shares', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Deposit',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'caller', internalType: 'address', type: 'address', indexed: true },\n      { name: 'receiver', internalType: 'address', type: 'address', indexed: true },\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'assets', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'shares', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Withdraw',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'asset',\n    outputs: [{ name: '', internalType: 'contract ERC20', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'shares', internalType: 'uint256', type: 'uint256' }],\n    name: 'convertToAssets',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'assets', internalType: 'uint256', type: 'uint256' }],\n    name: 'convertToShares',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimalsOffset',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'assets', internalType: 'uint256', type: 'uint256' },\n      { name: 'receiver', internalType: 'address', type: 'address' },\n    ],\n    name: 'deposit',\n    outputs: [{ name: 'shares', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'maxDeposit',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'maxMint',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'maxRedeem',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'maxWithdraw',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'shares', internalType: 'uint256', type: 'uint256' },\n      { name: 'receiver', internalType: 'address', type: 'address' },\n    ],\n    name: 'mint',\n    outputs: [{ name: 'assets', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'assets', internalType: 'uint256', type: 'uint256' }],\n    name: 'previewDeposit',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'shares', internalType: 'uint256', type: 'uint256' }],\n    name: 'previewMint',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'shares', internalType: 'uint256', type: 'uint256' }],\n    name: 'previewRedeem',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'assets', internalType: 'uint256', type: 'uint256' }],\n    name: 'previewWithdraw',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'shares', internalType: 'uint256', type: 'uint256' },\n      { name: 'receiver', internalType: 'address', type: 'address' },\n      { name: 'owner', internalType: 'address', type: 'address' },\n    ],\n    name: 'redeem',\n    outputs: [{ name: 'assets', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalAssets',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'assets', internalType: 'uint256', type: 'uint256' },\n      { name: 'receiver', internalType: 'address', type: 'address' },\n      { name: 'owner', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdraw',\n    outputs: [{ name: 'shares', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC721\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc721Abi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC721TokenReceiver\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const erc721TokenReceiverAbi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// FeeManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const feeManagerAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      {\n        name: '__fees',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'InvalidFeesError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fees',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProposedFeesConfirmed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fees',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProposedFeesSet',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'PRECISION',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '__fees',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'confirmFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getFees',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedFees',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedFeesSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_principal', internalType: 'uint256', type: 'uint256' },\n      { name: '_interest', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'processFees',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '__fees',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'setProposedFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\nexport const iAuctionLoanLiquidatorAbi = [\n  {\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'addLoanContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getAuctionHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationDistributor',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTriggerFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getValidLoanContracts',\n    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      { name: '_bid', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'placeBid',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanContract', internalType: 'address', type: 'address' }],\n    name: 'removeLoanContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_auction',\n        internalType: 'struct IAuctionLoanLiquidator.Auction',\n        type: 'tuple',\n        components: [\n          { name: 'loanAddress', internalType: 'address', type: 'address' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'triggerFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'minBid', internalType: 'uint256', type: 'uint256' },\n          { name: 'highestBidder', internalType: 'address', type: 'address' },\n          { name: 'duration', internalType: 'uint96', type: 'uint96' },\n          { name: 'asset', internalType: 'address', type: 'address' },\n          { name: 'startTime', internalType: 'uint96', type: 'uint96' },\n          { name: 'originator', internalType: 'address', type: 'address' },\n          { name: 'lastBidTime', internalType: 'uint96', type: 'uint96' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'settleAuction',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_liquidationDistributor', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationDistributor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'triggerFee', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateTriggerFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IBaseInterestAllocator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iBaseInterestAllocatorAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'total', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'AllTransfered',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'currentIdle', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'targetIdle', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Reallocated',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getAssetsAllocated',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getBaseApr',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getBaseAprWithUpdate',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_currentIdle', internalType: 'uint256', type: 'uint256' },\n      { name: '_targetIdle', internalType: 'uint256', type: 'uint256' },\n      { name: '_force', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'reallocate',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'function', inputs: [], name: 'transferAll', outputs: [], stateMutability: 'nonpayable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IBaseLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iBaseLoanAbi = [\n  {\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ICryptoPunksMarket\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iCryptoPunksMarketAbi = [\n  {\n    type: 'function',\n    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],\n    name: 'pendingWithdrawals',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'punkBids',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct ICryptoPunksMarket.Bid',\n        type: 'tuple',\n        components: [\n          { name: 'hasBid', internalType: 'bool', type: 'bool' },\n          { name: 'punkIndex', internalType: 'uint256', type: 'uint256' },\n          { name: 'bidder', internalType: 'address', type: 'address' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'punkIndexToAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'punkIndex', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferPunk',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'function', inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ICurve\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iCurveAbi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '_i', internalType: 'uint128', type: 'uint128' },\n      { name: '_j', internalType: 'uint128', type: 'uint128' },\n      { name: '_dx', internalType: 'uint256', type: 'uint256' },\n      { name: '_min_dy', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'exchange',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'payable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IDelegateRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iDelegateRegistryAbi = [\n  { type: 'error', inputs: [], name: 'MulticallFailed' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateContract',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC1155',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'DelegateERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'contract_', internalType: 'address', type: 'address', indexed: true },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32', indexed: false },\n      { name: 'enable', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'DelegateERC721',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC1155',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC20',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'checkDelegateForERC721',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateAll',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateContract',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC1155',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'delegateERC20',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'contract_', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'enable', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegateERC721',\n    outputs: [{ name: 'delegationHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'getDelegationsFromHashes',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'getIncomingDelegations',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegationHashes',\n    outputs: [{ name: 'delegationHashes', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'from', internalType: 'address', type: 'address' }],\n    name: 'getOutgoingDelegations',\n    outputs: [\n      {\n        name: 'delegations',\n        internalType: 'struct IDelegateRegistry.Delegation[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'type_', internalType: 'enum IDelegateRegistry.DelegationType', type: 'uint8' },\n          { name: 'to', internalType: 'address', type: 'address' },\n          { name: 'from', internalType: 'address', type: 'address' },\n          { name: 'rights', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'contract_', internalType: 'address', type: 'address' },\n          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'amount', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'location', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'readSlot',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'locations', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    name: 'readSlots',\n    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC1271\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ierc1271Abi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: 'hash', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'signature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'isValidSignature',\n    outputs: [{ name: 'magicValue', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC721TokenReceiver\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ierc721TokenReceiverAbi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IFeeManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iFeeManagerAbi = [\n  {\n    type: 'function',\n    inputs: [],\n    name: 'PRECISION',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_fees',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'confirmFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getFees',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedFees',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedFeesSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_principal', internalType: 'uint256', type: 'uint256' },\n      { name: '_interest', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'processFees',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_fee',\n        internalType: 'struct IFeeManager.Fees',\n        type: 'tuple',\n        components: [\n          { name: 'managementFee', internalType: 'uint256', type: 'uint256' },\n          { name: 'performanceFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'setProposedFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILiquidationDistributor\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLiquidationDistributorAbi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '_repayment', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'distribute',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILiquidationHandler\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLiquidationHandlerAbi = [\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'loanLiquidator', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanCallback\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanCallbackAbi = [\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterNFTTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_fee', internalType: 'uint256', type: 'uint256' },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterPrincipalTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanLiquidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanLiquidatorAbi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_contract', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_asset', internalType: 'address', type: 'address' },\n      { name: '_duration', internalType: 'uint96', type: 'uint96' },\n      { name: '_minBid', internalType: 'uint256', type: 'uint256' },\n      { name: '_originator', internalType: 'address', type: 'address' },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanManagerAbi = [\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_callers',\n        internalType: 'struct ILoanManager.ProposedCaller[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'caller', internalType: 'address', type: 'address' },\n          { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n        ],\n      },\n    ],\n    name: 'addCallers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getParameterSetter',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n      { name: '_apr', internalType: 'uint256', type: 'uint256' },\n      { name: '_accruedInterest', internalType: 'uint256', type: 'uint256' },\n      { name: '_protocolFee', internalType: 'uint256', type: 'uint256' },\n      { name: '_received', internalType: 'uint256', type: 'uint256' },\n      { name: '_startTime', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'loanLiquidation',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n      { name: '_apr', internalType: 'uint256', type: 'uint256' },\n      { name: '_accruedInterest', internalType: 'uint256', type: 'uint256' },\n      { name: '_protocolFee', internalType: 'uint256', type: 'uint256' },\n      { name: '_startTime', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'loanRepayment',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_offerHandler', internalType: 'address', type: 'address' }],\n    name: 'updateOfferHandler',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_offer', internalType: 'bytes', type: 'bytes' },\n      { name: '_protocolFee', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ILoanManagerRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iLoanManagerRegistryAbi = [\n  {\n    type: 'function',\n    inputs: [{ name: '_loanManager', internalType: 'address', type: 'address' }],\n    name: 'addLoanManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanManager', internalType: 'address', type: 'address' }],\n    name: 'isLoanManager',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanManager', internalType: 'address', type: 'address' }],\n    name: 'removeLoanManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMultiSourceLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMultiSourceLoanAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'Delegated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'newFlashActionContract', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'FlashActionContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'target', internalType: 'address', type: 'address', indexed: false },\n      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'FlashActionExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'offerId', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanEmitted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'oldLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRefinanced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n      { name: 'offerIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n      { name: 'totalFee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRefinancedFromNewOffers',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'totalRepayment', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRepaid',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'minLockPeriod', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinLockPeriodUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RevokeDelegate',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'trancheIndex', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'addNewTranche',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegate',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_loanExecutionData',\n        internalType: 'struct IMultiSourceLoan.LoanExecutionData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'executionData',\n            internalType: 'struct IMultiSourceLoan.ExecutionData',\n            type: 'tuple',\n            components: [\n              {\n                name: 'offerExecution',\n                internalType: 'struct IMultiSourceLoan.OfferExecution[]',\n                type: 'tuple[]',\n                components: [\n                  {\n                    name: 'offer',\n                    internalType: 'struct IMultiSourceLoan.LoanOffer',\n                    type: 'tuple',\n                    components: [\n                      { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'lender', internalType: 'address', type: 'address' },\n                      { name: 'fee', internalType: 'uint256', type: 'uint256' },\n                      { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n                      { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n                      { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'principalAddress', internalType: 'address', type: 'address' },\n                      { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                      { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n                      { name: 'duration', internalType: 'uint256', type: 'uint256' },\n                      { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n                      {\n                        name: 'validators',\n                        internalType: 'struct IBaseLoan.OfferValidator[]',\n                        type: 'tuple[]',\n                        components: [\n                          { name: 'validator', internalType: 'address', type: 'address' },\n                          { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n                        ],\n                      },\n                    ],\n                  },\n                  { name: 'amount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n                ],\n              },\n              { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalReceiver', internalType: 'address', type: 'address' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'borrowerOfferSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'emitLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'executeFlashAction',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getDelegateRegistry',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getFlashActionContract',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'getLoanHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMaxTranches',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMinLockPeriod',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loanExecutionData',\n        internalType: 'struct IMultiSourceLoan.LoanExecutionData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'executionData',\n            internalType: 'struct IMultiSourceLoan.ExecutionData',\n            type: 'tuple',\n            components: [\n              {\n                name: 'offerExecution',\n                internalType: 'struct IMultiSourceLoan.OfferExecution[]',\n                type: 'tuple[]',\n                components: [\n                  {\n                    name: 'offer',\n                    internalType: 'struct IMultiSourceLoan.LoanOffer',\n                    type: 'tuple',\n                    components: [\n                      { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'lender', internalType: 'address', type: 'address' },\n                      { name: 'fee', internalType: 'uint256', type: 'uint256' },\n                      { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n                      { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n                      { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'principalAddress', internalType: 'address', type: 'address' },\n                      { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                      { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n                      { name: 'duration', internalType: 'uint256', type: 'uint256' },\n                      { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n                      {\n                        name: 'validators',\n                        internalType: 'struct IBaseLoan.OfferValidator[]',\n                        type: 'tuple[]',\n                        components: [\n                          { name: 'validator', internalType: 'address', type: 'address' },\n                          { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n                        ],\n                      },\n                    ],\n                  },\n                  { name: 'amount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n                ],\n              },\n              { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalReceiver', internalType: 'address', type: 'address' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'borrowerOfferSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'refinanceFromLoanExecutionData',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'trancheIndex', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'refinanceFull',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'trancheIndex', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'refinancePartial',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_repaymentData',\n        internalType: 'struct IMultiSourceLoan.LoanRepaymentData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'data',\n            internalType: 'struct IMultiSourceLoan.SignableRepaymentData',\n            type: 'tuple',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n              { name: 'shouldDelegate', internalType: 'bool', type: 'bool' },\n            ],\n          },\n          {\n            name: 'loan',\n            internalType: 'struct IMultiSourceLoan.Loan',\n            type: 'tuple',\n            components: [\n              { name: 'borrower', internalType: 'address', type: 'address' },\n              { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              {\n                name: 'tranche',\n                internalType: 'struct IMultiSourceLoan.Tranche[]',\n                type: 'tuple[]',\n                components: [\n                  { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'floor', internalType: 'uint256', type: 'uint256' },\n                  { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lender', internalType: 'address', type: 'address' },\n                  { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n                  { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n                  { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                ],\n              },\n              { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'borrowerSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'repayLoan',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'revokeDelegate',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newFlashActionContract', internalType: 'address', type: 'address' }],\n    name: 'setFlashActionContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_minLockPeriod', internalType: 'uint256', type: 'uint256' }],\n    name: 'setMinLockPeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMulticall\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMulticallAbi = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'i', internalType: 'uint256', type: 'uint256' },\n      { name: 'returndata', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'MulticallFailed',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n    stateMutability: 'payable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IMulticall3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iMulticall3Abi = [\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'returnData', internalType: 'bytes[]', type: 'bytes[]' },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call3[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'allowFailure', internalType: 'bool', type: 'bool' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call3Value[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'allowFailure', internalType: 'bool', type: 'bool' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'aggregate3Value',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'blockAndAggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getBasefee',\n    outputs: [{ name: 'basefee', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],\n    name: 'getBlockHash',\n    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getBlockNumber',\n    outputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getChainId',\n    outputs: [{ name: 'chainid', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockCoinbase',\n    outputs: [{ name: 'coinbase', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockDifficulty',\n    outputs: [{ name: 'difficulty', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockGasLimit',\n    outputs: [{ name: 'gaslimit', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCurrentBlockTimestamp',\n    outputs: [{ name: 'timestamp', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],\n    name: 'getEthBalance',\n    outputs: [{ name: 'balance', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLastBlockHash',\n    outputs: [{ name: 'blockHash', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'tryAggregate',\n    outputs: [\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'requireSuccess', internalType: 'bool', type: 'bool' },\n      {\n        name: 'calls',\n        internalType: 'struct IMulticall3.Call[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'callData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'tryBlockAndAggregate',\n    outputs: [\n      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32' },\n      {\n        name: 'returnData',\n        internalType: 'struct IMulticall3.Result[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'success', internalType: 'bool', type: 'bool' },\n          { name: 'returnData', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// INFTFlashAction\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const inftFlashActionAbi = [\n  { type: 'error', inputs: [], name: 'InvalidOwnerError' },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'execute',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IOfferValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iOfferValidatorAbi = [\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_offer',\n        internalType: 'struct IMultiSourceLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IOldERC721\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iOldErc721Abi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '_balance', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'takeOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iOracleAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'period', internalType: 'uint64', type: 'uint64', indexed: false },\n      { name: 'key', internalType: 'bytes4', type: 'bytes4', indexed: false },\n      { name: 'value', internalType: 'uint128', type: 'uint128', indexed: false },\n    ],\n    name: 'DataUpdated',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_period', internalType: 'uint64', type: 'uint64' },\n      { name: '_key', internalType: 'bytes4', type: 'bytes4' },\n    ],\n    name: 'getData',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IOracle.CollectionData',\n        type: 'tuple',\n        components: [\n          { name: 'value', internalType: 'uint128', type: 'uint128' },\n          { name: 'updated', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_period', internalType: 'uint64', type: 'uint64' },\n      { name: '_key', internalType: 'bytes4', type: 'bytes4' },\n      { name: '_value', internalType: 'uint128', type: 'uint128' },\n    ],\n    name: 'setData',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IPurchaseBundler\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iPurchaseBundlerAbi = [\n  {\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'buy',\n    outputs: [\n      { name: '', internalType: 'uint256[]', type: 'uint256[]' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'finalUpdateMultiSourceLoanAddress',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMultiSourceLoanAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingTaxes',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingTaxesSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTaxes',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'sell',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'function', inputs: [], name: 'setTaxes', outputs: [], stateMutability: 'nonpayable' },\n  {\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'updateMultiSourceLoanAddressFirst',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newTaxes',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'updateTaxes',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IReservoir\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iReservoirAbi = [\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_executionInfos',\n        internalType: 'struct IReservoir.ExecutionInfo[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'module', internalType: 'address', type: 'address' },\n          { name: 'data', internalType: 'bytes', type: 'bytes' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'execute',\n    outputs: [],\n    stateMutability: 'payable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IUserVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iUserVaultAbi = [\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'ERC20BalanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'ERC721OwnerOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_assetRecipient', internalType: 'address', type: 'address' },\n    ],\n    name: 'burn',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n      { name: '_oldCollections', internalType: 'address[]', type: 'address[]' },\n      { name: '_oldTokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'burnAndWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC20',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'depositERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'depositEth',\n    outputs: [],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositOldERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'depositOldERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'mint',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'withdrawERC20s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'withdrawERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdrawEth',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawOldERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'withdrawOldERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IWrappedPunk\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const iWrappedPunkAbi = [\n  {\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'burn',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'punkIndex', internalType: 'uint256', type: 'uint256' }],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],\n    name: 'proxyInfo',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'registerProxy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// InputChecker\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const inputCheckerAbi = [{ type: 'error', inputs: [], name: 'AddressZeroError' }] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LiquidationDistributor\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const liquidationDistributorAbi = [\n  {\n    type: 'constructor',\n    inputs: [{ name: '_loanManagerRegistry', internalType: 'address', type: 'address' }],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'InvalidCallerError' },\n  { type: 'error', inputs: [], name: 'LiquidatorCannotBeUpdatedError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidatorSet',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_proceeds', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'distribute',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLoanManagerRegistry',\n    outputs: [{ name: '', internalType: 'contract ILoanManagerRegistry', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'setLiquidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LiquidationHandler\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const liquidationHandlerAbi = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'InvalidDurationError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newMinBid', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinBidLiquidationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractAdded', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractRemoved', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MAX_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_BID_LIQUIDATION',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__loanLiquidator', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LoanManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const loanManagerAbi = [\n  { type: 'error', inputs: [], name: 'CallerNotAccepted' },\n  { type: 'error', inputs: [], name: 'InvalidCallerError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'callers',\n        internalType: 'struct ILoanManager.ProposedCaller[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'caller', internalType: 'address', type: 'address' },\n          { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'CallersAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'UPDATE_WAITING_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_callers',\n        internalType: 'struct ILoanManager.ProposedCaller[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'caller', internalType: 'address', type: 'address' },\n          { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n        ],\n      },\n    ],\n    name: 'addCallers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getOfferHandler',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getParameterSetter',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_caller', internalType: 'address', type: 'address' }],\n    name: 'isCallerAccepted',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n      { name: '_apr', internalType: 'uint256', type: 'uint256' },\n      { name: '_accruedInterest', internalType: 'uint256', type: 'uint256' },\n      { name: '_protocolFee', internalType: 'uint256', type: 'uint256' },\n      { name: '_received', internalType: 'uint256', type: 'uint256' },\n      { name: '_startTime', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'loanLiquidation',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n      { name: '_apr', internalType: 'uint256', type: 'uint256' },\n      { name: '_accruedInterest', internalType: 'uint256', type: 'uint256' },\n      { name: '_protocolFee', internalType: 'uint256', type: 'uint256' },\n      { name: '_startTime', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'loanRepayment',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_offerHandler', internalType: 'address', type: 'address' }],\n    name: 'updateOfferHandler',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_offer', internalType: 'bytes', type: 'bytes' },\n      { name: '_protocolFee', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LoanManagerParameterSetter\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const loanManagerParameterSetterAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      { name: '__offerHandler', internalType: 'address', type: 'address' },\n      { name: '_updateWaitingTime', internalType: 'uint256', type: 'uint256' },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  { type: 'error', inputs: [], name: 'LoanManagerSetError' },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'offerHandler', internalType: 'address', type: 'address', indexed: false }],\n    name: 'OfferHandlerSet',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'offerHandler', internalType: 'address', type: 'address', indexed: false }],\n    name: 'ProposedOfferHandlerSet',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'callers',\n        internalType: 'struct ILoanManager.ProposedCaller[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'caller', internalType: 'address', type: 'address' },\n          { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'RequestCallersAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'UPDATE_WAITING_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_callers',\n        internalType: 'struct ILoanManager.ProposedCaller[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'caller', internalType: 'address', type: 'address' },\n          { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n        ],\n      },\n    ],\n    name: 'addCallers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__offerHandler', internalType: 'address', type: 'address' }],\n    name: 'confirmOfferHandler',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLoanManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getOfferHandler',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getProposedAcceptedCallers',\n    outputs: [\n      { name: 'caller', internalType: 'address', type: 'address' },\n      { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedAcceptedCallersSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedOfferHandler',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProposedOfferHandlerSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_callers',\n        internalType: 'struct ILoanManager.ProposedCaller[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'caller', internalType: 'address', type: 'address' },\n          { name: 'isLoanContract', internalType: 'bool', type: 'bool' },\n        ],\n      },\n    ],\n    name: 'requestAddCallers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__loanManager', internalType: 'address', type: 'address' }],\n    name: 'setLoanManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__offerHandler', internalType: 'address', type: 'address' }],\n    name: 'setOfferHandler',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LoanManagerRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const loanManagerRegistryAbi = [\n  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanManagerAdded', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanManagerAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanManagerRemoved', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanManagerRemoved',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanManager', internalType: 'address', type: 'address' }],\n    name: 'addLoanManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanManager', internalType: 'address', type: 'address' }],\n    name: 'isLoanManager',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanManager', internalType: 'address', type: 'address' }],\n    name: 'removeLoanManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Math\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const mathAbi = [{ type: 'error', inputs: [], name: 'MathOverflowedMulDiv' }] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MockERC20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const mockErc20Abi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n      { name: '_decimals', internalType: 'uint8', type: 'uint8' },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MockERC721\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const mockErc721Abi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'pure',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MockedAave\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const mockedAaveAbi = [\n  {\n    type: 'constructor',\n    inputs: [{ name: '__baseAsset', internalType: 'contract SampleToken', type: 'address' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'aToken',\n    outputs: [{ name: '', internalType: 'contract SampleToken', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'baseAsset',\n    outputs: [{ name: '', internalType: 'contract ERC20', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n      { name: 'onBehalfOf', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint16', type: 'uint16' },\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'getReserveData',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint40', type: 'uint40' },\n      { name: '', internalType: 'uint16', type: 'uint16' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__apr', internalType: 'uint128', type: 'uint128' }],\n    name: 'setAprBps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n      { name: 'to', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MockedCurve\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const mockedCurveAbi = [\n  {\n    type: 'constructor',\n    inputs: [{ name: '_token', internalType: 'contract SampleToken', type: 'address' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'i', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint128', type: 'uint128' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '_min_dy', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'exchange',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'nextDy',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_nextDy', internalType: 'uint256', type: 'uint256' }],\n    name: 'setNextDy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'token',\n    outputs: [{ name: '', internalType: 'contract SampleToken', type: 'address' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MultiSourceCommons\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multiSourceCommonsAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeArtifacts',\n    outputs: [{ name: 'excludedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeContracts',\n    outputs: [{ name: 'excludedContracts_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeSenders',\n    outputs: [{ name: 'excludedSenders_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'function', inputs: [], name: 'setUp', outputs: [], stateMutability: 'nonpayable' },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifactSelectors',\n    outputs: [\n      {\n        name: 'targetedArtifactSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifacts',\n    outputs: [{ name: 'targetedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetContracts',\n    outputs: [{ name: 'targetedContracts_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetInterfaces',\n    outputs: [\n      {\n        name: 'targetedInterfaces_',\n        internalType: 'struct StdInvariant.FuzzInterface[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'artifacts', internalType: 'string[]', type: 'string[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetSelectors',\n    outputs: [\n      {\n        name: 'targetedSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetSenders',\n    outputs: [{ name: 'targetedSenders_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MultiSourceLoan\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multiSourceLoanAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      { name: 'loanLiquidator', internalType: 'address', type: 'address' },\n      {\n        name: 'protocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'maxTranches', internalType: 'uint256', type: 'uint256' },\n      { name: 'minLockPeriod', internalType: 'uint256', type: 'uint256' },\n      { name: 'delegateRegistry', internalType: 'address', type: 'address' },\n      { name: 'loanManagerRegistry', internalType: 'address', type: 'address' },\n      { name: 'flashActionContract', internalType: 'address', type: 'address' },\n      { name: 'minWaitTime', internalType: 'uint256', type: 'uint256' },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CancelledOrExecutedOfferError',\n  },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'ECDSAInvalidSignature' },\n  {\n    type: 'error',\n    inputs: [{ name: 'length', internalType: 'uint256', type: 'uint256' }],\n    name: 'ECDSAInvalidSignatureLength',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: 's', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'ECDSAInvalidSignatureS',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'ExpiredOfferError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidAddressesError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_principalAmount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'InvalidAmountError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  { type: 'error', inputs: [], name: 'InvalidCallerError' },\n  { type: 'error', inputs: [], name: 'InvalidCollateralIdError' },\n  { type: 'error', inputs: [], name: 'InvalidDurationError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'InvalidLoanError',\n  },\n  { type: 'error', inputs: [], name: 'InvalidMethodError' },\n  { type: 'error', inputs: [], name: 'InvalidParametersError' },\n  { type: 'error', inputs: [], name: 'InvalidRenegotiationOfferError' },\n  { type: 'error', inputs: [], name: 'InvalidSignatureError' },\n  { type: 'error', inputs: [], name: 'InvalidTrancheError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_liquidator', internalType: 'address', type: 'address' }],\n    name: 'LiquidatorOnlyError',\n  },\n  { type: 'error', inputs: [], name: 'LoanExpiredError' },\n  { type: 'error', inputs: [], name: 'LoanLockedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_expirationTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'LoanNotDueError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowOfferIdError',\n  },\n  {\n    type: 'error',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_newMinRenegotiationOfferId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minOfferId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'LowRenegotiationOfferIdError',\n  },\n  { type: 'error', inputs: [], name: 'MaxCapacityExceededError' },\n  { type: 'error', inputs: [], name: 'MismatchError' },\n  {\n    type: 'error',\n    inputs: [\n      { name: 'i', internalType: 'uint256', type: 'uint256' },\n      { name: 'returndata', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'MulticallFailed',\n  },\n  { type: 'error', inputs: [], name: 'NFTNotReturnedError' },\n  { type: 'error', inputs: [], name: 'NotStrictlyImprovedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'TooManyTranchesError' },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'minTimestamp', internalType: 'uint256', type: 'uint256' }],\n    name: 'TrancheCannotBeRefinancedError',\n  },\n  { type: 'error', inputs: [], name: 'ZeroInterestError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'minOfferId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'AllOffersCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'value', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'Delegated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'newFlashActionContract', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'FlashActionContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'target', internalType: 'address', type: 'address', indexed: false },\n      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'FlashActionExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newDuration', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LiquidationAuctionDurationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'liquidator', internalType: 'address', type: 'address', indexed: false }],\n    name: 'LiquidationContractUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'offerId', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanEmitted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanForeclosed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'LoanLiquidated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'oldLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRefinanced',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'newLoanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n      { name: 'offerIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n      { name: 'totalFee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRefinancedFromNewOffers',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'totalRepayment', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'LoanRepaid',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'loanId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'liquidator', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'LoanSentToLiquidator',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '_minimum', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinAprImprovementUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newMinBid', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinBidLiquidationUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'minLockPeriod', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'MinLockPeriodUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'lender', internalType: 'address', type: 'address', indexed: false },\n      { name: 'renegotiationId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RenegotiationOfferCancelled',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'RevokeDelegate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractAdded', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractAdded',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'contractRemoved', internalType: 'address', type: 'address', indexed: false }],\n    name: 'WhitelistedCallbackContractRemoved',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'INITIAL_DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MAX_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_AUCTION_DURATION',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_BID_LIQUIDATION',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'VERSION',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'trancheIndex', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'addNewTranche',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'addWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_minOfferId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelAllOffers',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_offerId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_renegotiationId', internalType: 'uint256', type: 'uint256' }],\n    name: 'cancelRenegotiationOffer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: 'loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_rights', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_value', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'delegate',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_loanExecutionData',\n        internalType: 'struct IMultiSourceLoan.LoanExecutionData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'executionData',\n            internalType: 'struct IMultiSourceLoan.ExecutionData',\n            type: 'tuple',\n            components: [\n              {\n                name: 'offerExecution',\n                internalType: 'struct IMultiSourceLoan.OfferExecution[]',\n                type: 'tuple[]',\n                components: [\n                  {\n                    name: 'offer',\n                    internalType: 'struct IMultiSourceLoan.LoanOffer',\n                    type: 'tuple',\n                    components: [\n                      { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'lender', internalType: 'address', type: 'address' },\n                      { name: 'fee', internalType: 'uint256', type: 'uint256' },\n                      { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n                      { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n                      { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'principalAddress', internalType: 'address', type: 'address' },\n                      { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                      { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n                      { name: 'duration', internalType: 'uint256', type: 'uint256' },\n                      { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n                      {\n                        name: 'validators',\n                        internalType: 'struct IBaseLoan.OfferValidator[]',\n                        type: 'tuple[]',\n                        components: [\n                          { name: 'validator', internalType: 'address', type: 'address' },\n                          { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n                        ],\n                      },\n                    ],\n                  },\n                  { name: 'amount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n                ],\n              },\n              { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalReceiver', internalType: 'address', type: 'address' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'borrowerOfferSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'emitLoan',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'executeFlashAction',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCollectionManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getCurrencyManager',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getDelegateRegistry',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getFlashActionContract',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidationAuctionDuration',\n    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLiquidator',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_loanId', internalType: 'uint256', type: 'uint256' }],\n    name: 'getLoanHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getLoanManagerRegistry',\n    outputs: [{ name: '', internalType: 'contract ILoanManagerRegistry', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMaxTranches',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMinImprovementApr',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMinLockPeriod',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTotalLoansIssued',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_lender', internalType: 'address', type: 'address' },\n      { name: '_offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getUsedCapacity',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address' },\n      { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOfferCancelled',\n    outputs: [{ name: 'notActive', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address' },\n      { name: 'renegotiationIf', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isRenegotiationOfferCancelled',\n    outputs: [{ name: 'notActive', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'isWhitelistedCallbackContract',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'liquidateLoan',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'loanLiquidated',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],\n    name: 'minOfferId',\n    outputs: [{ name: 'minOfferId', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_loanId', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loanExecutionData',\n        internalType: 'struct IMultiSourceLoan.LoanExecutionData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'executionData',\n            internalType: 'struct IMultiSourceLoan.ExecutionData',\n            type: 'tuple',\n            components: [\n              {\n                name: 'offerExecution',\n                internalType: 'struct IMultiSourceLoan.OfferExecution[]',\n                type: 'tuple[]',\n                components: [\n                  {\n                    name: 'offer',\n                    internalType: 'struct IMultiSourceLoan.LoanOffer',\n                    type: 'tuple',\n                    components: [\n                      { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'lender', internalType: 'address', type: 'address' },\n                      { name: 'fee', internalType: 'uint256', type: 'uint256' },\n                      { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n                      { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n                      { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n                      { name: 'principalAddress', internalType: 'address', type: 'address' },\n                      { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                      { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                      { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n                      { name: 'duration', internalType: 'uint256', type: 'uint256' },\n                      { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n                      {\n                        name: 'validators',\n                        internalType: 'struct IBaseLoan.OfferValidator[]',\n                        type: 'tuple[]',\n                        components: [\n                          { name: 'validator', internalType: 'address', type: 'address' },\n                          { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n                        ],\n                      },\n                    ],\n                  },\n                  { name: 'amount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lenderOfferSignature', internalType: 'bytes', type: 'bytes' },\n                ],\n              },\n              { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalReceiver', internalType: 'address', type: 'address' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'borrowerOfferSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'refinanceFromLoanExecutionData',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'trancheIndex', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_renegotiationOfferSignature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'refinanceFull',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_renegotiationOffer',\n        internalType: 'struct IMultiSourceLoan.RenegotiationOffer',\n        type: 'tuple',\n        components: [\n          { name: 'renegotiationId', internalType: 'uint256', type: 'uint256' },\n          { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'trancheIndex', internalType: 'uint256[]', type: 'uint256[]' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'refinancePartial',\n    outputs: [\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_contract', internalType: 'address', type: 'address' }],\n    name: 'removeWhitelistedCallbackContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_repaymentData',\n        internalType: 'struct IMultiSourceLoan.LoanRepaymentData',\n        type: 'tuple',\n        components: [\n          {\n            name: 'data',\n            internalType: 'struct IMultiSourceLoan.SignableRepaymentData',\n            type: 'tuple',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'callbackData', internalType: 'bytes', type: 'bytes' },\n              { name: 'shouldDelegate', internalType: 'bool', type: 'bool' },\n            ],\n          },\n          {\n            name: 'loan',\n            internalType: 'struct IMultiSourceLoan.Loan',\n            type: 'tuple',\n            components: [\n              { name: 'borrower', internalType: 'address', type: 'address' },\n              { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n              { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAddress', internalType: 'address', type: 'address' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'duration', internalType: 'uint256', type: 'uint256' },\n              {\n                name: 'tranche',\n                internalType: 'struct IMultiSourceLoan.Tranche[]',\n                type: 'tuple[]',\n                components: [\n                  { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n                  { name: 'floor', internalType: 'uint256', type: 'uint256' },\n                  { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n                  { name: 'lender', internalType: 'address', type: 'address' },\n                  { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n                  { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n                  { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n                ],\n              },\n              { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'borrowerSignature', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'repayLoan',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_delegate', internalType: 'address', type: 'address' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'revokeDelegate',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newFlashActionContract', internalType: 'address', type: 'address' }],\n    name: 'setFlashActionContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__minLockPeriod', internalType: 'uint256', type: 'uint256' }],\n    name: 'setMinLockPeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newDuration', internalType: 'uint48', type: 'uint48' }],\n    name: 'updateLiquidationAuctionDuration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '__loanLiquidator', internalType: 'address', type: 'address' }],\n    name: 'updateLiquidationContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newMinimum', internalType: 'uint256', type: 'uint256' }],\n    name: 'updateMinImprovementApr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Multicall\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const multicallAbi = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'i', internalType: 'uint256', type: 'uint256' },\n      { name: 'returndata', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'MulticallFailed',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'multicall',\n    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],\n    stateMutability: 'payable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NftBitVectorValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const nftBitVectorValidatorAbi = [\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'BitVectorLengthExceededError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n    stateMutability: 'pure',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// NftPackedListValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const nftPackedListValidatorAbi = [\n  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],\n    name: 'InvalidBytesPerTokenIdError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n    stateMutability: 'pure',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Oracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const oracleAbi = [\n  {\n    type: 'constructor',\n    inputs: [{ name: '_minWaitTime', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'period', internalType: 'uint64', type: 'uint64', indexed: false },\n      { name: 'key', internalType: 'bytes4', type: 'bytes4', indexed: false },\n      { name: 'value', internalType: 'uint128', type: 'uint128', indexed: false },\n    ],\n    name: 'DataUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_period', internalType: 'uint64', type: 'uint64' },\n      { name: '_key', internalType: 'bytes4', type: 'bytes4' },\n    ],\n    name: 'getData',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IOracle.CollectionData',\n        type: 'tuple',\n        components: [\n          { name: 'value', internalType: 'uint128', type: 'uint128' },\n          { name: 'updated', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_period', internalType: 'uint64', type: 'uint64' },\n      { name: '_key', internalType: 'bytes4', type: 'bytes4' },\n      { name: '_value', internalType: 'uint128', type: 'uint128' },\n    ],\n    name: 'setData',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Owned\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const ownedAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// PurchaseBundler\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const purchaseBundlerAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      { name: '_multiSourceLoanAddress', internalType: 'address', type: 'address' },\n      { name: '_marketplaceContracts', internalType: 'address', type: 'address' },\n      { name: '_wethAddress', internalType: 'address payable', type: 'address' },\n      { name: '_punkMarketAddress', internalType: 'address payable', type: 'address' },\n      { name: '_wrappedPunkAddress', internalType: 'address payable', type: 'address' },\n      {\n        name: '__taxes',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n      { name: '_minWaitTime', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '__protocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'CouldNotReturnEthError' },\n  { type: 'error', inputs: [], name: 'InvalidAddressUpdateError' },\n  { type: 'error', inputs: [], name: 'InvalidCallbackError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [\n      {\n        name: 'newTaxes',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'InvalidTaxesError',\n  },\n  { type: 'error', inputs: [], name: 'MarketplaceAddressNotWhitelisted' },\n  { type: 'error', inputs: [], name: 'OnlyLoanCallableError' },\n  { type: 'error', inputs: [], name: 'OnlyWethSupportedError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'BNPLLoansStarted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newAddress', internalType: 'address', type: 'address', indexed: false }],\n    name: 'MultiSourceLoanPendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newAddress', internalType: 'address', type: 'address', indexed: false }],\n    name: 'MultiSourceLoanUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'loanIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'SellAndRepayExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'newTaxes',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'TaxesPendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'taxes',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'TaxesUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  { type: 'fallback', stateMutability: 'payable' },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'TAX_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterNFTTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_loan',\n        internalType: 'struct IMultiSourceLoan.Loan',\n        type: 'tuple',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n      { name: '_fee', internalType: 'uint256', type: 'uint256' },\n      { name: '_executionData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'afterPrincipalTransfer',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'buy',\n    outputs: [\n      { name: '', internalType: 'uint256[]', type: 'uint256[]' },\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.Loan[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'borrower', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'tranche',\n            internalType: 'struct IMultiSourceLoan.Tranche[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'loanId', internalType: 'uint256', type: 'uint256' },\n              { name: 'floor', internalType: 'uint256', type: 'uint256' },\n              { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n              { name: 'lender', internalType: 'address', type: 'address' },\n              { name: 'accruedInterest', internalType: 'uint256', type: 'uint256' },\n              { name: 'startTime', internalType: 'uint256', type: 'uint256' },\n              { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n          { name: 'protocolFee', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'finalUpdateMultiSourceLoanAddress',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getMultiSourceLoanAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingTaxes',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingTaxesSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getTaxes',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_executionData', internalType: 'bytes[]', type: 'bytes[]' }],\n    name: 'sell',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'function', inputs: [], name: 'setTaxes', outputs: [], stateMutability: 'nonpayable' },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newAddress', internalType: 'address', type: 'address' }],\n    name: 'updateMultiSourceLoanAddressFirst',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newTaxes',\n        internalType: 'struct IPurchaseBundler.Taxes',\n        type: 'tuple',\n        components: [\n          { name: 'buyTax', internalType: 'uint128', type: 'uint128' },\n          { name: 'sellTax', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'updateTaxes',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'receive', stateMutability: 'payable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RangeValidator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const rangeValidatorAbi = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'min', internalType: 'uint256', type: 'uint256' },\n      { name: 'max', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'TokenIdOutOfRangeError',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '',\n        internalType: 'struct IMultiSourceLoan.LoanOffer',\n        type: 'tuple',\n        components: [\n          { name: 'offerId', internalType: 'uint256', type: 'uint256' },\n          { name: 'lender', internalType: 'address', type: 'address' },\n          { name: 'fee', internalType: 'uint256', type: 'uint256' },\n          { name: 'capacity', internalType: 'uint256', type: 'uint256' },\n          { name: 'nftCollateralAddress', internalType: 'address', type: 'address' },\n          { name: 'nftCollateralTokenId', internalType: 'uint256', type: 'uint256' },\n          { name: 'principalAddress', internalType: 'address', type: 'address' },\n          { name: 'principalAmount', internalType: 'uint256', type: 'uint256' },\n          { name: 'aprBps', internalType: 'uint256', type: 'uint256' },\n          { name: 'expirationTime', internalType: 'uint256', type: 'uint256' },\n          { name: 'duration', internalType: 'uint256', type: 'uint256' },\n          { name: 'maxSeniorRepayment', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'validators',\n            internalType: 'struct IBaseLoan.OfferValidator[]',\n            type: 'tuple[]',\n            components: [\n              { name: 'validator', internalType: 'address', type: 'address' },\n              { name: 'arguments', internalType: 'bytes', type: 'bytes' },\n            ],\n          },\n        ],\n      },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_validatorData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'validateOffer',\n    outputs: [],\n    stateMutability: 'pure',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleCollection\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleCollectionAbi = [\n  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'lastId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'mintNext',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'pure',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleMarketplace\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleMarketplaceAbi = [\n  { type: 'function', inputs: [], name: 'buy', outputs: [], stateMutability: 'nonpayable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleOldCollection\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleOldCollectionAbi = [\n  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'lastId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],\n    name: 'mintNext',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'takeOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'pure',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SampleToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const sampleTokenAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Deposit',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Withdrawal',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  { type: 'function', inputs: [], name: 'deposit', outputs: [], stateMutability: 'payable' },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'receive', stateMutability: 'payable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Strings\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const stringsAbi = [\n  {\n    type: 'error',\n    inputs: [\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'length', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'StringsInsufficientHexLength',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Test\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeArtifacts',\n    outputs: [{ name: 'excludedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeContracts',\n    outputs: [{ name: 'excludedContracts_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeSenders',\n    outputs: [{ name: 'excludedSenders_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifactSelectors',\n    outputs: [\n      {\n        name: 'targetedArtifactSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifacts',\n    outputs: [{ name: 'targetedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetContracts',\n    outputs: [{ name: 'targetedContracts_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetInterfaces',\n    outputs: [\n      {\n        name: 'targetedInterfaces_',\n        internalType: 'struct StdInvariant.FuzzInterface[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'artifacts', internalType: 'string[]', type: 'string[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetSelectors',\n    outputs: [\n      {\n        name: 'targetedSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetSenders',\n    outputs: [{ name: 'targetedSenders_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestLoanSetup\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testLoanSetupAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],\n    name: 'log_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'val', internalType: 'address[]', type: 'address[]', indexed: false }],\n    name: 'log_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'log_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32', indexed: false }],\n    name: 'log_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'int256', type: 'int256', indexed: false }],\n    name: 'log_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address', type: 'address', indexed: false },\n    ],\n    name: 'log_named_address',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256[]', type: 'uint256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256[]', type: 'int256[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'address[]', type: 'address[]', indexed: false },\n    ],\n    name: 'log_named_array',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'log_named_bytes',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'bytes32', type: 'bytes32', indexed: false },\n    ],\n    name: 'log_named_bytes32',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'decimals', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_decimal_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'int256', type: 'int256', indexed: false },\n    ],\n    name: 'log_named_int',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'string', type: 'string', indexed: false },\n    ],\n    name: 'log_named_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'key', internalType: 'string', type: 'string', indexed: false },\n      { name: 'val', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'log_named_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'string', type: 'string', indexed: false }],\n    name: 'log_string',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256', indexed: false }],\n    name: 'log_uint',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes', indexed: false }],\n    name: 'logs',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'IS_TEST',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeArtifacts',\n    outputs: [{ name: 'excludedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeContracts',\n    outputs: [{ name: 'excludedContracts_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'excludeSenders',\n    outputs: [{ name: 'excludedSenders_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'failed',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifactSelectors',\n    outputs: [\n      {\n        name: 'targetedArtifactSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetArtifacts',\n    outputs: [{ name: 'targetedArtifacts_', internalType: 'string[]', type: 'string[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetContracts',\n    outputs: [{ name: 'targetedContracts_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetInterfaces',\n    outputs: [\n      {\n        name: 'targetedInterfaces_',\n        internalType: 'struct StdInvariant.FuzzInterface[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'artifacts', internalType: 'string[]', type: 'string[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetSelectors',\n    outputs: [\n      {\n        name: 'targetedSelectors_',\n        internalType: 'struct StdInvariant.FuzzSelector[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'addr', internalType: 'address', type: 'address' },\n          { name: 'selectors', internalType: 'bytes4[]', type: 'bytes4[]' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'targetSenders',\n    outputs: [{ name: 'targetedSenders_', internalType: 'address[]', type: 'address[]' }],\n    stateMutability: 'view',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestNFTFlashAction\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testNftFlashActionAbi = [\n  { type: 'error', inputs: [], name: 'InvalidOwnerError' },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'execute',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'pure',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestNFTMaliciousFlashAction\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const testNftMaliciousFlashActionAbi = [\n  { type: 'error', inputs: [], name: 'InvalidOwnerError' },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'execute',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'pure',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TwoStepOwned\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const twoStepOwnedAbi = [\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// USDCSampleToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const usdcSampleTokenAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// UserVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const userVaultAbi = [\n  {\n    type: 'constructor',\n    inputs: [\n      { name: 'currencyManager', internalType: 'address', type: 'address' },\n      { name: 'collectionManager', internalType: 'address', type: 'address' },\n      { name: 'oldCollectionManager', internalType: 'address', type: 'address' },\n    ],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'error', inputs: [], name: 'AssetNotOwnedError' },\n  { type: 'error', inputs: [], name: 'CollectionNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'CurrencyNotWhitelistedError' },\n  { type: 'error', inputs: [], name: 'InvalidCallerError' },\n  { type: 'error', inputs: [], name: 'LengthMismatchError' },\n  {\n    type: 'error',\n    inputs: [{ name: 'vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'NotApprovedError',\n  },\n  { type: 'error', inputs: [], name: 'VaultNotExistsError' },\n  { type: 'error', inputs: [], name: 'WithdrawingETHError' },\n  { type: 'error', inputs: [], name: 'WrongMethodError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'operator', internalType: 'address', type: 'address', indexed: true },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'token', internalType: 'address', type: 'address', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC20Deposited',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'token', internalType: 'address', type: 'address', indexed: false },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC20Withdrawn',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC721Deposited',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'ERC721Withdrawn',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OldERC721Deposited',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'vaultId', internalType: 'uint256', type: 'uint256', indexed: false },\n      { name: 'collection', internalType: 'address', type: 'address', indexed: false },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'OldERC721Withdrawn',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'ERC20BalanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'ERC721OwnerOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'ETH',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'OldERC721OwnerOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_assetRecipient', internalType: 'address', type: 'address' },\n    ],\n    name: 'burn',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n      { name: '_oldCollections', internalType: 'address[]', type: 'address[]' },\n      { name: '_oldTokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'burnAndWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC20',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'depositERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'depositEth',\n    outputs: [],\n    stateMutability: 'payable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'depositOldERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'depositOldERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'mint',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'onERC721Received',\n    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'operator', internalType: 'address', type: 'address' },\n      { name: 'approved', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'pure',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_token', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_tokens', internalType: 'address[]', type: 'address[]' },\n    ],\n    name: 'withdrawERC20s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'withdrawERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_vaultId', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdrawEth',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collection', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawOldERC721',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '_vaultId', internalType: 'uint256', type: 'uint256' },\n      { name: '_collections', internalType: 'address[]', type: 'address[]' },\n      { name: '_tokenIds', internalType: 'uint256[]', type: 'uint256[]' },\n    ],\n    name: 'withdrawOldERC721s',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ValidatorHelpers\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const validatorHelpersAbi = [\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'BitVectorLengthExceededError',\n  },\n  { type: 'error', inputs: [], name: 'EmptyTokenIdListError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_bytesPerTokenId', internalType: 'uint64', type: 'uint64' }],\n    name: 'InvalidBytesPerTokenIdError',\n  },\n  {\n    type: 'error',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'TokenIdNotFoundError',\n  },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// WETH\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const wethAbi = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address', indexed: true },\n      { name: 'spender', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Deposit',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Transfer',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'Withdrawal',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'DOMAIN_SEPARATOR',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n    stateMutability: 'view',\n  },\n  { type: 'function', inputs: [], name: 'deposit', outputs: [], stateMutability: 'payable' },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'nonces',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'spender', internalType: 'address', type: 'address' },\n      { name: 'value', internalType: 'uint256', type: 'uint256' },\n      { name: 'deadline', internalType: 'uint256', type: 'uint256' },\n      { name: 'v', internalType: 'uint8', type: 'uint8' },\n      { name: 'r', internalType: 'bytes32', type: 'bytes32' },\n      { name: 's', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'permit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  { type: 'receive', stateMutability: 'payable' },\n] as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// WithProtocolFee\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const withProtocolFeeAbi = [\n  { type: 'error', inputs: [], name: 'AddressZeroError' },\n  { type: 'error', inputs: [], name: 'InvalidInputError' },\n  {\n    type: 'error',\n    inputs: [{ name: '_pendingProtocolFeeSetTime', internalType: 'uint256', type: 'uint256' }],\n    name: 'TooEarlyError',\n  },\n  { type: 'error', inputs: [], name: 'TooSoonError' },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeePendingUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'fee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'ProtocolFeeUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address', indexed: false }],\n    name: 'TransferOwnerRequested',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'FEE_UPDATE_NOTICE',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WAIT_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getPendingProtocolFeeSetTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'getProtocolFee',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'pendingOwnerTime',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: '_newOwner', internalType: 'address', type: 'address' }],\n    name: 'requestTransferOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'setProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n  {\n    type: 'function',\n    inputs: [\n      {\n        name: '_newProtocolFee',\n        internalType: 'struct WithProtocolFee.ProtocolFee',\n        type: 'tuple',\n        components: [\n          { name: 'recipient', internalType: 'address', type: 'address' },\n          { name: 'fraction', internalType: 'uint256', type: 'uint256' },\n        ],\n      },\n    ],\n    name: 'updateProtocolFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const\n", "export const toInteger = (bn: bigint | number): number => Number(bn.valueOf());\n\nexport const bpsToPercentage = (bps: bigint | number) => toInteger(bps) / 10000;\n\ntype ObjectT<T extends string> = { [k in T]: number | bigint };\ntype ObjectValue<T extends string, O extends ObjectT<T>> = O extends { [k in T]: infer R }\n  ? R | undefined\n  : undefined;\n\nexport const sumBy = <T extends string, O extends ObjectT<T>>(\n  array: readonly O[],\n  key: T,\n): ObjectValue<T, O> => {\n  if (!array.length) return undefined as ObjectValue<T, O>;\n  if (typeof array[0]?.[key] === 'bigint')\n    return array.reduce((acc, item) => acc + BigInt(item[key]), 0n) as ObjectValue<T, O>;\n  return array.reduce((acc, item) => acc + Number(item[key]), 0) as ObjectValue<T, O>;\n};\n\nexport const maxBy = <T extends string, O extends ObjectT<T>>(\n  array: readonly O[],\n  key: T,\n): ObjectValue<T, O> => {\n  if (!array.length) return undefined as ObjectValue<T, O>;\n  if (typeof array[0]?.[key] === 'bigint')\n    return array.reduce(\n      (acc, item) => (BigInt(item[key]) > acc ? BigInt(item[key]) : acc),\n      0n,\n    ) as ObjectValue<T, O>;\n  return array.reduce(\n    (acc, item) => (Number(item[key]) > acc ? Number(item[key]) : acc),\n    0,\n  ) as ObjectValue<T, O>;\n};\n\ntype MinFunction = {\n  <T extends number | bigint>(a: T, b: T): T;\n  <T extends number | bigint>(a: T, b?: T): T;\n  <T extends number | bigint>(a?: T, b?: T): T | undefined;\n};\nexport const min: MinFunction = <T extends number | bigint>(a?: T, b?: T) => {\n  if (a === undefined) return b;\n  if (b === undefined) return a;\n  return a < b ? a : b;\n};\n", "import { toInteger } from '@/utils/number';\n\nexport const SECONDS_IN_MIN = 60;\nexport const SECONDS_IN_DAY = SECONDS_IN_MIN * 60 * 24;\n\nexport const millisToSeconds = (millis: number | bigint) => Math.ceil(toInteger(millis) / 1_000);\nexport const secondsToMillis = (seconds: number | bigint) => toInteger(seconds) * 1_000;\nexport const daysToSeconds = (days: number | bigint) => toInteger(days) * SECONDS_IN_DAY;\nexport const secondsToDays = (seconds: number | bigint) =>\n  toInteger(Number(seconds) / SECONDS_IN_DAY);\n\ntype Seconds = bigint;\nexport const toDate = (date: Seconds | Date) =>\n  typeof date === 'bigint' ? new Date(secondsToMillis(date)) : date;\n", "import { Address } from 'viem';\n\nimport { Auction, filterLogs, LoanV6 } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { auctionWithBuyoutLoanLiquidatorAbi as auctionWithBuyoutLoanLiquidatorABIV6 } from '@/generated/blockchain/v6';\nimport { millisToSeconds } from '@/utils/dates';\n\nimport { BaseContract } from './BaseContract';\n\nexport class AllV6 extends BaseContract<typeof auctionWithBuyoutLoanLiquidatorABIV6> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const {\n      AuctionLoanLiquidator: { v6 },\n    } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: v6,\n      abi: auctionWithBuyoutLoanLiquidatorABIV6,\n    });\n  }\n\n  async placeBid({\n    collectionContractAddress,\n    tokenId,\n    bid,\n    auction,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    bid: bigint;\n    auction: Auction;\n  }) {\n    const txHash = await this.safeContractWrite.placeBid([\n      collectionContractAddress,\n      tokenId,\n      this.mapAuctionToAuctionArgs(auction),\n      bid,\n    ]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.BidPlaced();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Bid not placed');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async getRemainingLockupSeconds({ auction }: { auction: Auction }) {\n    const lockupTimeSeconds = await this.contract.read.getTimeForMainLenderToBuy();\n    const lockupSeconds = Number(lockupTimeSeconds);\n    const ellapsedSeconds = Math.ceil(millisToSeconds(Date.now()) - Number(auction.startTime));\n\n    if (ellapsedSeconds >= lockupSeconds) return 0;\n    return lockupSeconds - ellapsedSeconds;\n  }\n\n  async settleAuctionWithBuyout({ auction, loan }: { auction: Auction; loan: LoanV6 }) {\n    const txHash = await this.safeContractWrite.settleWithBuyout([\n      loan.nftCollateralAddress,\n      loan.nftCollateralTokenId,\n      this.mapAuctionToAuctionArgs(auction),\n      loan,\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.AuctionSettledWithBuyout();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Auction not settled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async settleAuction({ auction, loan }: { auction: Auction; loan: LoanV6 }) {\n    const txHash = await this.safeContractWrite.settleAuction([\n      this.mapAuctionToAuctionArgs(auction),\n      loan,\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.AuctionSettled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Auction not settled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  private mapAuctionToAuctionArgs(auction: Auction) {\n    if ('minBid' in auction) {\n      return auction;\n    }\n    throw new Error('minBid is required for v6 auctions');\n  }\n}\n", "import { encodeFunctionData } from 'viem';\n\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { cryptopunksABI } from '@/generated/blockchain/cryptopunks';\n\nimport { BaseContract } from './BaseContract';\n\nexport class CryptoPunks extends BaseContract<typeof cryptopunksABI> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const { CryptoPunksAddress } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: CryptoPunksAddress,\n      abi: cryptopunksABI,\n    });\n  }\n\n  async encodeBuyPunk(tokenId: bigint) {\n    return encodeFunctionData({\n      abi: this.abi,\n      functionName: 'buyPunk',\n      args: [tokenId],\n    });\n  }\n}\n", "export const cryptopunksABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"punksOfferedForSale\",\n    outputs: [\n      {\n        name: \"isForSale\",\n        type: \"bool\",\n      },\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        name: \"seller\",\n        type: \"address\",\n      },\n      {\n        name: \"minValue\",\n        type: \"uint256\",\n      },\n      {\n        name: \"onlySellTo\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"enterBidForPunk\",\n    outputs: [],\n    payable: true,\n    type: \"function\",\n    stateMutability: \"payable\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        name: \"minPrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"acceptBidForPunk\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"addresses\",\n        type: \"address[]\",\n      },\n      {\n        name: \"indices\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"setInitialOwners\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"withdraw\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"imageHash\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"nextPunkIndexToAssign\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"punkIndexToAddress\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"standard\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"punkBids\",\n    outputs: [\n      {\n        name: \"hasBid\",\n        type: \"bool\",\n      },\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        name: \"bidder\",\n        type: \"address\",\n      },\n      {\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"allInitialOwnersAssigned\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"allPunksAssigned\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"buyPunk\",\n    outputs: [],\n    payable: true,\n    type: \"function\",\n    stateMutability: \"payable\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferPunk\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawBidForPunk\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setInitialOwner\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        name: \"minSalePriceInWei\",\n        type: \"uint256\",\n      },\n      {\n        name: \"toAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"offerPunkForSaleToAddress\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"punksRemainingToAssign\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        name: \"minSalePriceInWei\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"offerPunkForSale\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPunk\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"pendingWithdrawals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"view\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"punkNoLongerForSale\",\n    outputs: [],\n    payable: false,\n    type: \"function\",\n    stateMutability: \"nonpayable\",\n  },\n  {\n    inputs: [],\n    payable: true,\n    type: \"constructor\",\n    stateMutability: \"payable\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Assign\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PunkTransfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        name: \"minValue\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        name: \"toAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"PunkOffered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        name: \"fromAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"PunkBidEntered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        name: \"fromAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"PunkBidWithdrawn\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        name: \"fromAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"toAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"PunkBought\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"punkIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PunkNoLongerForSale\",\n    type: \"event\",\n  },\n] as const;\n", "import { Address, encodeFunctionData, Hash } from 'viem';\n\nimport { filterLogs, LoanV5, OfferV5 } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { leverageABI, multiSourceLoanABI } from '@/generated/blockchain/v5';\nimport { CONTRACT_DOMAIN_NAME } from '@/utils/string';\n\nimport { BaseContract } from './BaseContract';\n\nexport class LeverageV5 extends BaseContract<typeof leverageABI> {\n  mslAddress: Address;\n\n  constructor({ walletClient, mslAddress }: { walletClient: Wallet; mslAddress: Address }) {\n    const { LeverageAddress } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: LeverageAddress,\n      abi: leverageABI,\n    });\n\n    this.mslAddress = mslAddress;\n  }\n\n  private getDomain() {\n    // TODO: Get this from MSL v5\n    return {\n      name: CONTRACT_DOMAIN_NAME,\n      version: '2',\n      chainId: this.wallet.chain.id,\n      verifyingContract: this.mslAddress,\n    };\n  }\n\n  async signExecutionData(executionData: {\n    offer: OfferV5 & { signature: Hash };\n    tokenId: bigint;\n    amount: bigint;\n    expirationTime: bigint;\n    callbackData: Hash;\n  }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'ExecutionData',\n      types: {\n        ExecutionData: [\n          { name: 'offer', type: 'LoanOffer' },\n          { name: 'tokenId', type: 'uint256' },\n          { name: 'amount', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'callbackData', type: 'bytes' },\n        ],\n        LoanOffer: [\n          { name: 'offerId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'borrower', type: 'address' },\n          { name: 'capacity', type: 'uint256' },\n          { name: 'nftCollateralAddress', type: 'address' },\n          { name: 'nftCollateralTokenId', type: 'uint256' },\n          { name: 'principalAddress', type: 'address' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n          { name: 'validators', type: 'OfferValidator[]' },\n        ],\n        OfferValidator: [\n          { name: 'validator', type: 'address' },\n          { name: 'arguments', type: 'bytes' },\n        ],\n      } as const,\n      message: executionData,\n    });\n  }\n\n  async signRepaymentData(data: { loanId: bigint; callbackData: Hash; shouldDelegate: boolean }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'SignableRepaymentData',\n      types: {\n        SignableRepaymentData: [\n          { name: 'loanId', type: 'uint256' },\n          { name: 'callbackData', type: 'bytes' },\n          { name: 'shouldDelegate', type: 'bool' },\n        ],\n      } as const,\n      message: data,\n    });\n  }\n\n  async buy({\n    leverageBuyData,\n    ethToSend,\n  }: {\n    leverageBuyData: {\n      offer: OfferV5 & { signature: Hash };\n      expirationTime: bigint;\n      amount: bigint;\n      nft: {\n        tokenId: bigint;\n      };\n      callbackData: Hash;\n    }[];\n    ethToSend: bigint;\n  }) {\n    const txHash = await this.safeContractWrite.buy(\n      [\n        await Promise.all(\n          leverageBuyData.map(async (data) => {\n            const executionData = {\n              offer: data.offer,\n              tokenId: data.nft.tokenId,\n              amount: data.amount,\n              expirationTime: data.expirationTime,\n              callbackData: data.callbackData,\n            };\n\n            return encodeFunctionData({\n              abi: multiSourceLoanABI,\n              functionName: 'emitLoan',\n              args: [\n                {\n                  executionData,\n                  lender: data.offer.lender,\n                  borrower: this.wallet.account.address,\n                  lenderOfferSignature: data.offer.signature,\n                  borrowerOfferSignature: await this.signExecutionData(executionData),\n                },\n              ],\n            });\n          }),\n        ),\n      ],\n      {\n        value: ethToSend,\n      },\n    );\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.BNPLLoansStarted();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('BNPL Loans not started');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async sell({\n    loan,\n    callbackData,\n    shouldDelegate,\n    loanId,\n  }: {\n    loan: LoanV5;\n    callbackData: Hash;\n    shouldDelegate: boolean;\n    loanId: bigint;\n  }) {\n    const repaymentData = {\n      loanId,\n      callbackData,\n      shouldDelegate,\n    };\n\n    const txHash = await this.safeContractWrite.sell([\n      [\n        encodeFunctionData({\n          abi: multiSourceLoanABI,\n          functionName: 'repayLoan',\n          args: [\n            {\n              data: repaymentData,\n              loan,\n              borrowerSignature: await this.signRepaymentData(repaymentData),\n            },\n          ],\n        }),\n      ],\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.SellAndRepayExecuted();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Sell and repay not executed');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n}\n", "import { Address, Hash, zeroAddress } from 'viem';\n\nimport { filterLogs, LoanV4, OfferV4, RenegotiationV4 } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { multiSourceLoanABI as multiSourceLoanABIV4 } from '@/generated/blockchain/v4';\nimport { EmitLoanArgs } from '@/gondi';\nimport { millisToSeconds, SECONDS_IN_MIN } from '@/utils/dates';\nimport { getMslLoanId } from '@/utils/loan';\nimport { sumBy } from '@/utils/number';\nimport { CONTRACT_DOMAIN_NAME } from '@/utils/string';\n\nimport { BaseContract } from './BaseContract';\nimport { MslV5 } from './MslV5';\nimport { MslV6 } from './MslV6';\n\nexport class MslV4 extends BaseContract<typeof multiSourceLoanABIV4> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const {\n      MultiSourceLoan: { v4 },\n    } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: v4,\n      abi: multiSourceLoanABIV4,\n    });\n  }\n\n  private getDomain() {\n    return {\n      name: CONTRACT_DOMAIN_NAME,\n      version: '1',\n      chainId: this.wallet.chain.id,\n      verifyingContract: this.address,\n    };\n  }\n\n  async signOffer({ structToSign }: { structToSign: OfferV4 }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'LoanOffer',\n      types: {\n        LoanOffer: [\n          { name: 'offerId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'borrower', type: 'address' },\n          { name: 'capacity', type: 'uint256' },\n          { name: 'signer', type: 'address' },\n          { name: 'requiresLiquidation', type: 'bool' },\n          { name: 'nftCollateralAddress', type: 'address' },\n          { name: 'nftCollateralTokenId', type: 'uint256' },\n          { name: 'principalAddress', type: 'address' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n          { name: 'validators', type: 'OfferValidator[]' },\n        ],\n        OfferValidator: [\n          { name: 'validator', type: 'address' },\n          { name: 'arguments', type: 'bytes' },\n        ],\n      },\n      message: structToSign,\n    });\n  }\n\n  async signRenegotiationOffer({ structToSign }: { structToSign: RenegotiationV4 }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'RenegotiationOffer',\n      types: {\n        RenegotiationOffer: [\n          { name: 'renegotiationId', type: 'uint256' },\n          { name: 'loanId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'signer', type: 'address' },\n          { name: 'targetPrincipal', type: 'uint256[]' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n          { name: 'strictImprovement', type: 'bool' },\n        ],\n      },\n      message: structToSign,\n    });\n  }\n\n  async cancelOffer({ id }: { id: bigint }) {\n    const txHash = await this.safeContractWrite.cancelOffer([this.wallet.account.address, id]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.OfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelAllOffers({ minId }: { minId: bigint }) {\n    const txHash = await this.safeContractWrite.cancelAllOffers([\n      this.wallet.account.address,\n      minId,\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.AllOffersCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offers not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelRefinanceOffer({ id }: { id: bigint }) {\n    const txHash = await this.safeContractWrite.cancelRenegotiationOffer([\n      this.wallet.account.address,\n      id,\n    ]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.RenegotiationOfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelAllRenegotiations({ minId }: { minId: bigint }) {\n    const txHash = await this.safeContractWrite.cancelAllRenegotiationOffers([\n      this.wallet.account.address,\n      minId,\n    ]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.RenegotiationOfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  private mapEmitLoanToMslEmitLoanArgs({ offerExecution, tokenId }: EmitLoanArgs) {\n    const { offer, lenderOfferSignature } = offerExecution[0];\n    const mappedOffer = {\n      ...offer,\n      signer: offer.signerAddress ?? zeroAddress,\n      lender: offer.lenderAddress,\n      borrower: offer.borrowerAddress,\n      validators: offer.offerValidators,\n      requiresLiquidation: !!offer.requiresLiquidation,\n    };\n    return [mappedOffer, tokenId, lenderOfferSignature, false] as const;\n  }\n\n  async emitLoan(emitArgs: EmitLoanArgs) {\n    const mslEmitArgs = this.mapEmitLoanToMslEmitLoanArgs(emitArgs);\n    const txHash = await this.safeContractWrite.emitLoan(mslEmitArgs);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanEmitted();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not emitted');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.loanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.loanId,\n          offerId: `${this.contract.address.toLowerCase()}.${mslEmitArgs[0].lender.toLowerCase()}.${\n            args.offerId\n          }`,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async repayLoan({\n    loan,\n    nftReceiver,\n    loanId,\n  }: {\n    loan: LoanV4;\n    loanId: bigint;\n    nftReceiver?: Address;\n  }) {\n    const receiver = nftReceiver ?? this.wallet.account.address;\n\n    const txHash = await this.safeContractWrite.repayLoan([receiver, loanId, loan, false]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRepaid();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not repaid');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  getRemainingLockupSeconds() {\n    return 0;\n  }\n\n  isEndLockedUp() {\n    return false;\n  }\n\n  async refinanceBatch({\n    renegotiationId,\n    refinancings,\n  }: {\n    renegotiationId: bigint;\n    refinancings: {\n      loan: LoanV4;\n      newAprBps: bigint;\n      sources: {\n        source: LoanV4['source'][number];\n        refinancingPrincipal: bigint;\n      }[];\n    }[];\n  }) {\n    const offers: RenegotiationV4[] = [];\n    const loans: LoanV4[] = [];\n\n    // Generate (renegotiation offer, loan) pairs\n    refinancings.forEach(({ loan, sources, newAprBps }, index) => {\n      const targetPrincipal = loan.source.map(({ principalAmount, loanId }) => {\n        const refinancingSource = sources.find(({ source }) => source.loanId === loanId);\n        return principalAmount - (refinancingSource?.refinancingPrincipal ?? 0n);\n      });\n      const refinancingPrincipalAmount = sumBy(sources, 'refinancingPrincipal') ?? 0n;\n\n      offers.push({\n        renegotiationId: renegotiationId + BigInt(index),\n        loanId: getMslLoanId(loan),\n        lender: this.wallet.account.address,\n        fee: 0n,\n        signer: this.wallet.account.address,\n        targetPrincipal,\n        principalAmount: refinancingPrincipalAmount,\n        aprBps: newAprBps,\n        expirationTime: BigInt(millisToSeconds(Date.now()) + SECONDS_IN_MIN),\n        duration: 0n,\n        strictImprovement: true,\n      });\n      loans.push(loan);\n    });\n\n    const txHash = await this.safeContractWrite.refinancePartialBatch([offers, loans]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinanced();\n        const events = filterLogs(receipt, filter);\n        if (events.length !== refinancings.length) throw new Error('Loan not refinanced');\n\n        const results = events.map(({ args }) => args);\n        return { results, ...receipt };\n      },\n    };\n  }\n\n  async refinanceFullLoan({\n    offer,\n    signature,\n    loan,\n  }: {\n    offer: RenegotiationV4;\n    signature: Hash;\n    loan: LoanV4;\n  }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.refinanceFull([offer, loan, signature]),\n    });\n  }\n\n  async refinancePartialLoan({ offer, loan }: { offer: RenegotiationV4; loan: LoanV4 }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.refinancePartial([offer, loan]),\n    });\n  }\n\n  private async executeRenegotiation({\n    offer,\n    executeRenegotiationTxn,\n  }: {\n    offer: RenegotiationV4;\n    executeRenegotiationTxn: () => Promise<Hash>;\n  }) {\n    const txHash = await executeRenegotiationTxn();\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinanced();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not refinanced');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.newLoanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.newLoanId,\n          renegotiationId: `${this.contract.address.toLowerCase()}.${offer.lender.toLowerCase()}.${\n            args.renegotiationId\n          }`,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async addTranche(): ReturnType<MslV6['addTranche']> {\n    throw new Error('Not implemented for V1');\n  }\n\n  async refinanceFromOffers(): ReturnType<MslV6['refinanceFromOffers']> {\n    throw new Error('Not implemented for V1');\n  }\n\n  async delegateMulticall(): ReturnType<MslV5['delegateMulticall']> {\n    throw new Error('Not implemented for V1');\n  }\n\n  async delegate(): ReturnType<MslV5['delegate']> {\n    throw new Error('Not implemented for V1');\n  }\n\n  async revokeDelegate(): ReturnType<MslV5['revokeDelegate']> {\n    throw new Error('Not implemented for V1');\n  }\n\n  async revokeDelegationsAndEmitLoan(): ReturnType<MslV5['revokeDelegationsAndEmitLoan']> {\n    throw new Error('Not implemented for V1');\n  }\n  async liquidateLoan({ loan, loanId }: { loan: LoanV4; loanId: bigint }) {\n    const txHash = await this.safeContractWrite.liquidateLoan([loanId, loan]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filterForeclosed = await this.contract.createEventFilter.LoanForeclosed();\n        const filterSentToLiquidator = await this.contract.createEventFilter.LoanSentToLiquidator();\n        const foreclosedEvents = filterLogs(receipt, filterForeclosed);\n        const sentToLiquidatorEvents = filterLogs(receipt, filterSentToLiquidator);\n        if (foreclosedEvents.length === 0 && sentToLiquidatorEvents.length === 0)\n          throw new Error('Loan not liquidated');\n        return {\n          ...(foreclosedEvents?.[0]?.args ?? sentToLiquidatorEvents?.[0]?.args),\n          ...receipt,\n        };\n      },\n    };\n  }\n}\n", "import { Address, isAddress } from 'viem';\n\nimport { LoanV4, LoanV5, LoanV6, zeroAddress } from '@/blockchain';\nimport * as model from '@/model';\nimport { millisToSeconds, secondsToMillis, toDate } from '@/utils/dates';\nimport { maxBy } from '@/utils/number';\nimport { areSameAddress } from '@/utils/string';\nimport { Optional } from '@/utils/types';\n\nexport const renegotiationToMslRenegotiation = (\n  renegotiation: model.RenegotiationOffer,\n  loanId: bigint,\n) => ({\n  ...renegotiation,\n  loanId,\n  strictImprovement: renegotiation.strictImprovement ?? false,\n  lender: renegotiation.lenderAddress,\n  signer: renegotiation.signerAddress ?? zeroAddress,\n  fee: renegotiation.feeAmount,\n  trancheIndex: renegotiation.trancheIndex ?? [],\n  targetPrincipal: renegotiation.targetPrincipal ?? [],\n});\n\nexport type LoanToMslLoanType =\n  | Optional<LoanV4, 'nftCollateralAddress'>\n  | Optional<LoanV5, 'nftCollateralAddress'>\n  | Optional<LoanV6, 'nftCollateralAddress'>;\n\nexport const loanToMslLoan = (loan: LoanToMslLoanType) => {\n  const nftCollateralAddress = loan.nftCollateralAddress ?? zeroAddress;\n  if (areSameAddress(zeroAddress, nftCollateralAddress) || !isAddress(nftCollateralAddress)) {\n    throw new Error('nftCollateralAddress is required');\n  }\n  let source;\n  if ('source' in loan) {\n    // Filling floor in sources to match types, but it's unused by V1/V2\n    source = loan.source.map((s) => ({\n      ...s,\n      floor: 0n,\n    }));\n  } else {\n    source = loan.tranche;\n  }\n\n  let protocolFee;\n  if ('protocolFee' in loan) {\n    protocolFee = loan.protocolFee;\n  } else {\n    protocolFee = 0n;\n  }\n\n  // Patch start and duration to match contract values\n  const dateStartTime = toDate(loan.startTime);\n  const dateContractStartTime =\n    'contractStartTime' in loan ? toDate(loan.contractStartTime) : dateStartTime;\n  const millisDelta = dateContractStartTime.getTime() - dateStartTime.getTime();\n  const duration = loan.duration - BigInt(millisToSeconds(millisDelta));\n  const startTime = BigInt(millisToSeconds(dateContractStartTime.getTime()));\n\n  return {\n    ...loan,\n    startTime,\n    contractStartTime: startTime,\n    duration,\n    nftCollateralAddress,\n    source,\n    tranche: source,\n    protocolFee,\n  };\n};\n\nexport const generateFakeRenegotiationInput = ({\n  loanId,\n  loan,\n  trancheIndex,\n  address,\n}: {\n  loanId: string;\n  loan: LoanToMslLoanType;\n  trancheIndex: boolean;\n  address: Address;\n}) => {\n  const mslLoan = loanToMslLoan(loan);\n  const options = trancheIndex\n    ? {\n        trancheIndex: mslLoan.source.map((_, i) => BigInt(i)),\n        targetPrincipal: [],\n      }\n    : {\n        trancheIndex: [],\n        targetPrincipal: mslLoan.source.map(() => 0n),\n      };\n  return {\n    loanId,\n    lenderAddress: address,\n    signerAddress: address,\n    expirationTime: BigInt(millisToSeconds(Date.now())),\n    aprBps: 0n,\n    feeAmount: 0n,\n    duration: mslLoan.duration,\n    principalAmount: mslLoan.principalAmount,\n    ...options,\n  };\n};\n\nexport const getMslLoanId = (loan: LoanToMslLoanType) => {\n  const mslLoan = loanToMslLoan(loan);\n  return maxBy(mslLoan.source, 'loanId') ?? 0n;\n};\n\nexport const getRemainingSeconds = (loan: Pick<LoanToMslLoanType, 'startTime' | 'duration'>) => {\n  const now = new Date();\n  const finishDate = new Date(secondsToMillis(loan.startTime) + secondsToMillis(loan.duration));\n  if (finishDate.getTime() < now.getTime()) return 0;\n  return millisToSeconds(finishDate.getTime() - now.getTime());\n};\n", "import { Address, encodeFunctionData, Hash } from 'viem';\n\nimport {\n  filterLogs,\n  LoanV5,\n  OfferV5,\n  RenegotiationV5,\n  REORG_SAFETY_BUFFER,\n  zeroHash,\n} from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { multiSourceLoanABI as multiSourceLoanABIV5 } from '@/generated/blockchain/v5';\nimport { EmitLoanArgs } from '@/gondi';\nimport { millisToSeconds, SECONDS_IN_DAY } from '@/utils/dates';\nimport { getMslLoanId, getRemainingSeconds } from '@/utils/loan';\nimport { bpsToPercentage, sumBy } from '@/utils/number';\nimport { CONTRACT_DOMAIN_NAME } from '@/utils/string';\n\nimport { BaseContract } from './BaseContract';\nimport { MslV6 } from './MslV6';\n\nexport class MslV5 extends BaseContract<typeof multiSourceLoanABIV5> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const {\n      MultiSourceLoan: { v5 },\n    } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: v5,\n      abi: multiSourceLoanABIV5,\n    });\n  }\n\n  private getDomain() {\n    return {\n      name: CONTRACT_DOMAIN_NAME,\n      version: '2',\n      chainId: this.wallet.chain.id,\n      verifyingContract: this.address,\n    };\n  }\n\n  async signOffer({ structToSign }: { structToSign: OfferV5 }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'LoanOffer',\n      types: {\n        LoanOffer: [\n          { name: 'offerId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'borrower', type: 'address' },\n          { name: 'capacity', type: 'uint256' },\n          { name: 'nftCollateralAddress', type: 'address' },\n          { name: 'nftCollateralTokenId', type: 'uint256' },\n          { name: 'principalAddress', type: 'address' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n          { name: 'validators', type: 'OfferValidator[]' },\n        ],\n        OfferValidator: [\n          { name: 'validator', type: 'address' },\n          { name: 'arguments', type: 'bytes' },\n        ],\n      },\n      message: structToSign,\n    });\n  }\n\n  async signRenegotiationOffer({ structToSign }: { structToSign: RenegotiationV5 }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'RenegotiationOffer',\n      types: {\n        RenegotiationOffer: [\n          { name: 'renegotiationId', type: 'uint256' },\n          { name: 'loanId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'targetPrincipal', type: 'uint256[]' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n        ],\n      },\n      message: structToSign,\n    });\n  }\n\n  async cancelOffer({ id }: { id: bigint }) {\n    const txHash = await this.safeContractWrite.cancelOffer([id]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.OfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelAllOffers({ minId }: { minId: bigint }) {\n    const txHash = await this.safeContractWrite.cancelAllOffers([minId]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.AllOffersCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offers not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelRefinanceOffer({ id }: { id: bigint }) {\n    const txHash = await this.safeContractWrite.cancelRenegotiationOffer([id]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.RenegotiationOfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Renegotiation offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelAllRenegotiations({ minId }: { minId: bigint }) {\n    const txHash = await this.safeContractWrite.cancelAllRenegotiationOffers([minId]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.AllRenegotiationOffersCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Renegotiation offers not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  private mapEmitLoanToMslEmitLoanArgs({ offerExecution, tokenId, expirationTime }: EmitLoanArgs) {\n    const { offer, amount, lenderOfferSignature } = offerExecution[0];\n    const executionData = {\n      offer: {\n        ...offer,\n        lender: offer.lenderAddress,\n        borrower: offer.borrowerAddress,\n        validators: offer.offerValidators,\n      },\n      tokenId,\n      amount: amount ?? offer.principalAmount,\n      expirationTime: expirationTime ?? BigInt(millisToSeconds(Date.now()) + SECONDS_IN_DAY),\n      callbackData: '0x' as Hash, // No callback data is expected here, only for BNPL [Levearage call]\n    };\n\n    return {\n      executionData,\n      lender: offer.lenderAddress,\n      borrower: this.wallet.account.address,\n      lenderOfferSignature,\n      borrowerOfferSignature: '0x' as Hash, // No signature data is expected here, only for BNPL [Levearage call]\n    };\n  }\n\n  async emitLoan(emitArgs: EmitLoanArgs) {\n    const mslEmitArgs = this.mapEmitLoanToMslEmitLoanArgs(emitArgs);\n    const txHash = await this.safeContractWrite.emitLoan([mslEmitArgs]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanEmitted();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not emitted');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.loanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.loanId,\n          offerId: `${this.contract.address.toLowerCase()}.${mslEmitArgs.lender.toLowerCase()}.${\n            args.offerId\n          }`,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async revokeDelegationsAndEmitLoan({\n    delegations,\n    emit,\n  }: {\n    delegations: Address[];\n    emit: EmitLoanArgs;\n  }) {\n    if (delegations.length === 0) throw new Error('At least one delegation must be revoked');\n\n    const mslEmitArgs = this.mapEmitLoanToMslEmitLoanArgs(emit);\n    const { tokenId, offer } = mslEmitArgs.executionData;\n    const encodedRevokeDelegations = delegations.map((delegation) =>\n      encodeFunctionData({\n        abi: multiSourceLoanABIV5,\n        functionName: 'revokeDelegate',\n        args: [delegation, offer.nftCollateralAddress, tokenId],\n      }),\n    );\n\n    const encodedEmitLoan = encodeFunctionData({\n      abi: multiSourceLoanABIV5,\n      functionName: 'emitLoan',\n      args: [mslEmitArgs],\n    });\n\n    const txHash = await this.safeContractWrite.multicall([\n      [...encodedRevokeDelegations, encodedEmitLoan],\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const revokeFilter = await this.contract.createEventFilter.RevokeDelegate();\n        const revokeEvents = filterLogs(receipt, revokeFilter);\n        if (revokeEvents.length !== delegations.length)\n          throw new Error('Revoke delegations failed');\n\n        const emitFilter = await this.contract.createEventFilter.LoanEmitted();\n        const emitEvents = filterLogs(receipt, emitFilter);\n        if (emitEvents.length === 0) throw new Error('Loan not emitted');\n\n        const results = [\n          ...revokeEvents.map(({ args }) => args),\n          ...emitEvents.map(({ args }) => args),\n        ];\n        const emitLoanArgs = emitEvents[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${emitLoanArgs.loanId}`,\n            ...emitLoanArgs.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: emitLoanArgs.loanId,\n          ...receipt,\n          results,\n        };\n      },\n    };\n  }\n\n  async repayLoan({ loan, loanId }: { loan: LoanV5; loanId: bigint }) {\n    const signableRepaymentData = {\n      loanId,\n      callbackData: '0x' as Hash, // No callback data is expected here, only for BNPL [Levearage call]\n      shouldDelegate: false, // No need to delegate\n    };\n    const txHash = await this.safeContractWrite.repayLoan([\n      {\n        data: signableRepaymentData,\n        loan,\n        borrowerSignature: '0x', // No signature data is expected here, only for BNPL [Levearage call]\n      },\n    ]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRepaid();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not repaid');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async getRemainingLockupSeconds({ loan }: { loan: LoanV5 }) {\n    const newestSource = loan.source[0];\n    const loanEndDate = loan.startTime + loan.duration;\n    const newestSourceDuration = loanEndDate - newestSource.startTime;\n\n    const lockPeriodBps = await this.contract.read.getMinLockPeriod();\n    const lockPercentage = bpsToPercentage(lockPeriodBps);\n\n    const lockupTimeSeconds = Math.ceil(Number(newestSourceDuration) * lockPercentage);\n\n    const ellapsedSeconds = Math.ceil(millisToSeconds(Date.now()) - Number(newestSource.startTime));\n\n    if (ellapsedSeconds >= lockupTimeSeconds) return 0;\n    return lockupTimeSeconds - ellapsedSeconds;\n  }\n\n  isEndLockedUp() {\n    return false;\n  }\n\n  async refinanceBatch({\n    renegotiationId,\n    refinancings,\n  }: {\n    renegotiationId: bigint;\n    refinancings: {\n      loan: LoanV5;\n      newAprBps: bigint;\n      sources: {\n        source: LoanV5['source'][number];\n        refinancingPrincipal: bigint;\n      }[];\n    }[];\n  }) {\n    // Generate multicall encoded function data for (renegotiation offer, loan) pairs\n    const data = refinancings.map(({ loan, sources, newAprBps }, index) => {\n      const targetPrincipal = loan.source.map(({ principalAmount, loanId }) => {\n        const refinancingSource = sources.find(({ source }) => source.loanId === loanId);\n        return principalAmount - (refinancingSource?.refinancingPrincipal ?? 0n);\n      });\n      const refinancingPrincipalAmount = sumBy(sources, 'refinancingPrincipal') ?? 0n;\n\n      const offer = {\n        renegotiationId: renegotiationId + BigInt(index),\n        loanId: getMslLoanId(loan),\n        lender: this.wallet.account.address,\n        fee: 0n,\n        targetPrincipal,\n        principalAmount: refinancingPrincipalAmount,\n        aprBps: newAprBps,\n        expirationTime: BigInt(millisToSeconds(Date.now())) + REORG_SAFETY_BUFFER,\n        duration: BigInt(getRemainingSeconds(loan)) + REORG_SAFETY_BUFFER,\n      };\n\n      const isFullRefinance = refinancingPrincipalAmount === loan.principalAmount;\n      if (isFullRefinance) {\n        return encodeFunctionData({\n          abi: multiSourceLoanABIV5,\n          functionName: 'refinanceFull',\n          args: [offer, loan, zeroHash],\n        });\n      }\n      return encodeFunctionData({\n        abi: multiSourceLoanABIV5,\n        functionName: 'refinancePartial',\n        args: [{ ...offer, duration: 0n }, loan],\n      });\n    });\n\n    const txHash = await this.safeContractWrite.multicall([data]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinanced();\n        const events = filterLogs(receipt, filter);\n        if (events.length !== refinancings.length) throw new Error('Loan not refinanced');\n\n        const results = events.map(({ args }) => args);\n        return { results, ...receipt };\n      },\n    };\n  }\n\n  async refinanceFullLoan({\n    offer,\n    signature,\n    loan,\n  }: {\n    offer: RenegotiationV5;\n    signature: Hash;\n    loan: LoanV5;\n  }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.refinanceFull([offer, loan, signature]),\n    });\n  }\n\n  async refinancePartialLoan({ offer, loan }: { offer: RenegotiationV5; loan: LoanV5 }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.refinancePartial([offer, loan]),\n    });\n  }\n\n  private async executeRenegotiation({\n    offer,\n    executeRenegotiationTxn,\n  }: {\n    offer: RenegotiationV5;\n    executeRenegotiationTxn: () => Promise<Hash>;\n  }) {\n    const txHash = await executeRenegotiationTxn();\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinanced();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not refinanced');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.newLoanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.newLoanId,\n          renegotiationId: `${this.contract.address.toLowerCase()}.${offer.lender.toLowerCase()}.${\n            args.renegotiationId\n          }`,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async addTranche(): ReturnType<MslV6['addTranche']> {\n    throw new Error('Not implemented for V2');\n  }\n\n  async refinanceFromOffers(): ReturnType<MslV6['refinanceFromOffers']> {\n    throw new Error('Not implemented for V2');\n  }\n\n  async delegateMulticall(delegations: Parameters<MslV5['delegate']>[0][]) {\n    if (delegations.length === 0) throw new Error('At least one delegation must be revoked');\n\n    const txHash = await this.safeContractWrite.multicall([\n      delegations.map((delegation) =>\n        encodeFunctionData({\n          abi: multiSourceLoanABIV5,\n          functionName: 'delegate',\n          args: [\n            delegation.loanId,\n            delegation.loan,\n            delegation.to,\n            delegation.rights ?? zeroHash,\n            delegation.enable,\n          ],\n        }),\n      ),\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.Delegated();\n        const events = filterLogs(receipt, filter);\n\n        if (events.length !== delegations.length) throw new Error('Delegate multicall failed');\n\n        return {\n          ...receipt,\n          results: events.map(({ args }) => args),\n        };\n      },\n    };\n  }\n\n  async delegate({\n    loan,\n    loanId,\n    to,\n    rights = zeroHash,\n    enable,\n  }: {\n    loan: LoanV5;\n    loanId: bigint;\n    to: Address;\n    rights?: Hash;\n    enable: boolean;\n  }) {\n    const txHash = await this.safeContractWrite.delegate([loanId, loan, to, rights, enable]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.Delegated();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Token not delegated');\n        const args = events[0].args;\n        return {\n          loan: {\n            ...loan,\n            loanId,\n            contractAddress: this.contract.address,\n          },\n          value: args.value,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async revokeDelegate({\n    to,\n    collection,\n    tokenId,\n  }: {\n    to: Address;\n    collection: Address;\n    tokenId: bigint;\n  }) {\n    const txHash = await this.safeContractWrite.revokeDelegate([to, collection, tokenId]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.RevokeDelegate();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Token delegation not revoked');\n        const args = events[0].args;\n        return { ...args, ...receipt };\n      },\n    };\n  }\n\n  async liquidateLoan({ loan, loanId }: { loan: LoanV5; loanId: bigint }) {\n    const txHash = await this.safeContractWrite.liquidateLoan([loanId, loan]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filterForeclosed = await this.contract.createEventFilter.LoanForeclosed();\n        const filterSentToLiquidator = await this.contract.createEventFilter.LoanSentToLiquidator();\n        const foreclosedEvents = filterLogs(receipt, filterForeclosed);\n        const sentToLiquidatorEvents = filterLogs(receipt, filterSentToLiquidator);\n        if (foreclosedEvents.length === 0 && sentToLiquidatorEvents.length === 0)\n          throw new Error('Loan not liquidated');\n        return {\n          ...(foreclosedEvents?.[0]?.args ?? sentToLiquidatorEvents?.[0]?.args),\n          ...receipt,\n        };\n      },\n    };\n  }\n}\n", "import { Address, encodeFunctionData, Hash } from 'viem';\n\nimport {\n  filterLogs,\n  LoanV6,\n  OfferV6,\n  RenegotiationV6,\n  REORG_SAFETY_BUFFER,\n  zeroHash,\n} from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { multiSourceLoanAbi as multiSourceLoanAbiV6 } from '@/generated/blockchain/v6';\nimport { EmitLoanArgs } from '@/gondi';\nimport { millisToSeconds, SECONDS_IN_DAY, secondsToMillis } from '@/utils/dates';\nimport { getMslLoanId, getRemainingSeconds } from '@/utils/loan';\nimport { bpsToPercentage, sumBy } from '@/utils/number';\nimport { CONTRACT_DOMAIN_NAME } from '@/utils/string';\n\nimport { BaseContract } from './BaseContract';\n\nexport class MslV6 extends BaseContract<typeof multiSourceLoanAbiV6> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const {\n      MultiSourceLoan: { v6 },\n    } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: v6,\n      abi: multiSourceLoanAbiV6,\n    });\n  }\n\n  private getDomain() {\n    return {\n      name: CONTRACT_DOMAIN_NAME,\n      version: '3',\n      chainId: this.wallet.chain.id,\n      verifyingContract: this.address,\n    };\n  }\n\n  async signOffer({ structToSign }: { structToSign: OfferV6 }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'LoanOffer',\n      types: {\n        LoanOffer: [\n          { name: 'offerId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'capacity', type: 'uint256' },\n          { name: 'nftCollateralAddress', type: 'address' },\n          { name: 'nftCollateralTokenId', type: 'uint256' },\n          { name: 'principalAddress', type: 'address' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n          { name: 'maxSeniorRepayment', type: 'uint256' },\n          { name: 'validators', type: 'OfferValidator[]' },\n        ],\n        OfferValidator: [\n          { name: 'validator', type: 'address' },\n          { name: 'arguments', type: 'bytes' },\n        ],\n      },\n      message: structToSign,\n    });\n  }\n\n  async signRenegotiationOffer({ structToSign }: { structToSign: RenegotiationV6 }) {\n    return this.wallet.signTypedData({\n      domain: this.getDomain(),\n      primaryType: 'RenegotiationOffer',\n      types: {\n        RenegotiationOffer: [\n          { name: 'renegotiationId', type: 'uint256' },\n          { name: 'loanId', type: 'uint256' },\n          { name: 'lender', type: 'address' },\n          { name: 'fee', type: 'uint256' },\n          { name: 'trancheIndex', type: 'uint256[]' },\n          { name: 'principalAmount', type: 'uint256' },\n          { name: 'aprBps', type: 'uint256' },\n          { name: 'expirationTime', type: 'uint256' },\n          { name: 'duration', type: 'uint256' },\n        ],\n      },\n      message: structToSign,\n    });\n  }\n\n  async cancelOffer({ id }: { id: bigint }) {\n    const txHash = await this.safeContractWrite.cancelOffer([id]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.OfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelAllOffers({ minId }: { minId: bigint }) {\n    const txHash = await this.safeContractWrite.cancelAllOffers([minId]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.AllOffersCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Offers not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelRefinanceOffer({ id }: { id: bigint }) {\n    const txHash = await this.safeContractWrite.cancelRenegotiationOffer([id]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.RenegotiationOfferCancelled();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Renegotiation offer not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async cancelAllRenegotiations(_: { minId: bigint }) {\n    throw new Error('Not implemented for V3');\n  }\n\n  private mapEmitLoanToMslEmitLoanArgs({\n    offerExecution,\n    tokenId,\n    duration,\n    principalReceiver,\n    expirationTime,\n  }: EmitLoanArgs) {\n    const executionData = {\n      offerExecution: offerExecution.map(({ offer, amount, ...rest }) => ({\n        ...rest,\n        amount: amount ?? offer.principalAmount,\n        offer: {\n          ...offer,\n          lender: offer.lenderAddress,\n          validators: offer.offerValidators,\n        },\n      })),\n      tokenId,\n      duration,\n      expirationTime: expirationTime ?? BigInt(millisToSeconds(Date.now()) + SECONDS_IN_DAY),\n      principalReceiver: principalReceiver ?? this.wallet.account.address,\n      callbackData: '0x' as Hash, // No callback data is expected here, only for BNPL [Levearage call]\n    };\n\n    return {\n      executionData,\n      borrower: this.wallet.account.address,\n      borrowerOfferSignature: '0x' as Hash, // No signature data is expected here, only for BNPL [Levearage call]\n    };\n  }\n\n  async emitLoan(emitArgs: EmitLoanArgs) {\n    const mslEmitArgs = this.mapEmitLoanToMslEmitLoanArgs(emitArgs);\n    const txHash = await this.safeContractWrite.emitLoan([mslEmitArgs]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanEmitted();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not emitted');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.loanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.loanId,\n          offerIds: mslEmitArgs.executionData.offerExecution.map(\n            ({ offer }) =>\n              `${this.contract.address.toLowerCase()}.${offer.lender.toLowerCase()}.${\n                offer.offerId\n              }`,\n          ),\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async revokeDelegationsAndEmitLoan({\n    delegations,\n    emit,\n  }: {\n    delegations: Address[];\n    emit: EmitLoanArgs;\n  }) {\n    if (delegations.length === 0) throw new Error('At least one delegation must be revoked');\n\n    const mslEmitArgs = this.mapEmitLoanToMslEmitLoanArgs(emit);\n    const { tokenId, offerExecution } = mslEmitArgs.executionData;\n    const encodedRevokeDelegations = delegations.map((delegation) =>\n      encodeFunctionData({\n        abi: multiSourceLoanAbiV6,\n        functionName: 'revokeDelegate',\n        args: [delegation, offerExecution[0].offer.nftCollateralAddress, tokenId],\n      }),\n    );\n\n    const encodedEmitLoan = encodeFunctionData({\n      abi: multiSourceLoanAbiV6,\n      functionName: 'emitLoan',\n      args: [mslEmitArgs],\n    });\n\n    const txHash = await this.safeContractWrite.multicall([\n      [...encodedRevokeDelegations, encodedEmitLoan],\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const revokeFilter = await this.contract.createEventFilter.RevokeDelegate();\n        const revokeEvents = filterLogs(receipt, revokeFilter);\n        if (revokeEvents.length !== delegations.length)\n          throw new Error('Revoke delegations failed');\n\n        const emitFilter = await this.contract.createEventFilter.LoanEmitted();\n        const emitEvents = filterLogs(receipt, emitFilter);\n        if (emitEvents.length === 0) throw new Error('Loan not emitted');\n\n        const results = [\n          ...revokeEvents.map(({ args }) => args),\n          ...emitEvents.map(({ args }) => args),\n        ];\n        const emitLoanArgs = emitEvents[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${emitLoanArgs.loanId}`,\n            ...emitLoanArgs.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: emitLoanArgs.loanId,\n          ...receipt,\n          results,\n        };\n      },\n    };\n  }\n\n  async repayLoan({ loan, loanId }: { loan: LoanV6; loanId: bigint }) {\n    const signableRepaymentData = {\n      loanId,\n      callbackData: '0x' as Hash, // No callback data is expected here, only for BNPL [Levearage call]\n      shouldDelegate: false, // No need to delegate\n    };\n    const txHash = await this.safeContractWrite.repayLoan([\n      {\n        data: signableRepaymentData,\n        loan,\n        borrowerSignature: '0x', // No signature data is expected here, only for BNPL [Levearage call]\n      },\n    ]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRepaid();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not repaid');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async getRemainingLockupSeconds({ loan }: { loan: LoanV6 }) {\n    const newestSource = loan.tranche[loan.tranche.length - 1];\n    const loanEndDate = loan.startTime + loan.duration;\n    const newestSourceDuration = loanEndDate - newestSource.startTime;\n\n    const lockPeriodBps = await this.contract.read.getMinLockPeriod();\n    const lockPercentage = bpsToPercentage(lockPeriodBps);\n\n    const lockupTimeSeconds = Math.ceil(Number(newestSourceDuration) * lockPercentage);\n\n    const ellapsedSeconds = Math.ceil(millisToSeconds(Date.now()) - Number(newestSource.startTime));\n\n    if (ellapsedSeconds >= lockupTimeSeconds) return 0;\n    return lockupTimeSeconds - ellapsedSeconds;\n  }\n\n  async isEndLockedUp({ loan }: { loan: LoanV6 }) {\n    const lockPeriodBps = await this.contract.read.getMinLockPeriod();\n    const lockPercentage = bpsToPercentage(lockPeriodBps);\n\n    const loanEndDate = Number(loan.startTime + loan.duration);\n    const endLockupSeconds = Math.ceil(Number(loan.duration) * lockPercentage);\n\n    return Date.now() > secondsToMillis(loanEndDate - endLockupSeconds);\n  }\n\n  async refinanceBatch({\n    renegotiationId,\n    refinancings,\n  }: {\n    renegotiationId: bigint;\n    refinancings: {\n      loan: LoanV6;\n      newAprBps: bigint;\n      sources: {\n        source: LoanV6['tranche'][number] & { loanIndex: number };\n        refinancingPrincipal: bigint;\n      }[];\n    }[];\n  }) {\n    // Generate multicall encoded function data for (renegotiation offer, loan) pairs\n    const data = refinancings.map(({ loan, sources, newAprBps }, index) => {\n      const trancheIndex = sources.map(({ source }) => BigInt(source.loanIndex));\n      const refinancingPrincipalAmount = sumBy(sources, 'refinancingPrincipal') ?? 0n;\n\n      const offer = {\n        renegotiationId: renegotiationId + BigInt(index),\n        loanId: getMslLoanId(loan),\n        lender: this.wallet.account.address,\n        fee: 0n,\n        trancheIndex,\n        principalAmount: refinancingPrincipalAmount,\n        aprBps: newAprBps,\n        expirationTime: BigInt(millisToSeconds(Date.now())) + REORG_SAFETY_BUFFER,\n        duration: BigInt(getRemainingSeconds(loan)) + REORG_SAFETY_BUFFER,\n      };\n\n      const isFullRefinance = refinancingPrincipalAmount === loan.principalAmount;\n      if (isFullRefinance) {\n        return encodeFunctionData({\n          abi: multiSourceLoanAbiV6,\n          functionName: 'refinanceFull',\n          args: [offer, loan, zeroHash],\n        });\n      }\n      return encodeFunctionData({\n        abi: multiSourceLoanAbiV6,\n        functionName: 'refinancePartial',\n        args: [offer, loan],\n      });\n    });\n\n    const txHash = await this.safeContractWrite.multicall([data]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinanced();\n        const events = filterLogs(receipt, filter);\n        if (events.length !== refinancings.length) throw new Error('Loan not refinanced');\n\n        const results = events.map(({ args }) => args);\n        return { results, ...receipt };\n      },\n    };\n  }\n\n  async refinanceFullLoan({\n    offer,\n    signature,\n    loan,\n  }: {\n    offer: RenegotiationV6;\n    signature: Hash;\n    loan: LoanV6;\n  }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.refinanceFull([offer, loan, signature]),\n    });\n  }\n\n  async refinancePartialLoan({ offer, loan }: { offer: RenegotiationV6; loan: LoanV6 }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.refinancePartial([offer, loan]),\n    });\n  }\n\n  async addTranche({\n    offer,\n    signature,\n    loan,\n  }: {\n    offer: RenegotiationV6;\n    signature: Hash;\n    loan: LoanV6;\n  }) {\n    return this.executeRenegotiation({\n      offer,\n      executeRenegotiationTxn: () => this.safeContractWrite.addNewTranche([offer, loan, signature]),\n    });\n  }\n\n  async refinanceFromOffers({\n    loan,\n    loanId,\n    executionData,\n  }: {\n    loan: LoanV6;\n    loanId: bigint;\n    executionData: EmitLoanArgs;\n  }) {\n    const mslEmitArgs = this.mapEmitLoanToMslEmitLoanArgs(executionData);\n    const txHash = await this.safeContractWrite.refinanceFromLoanExecutionData([\n      loanId,\n      loan,\n      mslEmitArgs,\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinancedFromNewOffers();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('LoanRefinancedFromNewOffers not emitted');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.newLoanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.newLoanId,\n          offerIds: mslEmitArgs.executionData.offerExecution.map(\n            ({ offer }) =>\n              `${this.contract.address.toLowerCase()}.${offer.lender.toLowerCase()}.${\n                offer.offerId\n              }`,\n          ),\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  private async executeRenegotiation({\n    offer,\n    executeRenegotiationTxn,\n  }: {\n    offer: RenegotiationV6;\n    executeRenegotiationTxn: () => Promise<Hash>;\n  }) {\n    const txHash = await executeRenegotiationTxn();\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.LoanRefinanced();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Loan not refinanced');\n        const args = events[0].args;\n        return {\n          loan: {\n            id: `${this.contract.address.toLowerCase()}.${args.newLoanId}`,\n            ...args.loan,\n            contractAddress: this.contract.address,\n          },\n          loanId: args.newLoanId,\n          renegotiationId: `${this.contract.address.toLowerCase()}.${offer.lender.toLowerCase()}.${\n            args.renegotiationId\n          }`,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async delegateMulticall(delegations: Parameters<MslV6['delegate']>[0][]) {\n    if (delegations.length === 0) throw new Error('At least one delegation must be revoked');\n\n    const txHash = await this.safeContractWrite.multicall([\n      delegations.map((delegation) =>\n        encodeFunctionData({\n          abi: multiSourceLoanAbiV6,\n          functionName: 'delegate',\n          args: [\n            delegation.loanId,\n            delegation.loan,\n            delegation.to,\n            delegation.rights ?? zeroHash,\n            delegation.enable,\n          ],\n        }),\n      ),\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.Delegated();\n        const events = filterLogs(receipt, filter);\n\n        if (events.length !== delegations.length) throw new Error('Delegate multicall failed');\n\n        return {\n          ...receipt,\n          results: events.map(({ args }) => args),\n        };\n      },\n    };\n  }\n\n  async delegate({\n    loan,\n    loanId,\n    to,\n    rights = zeroHash,\n    enable,\n  }: {\n    loan: LoanV6;\n    loanId: bigint;\n    to: Address;\n    rights?: Hash;\n    enable: boolean;\n  }) {\n    const txHash = await this.safeContractWrite.delegate([loanId, loan, to, rights, enable]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.Delegated();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Token not delegated');\n        const args = events[0].args;\n        return {\n          loan: {\n            ...loan,\n            loanId,\n            contractAddress: this.contract.address,\n          },\n          value: args.value,\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async revokeDelegate({\n    to,\n    collection,\n    tokenId,\n  }: {\n    to: Address;\n    collection: Address;\n    tokenId: bigint;\n  }) {\n    const txHash = await this.safeContractWrite.revokeDelegate([to, collection, tokenId]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filter = await this.contract.createEventFilter.RevokeDelegate();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Token delegation not revoked');\n        const args = events[0].args;\n        return { ...args, ...receipt };\n      },\n    };\n  }\n\n  async liquidateLoan({ loan, loanId }: { loan: LoanV6; loanId: bigint }) {\n    const txHash = await this.safeContractWrite.liquidateLoan([loanId, loan]);\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n        const filterForeclosed = await this.contract.createEventFilter.LoanForeclosed();\n        const filterSentToLiquidator = await this.contract.createEventFilter.LoanSentToLiquidator();\n        const foreclosedEvents = filterLogs(receipt, filterForeclosed);\n        const sentToLiquidatorEvents = filterLogs(receipt, filterSentToLiquidator);\n        if (foreclosedEvents.length === 0 && sentToLiquidatorEvents.length === 0)\n          throw new Error('Loan not liquidated');\n        return {\n          ...(foreclosedEvents?.[0]?.args ?? sentToLiquidatorEvents?.[0]?.args),\n          ...receipt,\n        };\n      },\n    };\n  }\n}\n", "import { Address, zeroAddress } from 'viem';\n\nimport { filterLogs, zeroHash } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts, getCurrencies } from '@/deploys';\nimport { seaportABI } from '@/generated/blockchain/seaport';\nimport { SaleOfferInfoFragment } from '@/generated/graphql';\nimport { Fulfillment, SeaportOrder, SeaportOrderParameter } from '@/reservoir/utils';\nimport { millisToSeconds } from '@/utils/dates';\n\nimport { BaseContract } from './BaseContract';\n\nexport class Seaport extends BaseContract<typeof seaportABI> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const { SeaportAddress } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: SeaportAddress,\n      abi: seaportABI,\n    });\n  }\n\n  async getOrderHash(order: SeaportOrder) {\n    return this.contract.read.getOrderHash([order]);\n  }\n\n  async getCounter() {\n    return this.contract.read.getCounter([this.wallet.account.address]);\n  }\n\n  async signOrder(order: SeaportOrderParameter) {\n    const domain = {\n      name: 'Seaport',\n      version: '1.5',\n      chainId: this.wallet.chain?.id,\n      verifyingContract: this.address,\n    };\n    const types = {\n      OrderComponents: [\n        { name: 'offerer', type: 'address' },\n        { name: 'zone', type: 'address' },\n        { name: 'offer', type: 'OfferItem[]' },\n        { name: 'consideration', type: 'ConsiderationItem[]' },\n        { name: 'orderType', type: 'uint8' },\n        { name: 'startTime', type: 'uint256' },\n        { name: 'endTime', type: 'uint256' },\n        { name: 'zoneHash', type: 'bytes32' },\n        { name: 'salt', type: 'uint256' },\n        { name: 'conduitKey', type: 'bytes32' },\n        { name: 'counter', type: 'uint256' },\n      ],\n      OfferItem: [\n        { name: 'itemType', type: 'uint8' },\n        { name: 'token', type: 'address' },\n        { name: 'identifierOrCriteria', type: 'uint256' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n      ],\n      ConsiderationItem: [\n        { name: 'itemType', type: 'uint8' },\n        { name: 'token', type: 'address' },\n        { name: 'identifierOrCriteria', type: 'uint256' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n        { name: 'recipient', type: 'address' },\n      ],\n    } as const;\n\n    return this.wallet.signTypedData({\n      domain,\n      types,\n      primaryType: 'OrderComponents',\n      message: order,\n    });\n  }\n\n  async generateOrderFromSaleOffer({\n    collectionContractAddress,\n    tokenId,\n    price,\n    expirationTime,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    price: bigint;\n    expirationTime: bigint;\n  }) {\n    const { WETH_ADDRESS } = getCurrencies();\n\n    const orderParameters: SeaportOrderParameter = {\n      offerer: this.wallet.account.address,\n      zone: zeroAddress,\n      offer: [\n        {\n          itemType: 1,\n          token: WETH_ADDRESS,\n          identifierOrCriteria: 0n,\n          startAmount: price,\n          endAmount: price,\n        },\n      ],\n      consideration: [\n        {\n          itemType: 2,\n          token: collectionContractAddress,\n          identifierOrCriteria: tokenId,\n          startAmount: 1n,\n          endAmount: 1n,\n          recipient: this.wallet.account.address,\n        },\n      ],\n      orderType: 0,\n      startTime: BigInt(Math.floor(millisToSeconds(Date.now()))),\n      endTime: expirationTime,\n      zoneHash: zeroHash,\n      salt: 0n,\n      conduitKey: zeroHash,\n      counter: await this.getCounter(),\n      totalOriginalConsiderationItems: 1n,\n    };\n\n    const signature = await this.signOrder(orderParameters);\n\n    return {\n      parameters: orderParameters,\n      signature,\n    };\n  }\n\n  async recoverOrderFromNativeBid({\n    nativeBid,\n    collectionContractAddress,\n    tokenId,\n  }: {\n    nativeBid: Omit<SaleOfferInfoFragment, '__typename'>;\n    collectionContractAddress: Address;\n    tokenId: bigint;\n  }) {\n    const { WETH_ADDRESS } = getCurrencies();\n\n    const orderParameters: SeaportOrderParameter = {\n      offerer: nativeBid.maker,\n      zone: zeroAddress,\n      offer: [\n        {\n          itemType: 1,\n          token: WETH_ADDRESS,\n          identifierOrCriteria: 0n,\n          startAmount: nativeBid.netAmount,\n          endAmount: nativeBid.netAmount,\n        },\n      ],\n      consideration: [\n        {\n          itemType: 2,\n          token: collectionContractAddress,\n          identifierOrCriteria: tokenId,\n          startAmount: 1n,\n          endAmount: 1n,\n          recipient: nativeBid.maker,\n        },\n      ],\n      orderType: 0,\n      startTime: BigInt(Math.floor(millisToSeconds(nativeBid.startTime.getTime()))),\n      endTime: BigInt(Math.floor(millisToSeconds(nativeBid.expiration?.getTime() ?? Date.now()))),\n      zoneHash: zeroHash,\n      salt: 0n,\n      conduitKey: zeroHash,\n      counter: await this.getCounter(),\n      totalOriginalConsiderationItems: 1n,\n    };\n\n    return orderParameters;\n  }\n\n  async generateInverseOrder(order: SeaportOrder): Promise<SeaportOrderParameter> {\n    return {\n      offerer: this.wallet.account?.address ?? zeroAddress,\n      zone: zeroAddress,\n      offer: order.consideration,\n      consideration: order.offer.map((offer) => ({\n        ...offer,\n        recipient: this.wallet.account?.address ?? zeroAddress,\n      })),\n      orderType: 0,\n      startTime: order.startTime,\n      endTime: order.endTime,\n      zoneHash: zeroHash,\n      salt: 0n,\n      conduitKey: zeroHash,\n      counter: await this.getCounter(),\n      totalOriginalConsiderationItems: BigInt(order.offer.length),\n    };\n  }\n\n  generateFulfillmentsForOrderAndInverse(order: SeaportOrderParameter) {\n    const fulfillments: Fulfillment[] = [];\n\n    // First, we pair each offer with the consideration from the inverse\n    order.offer.forEach((_, index) => {\n      fulfillments.push({\n        offerComponents: [\n          {\n            orderIndex: 0n,\n            itemIndex: BigInt(index),\n          },\n        ],\n        considerationComponents: [\n          {\n            orderIndex: 1n,\n            itemIndex: BigInt(index),\n          },\n        ],\n      });\n    });\n\n    // We then pair each consideration with the offer from the inverse\n    order.consideration.forEach((_, index) => {\n      fulfillments.push({\n        offerComponents: [\n          {\n            orderIndex: 1n,\n            itemIndex: BigInt(index),\n          },\n        ],\n        considerationComponents: [\n          {\n            orderIndex: 0n,\n            itemIndex: BigInt(index),\n          },\n        ],\n      });\n    });\n\n    return fulfillments;\n  }\n\n  async cancel({ orderComponents }: { orderComponents: SeaportOrder }) {\n    const txHash = await this.safeContractWrite.cancel([[orderComponents]]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.OrderCancelled({\n          offerer: orderComponents.offerer,\n        });\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Order not cancelled');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n}\n", "export const seaportABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"conduitController\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"BadContractSignature\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"BadFraction\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"BadReturnValueFromERC20OnTransfer\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"BadSignatureV\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"CannotCancelOrder\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"ConsiderationCriteriaResolverOutOfRange\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"ConsiderationLengthNotEqualToTotalOriginal\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"orderIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"considerationIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"shortfallAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ConsiderationNotMet\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"CriteriaNotEnabledForItem\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"identifiers\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"ERC1155BatchTransferGenericFailure\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InexactFraction\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InsufficientNativeTokensSupplied\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Invalid1155BatchTransferEncoding\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidBasicOrderParameterEncoding\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"conduit\",\n        type: \"address\",\n      },\n    ],\n    name: \"InvalidCallToConduit\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"conduitKey\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"conduit\",\n        type: \"address\",\n      },\n    ],\n    name: \"InvalidConduit\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"InvalidContractOrder\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"InvalidERC721TransferAmount\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidFulfillmentComponentData\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"InvalidMsgValue\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidNativeOfferItem\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidProof\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"InvalidRestrictedOrder\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidSignature\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidSigner\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"startTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"endTime\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"InvalidTime\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"fulfillmentIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MismatchedFulfillmentOfferAndConsiderationComponents\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"enum Side\",\n        name: \"side\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"MissingFulfillmentComponentOnAggregation\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"MissingItemAmount\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"MissingOriginalConsiderationItems\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"NativeTokenTransferGenericFailure\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"NoContract\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NoReentrantCalls\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NoSpecifiedOrdersAvailable\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"OfferAndConsiderationRequiredOnFulfillment\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"OfferCriteriaResolverOutOfRange\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"OrderAlreadyFilled\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"enum Side\",\n        name: \"side\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"OrderCriteriaResolverOutOfRange\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"OrderIsCancelled\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"OrderPartiallyFilled\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"PartialFillsNotEnabledForOrder\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"identifier\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokenTransferGenericFailure\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"orderIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"considerationIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"UnresolvedConsiderationCriteria\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"orderIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"offerIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"UnresolvedOfferCriteria\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"UnusedItemParameters\",\n    type: \"error\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newCounter\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"offerer\",\n        type: \"address\",\n      },\n    ],\n    name: \"CounterIncremented\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"offerer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"zone\",\n        type: \"address\",\n      },\n    ],\n    name: \"OrderCancelled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"offerer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"zone\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum ItemType\",\n            name: \"itemType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"identifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct SpentItem[]\",\n        name: \"offer\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum ItemType\",\n            name: \"itemType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"identifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address payable\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ReceivedItem[]\",\n        name: \"consideration\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"OrderFulfilled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zone\",\n            type: \"address\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifierOrCriteria\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endAmount\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OfferItem[]\",\n            name: \"offer\",\n            type: \"tuple[]\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifierOrCriteria\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ConsiderationItem[]\",\n            name: \"consideration\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"enum OrderType\",\n            name: \"orderType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"zoneHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalOriginalConsiderationItems\",\n            type: \"uint256\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct OrderParameters\",\n        name: \"orderParameters\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"OrderValidated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32[]\",\n        name: \"orderHashes\",\n        type: \"bytes32[]\",\n      },\n    ],\n    name: \"OrdersMatched\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zone\",\n            type: \"address\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifierOrCriteria\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endAmount\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OfferItem[]\",\n            name: \"offer\",\n            type: \"tuple[]\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifierOrCriteria\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ConsiderationItem[]\",\n            name: \"consideration\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"enum OrderType\",\n            name: \"orderType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"zoneHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"counter\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct OrderComponents[]\",\n        name: \"orders\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"cancel\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"cancelled\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint120\",\n            name: \"numerator\",\n            type: \"uint120\",\n          },\n          {\n            internalType: \"uint120\",\n            name: \"denominator\",\n            type: \"uint120\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"extraData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct AdvancedOrder\",\n        name: \"\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum Side\",\n            name: \"side\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"index\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"identifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32[]\",\n            name: \"criteriaProof\",\n            type: \"bytes32[]\",\n          },\n        ],\n        internalType: \"struct CriteriaResolver[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"fulfillerConduitKey\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"fulfillAdvancedOrder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"fulfilled\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint120\",\n            name: \"numerator\",\n            type: \"uint120\",\n          },\n          {\n            internalType: \"uint120\",\n            name: \"denominator\",\n            type: \"uint120\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"extraData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct AdvancedOrder[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum Side\",\n            name: \"side\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"index\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"identifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32[]\",\n            name: \"criteriaProof\",\n            type: \"bytes32[]\",\n          },\n        ],\n        internalType: \"struct CriteriaResolver[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"itemIndex\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FulfillmentComponent[][]\",\n        name: \"\",\n        type: \"tuple[][]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"itemIndex\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FulfillmentComponent[][]\",\n        name: \"\",\n        type: \"tuple[][]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"fulfillerConduitKey\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maximumFulfilled\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"fulfillAvailableAdvancedOrders\",\n    outputs: [\n      {\n        internalType: \"bool[]\",\n        name: \"\",\n        type: \"bool[]\",\n      },\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifier\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ReceivedItem\",\n            name: \"item\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct Execution[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Order[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"itemIndex\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FulfillmentComponent[][]\",\n        name: \"\",\n        type: \"tuple[][]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"itemIndex\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FulfillmentComponent[][]\",\n        name: \"\",\n        type: \"tuple[][]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"fulfillerConduitKey\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maximumFulfilled\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"fulfillAvailableOrders\",\n    outputs: [\n      {\n        internalType: \"bool[]\",\n        name: \"\",\n        type: \"bool[]\",\n      },\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifier\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ReceivedItem\",\n            name: \"item\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct Execution[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"considerationToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"considerationIdentifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"considerationAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address payable\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zone\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"offerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"offerIdentifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"offerAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum BasicOrderType\",\n            name: \"basicOrderType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"zoneHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"offererConduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"fulfillerConduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalOriginalAdditionalRecipients\",\n            type: \"uint256\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct AdditionalRecipient[]\",\n            name: \"additionalRecipients\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct BasicOrderParameters\",\n        name: \"parameters\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"fulfillBasicOrder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"fulfilled\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"considerationToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"considerationIdentifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"considerationAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address payable\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zone\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"offerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"offerIdentifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"offerAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum BasicOrderType\",\n            name: \"basicOrderType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"zoneHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"offererConduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"fulfillerConduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalOriginalAdditionalRecipients\",\n            type: \"uint256\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct AdditionalRecipient[]\",\n            name: \"additionalRecipients\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct BasicOrderParameters\",\n        name: \"parameters\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"fulfillBasicOrder_efficient_6GL6yc\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"fulfilled\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Order\",\n        name: \"\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"fulfillerConduitKey\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"fulfillOrder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"fulfilled\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"contractOfferer\",\n        type: \"address\",\n      },\n    ],\n    name: \"getContractOffererNonce\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"offerer\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCounter\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"counter\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zone\",\n            type: \"address\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifierOrCriteria\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endAmount\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OfferItem[]\",\n            name: \"offer\",\n            type: \"tuple[]\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifierOrCriteria\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endAmount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ConsiderationItem[]\",\n            name: \"consideration\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"enum OrderType\",\n            name: \"orderType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"zoneHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"counter\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct OrderComponents\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getOrderHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getOrderStatus\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"isValidated\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"isCancelled\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"totalFilled\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"totalSize\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newCounter\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"information\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"version\",\n        type: \"string\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"domainSeparator\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"conduitController\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint120\",\n            name: \"numerator\",\n            type: \"uint120\",\n          },\n          {\n            internalType: \"uint120\",\n            name: \"denominator\",\n            type: \"uint120\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"extraData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct AdvancedOrder[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"orderIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum Side\",\n            name: \"side\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"index\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"identifier\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32[]\",\n            name: \"criteriaProof\",\n            type: \"bytes32[]\",\n          },\n        ],\n        internalType: \"struct CriteriaResolver[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"orderIndex\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"itemIndex\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct FulfillmentComponent[]\",\n            name: \"offerComponents\",\n            type: \"tuple[]\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"orderIndex\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"itemIndex\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct FulfillmentComponent[]\",\n            name: \"considerationComponents\",\n            type: \"tuple[]\",\n          },\n        ],\n        internalType: \"struct Fulfillment[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"matchAdvancedOrders\",\n    outputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifier\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ReceivedItem\",\n            name: \"item\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct Execution[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Order[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"orderIndex\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"itemIndex\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct FulfillmentComponent[]\",\n            name: \"offerComponents\",\n            type: \"tuple[]\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"orderIndex\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"itemIndex\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct FulfillmentComponent[]\",\n            name: \"considerationComponents\",\n            type: \"tuple[]\",\n          },\n        ],\n        internalType: \"struct Fulfillment[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"matchOrders\",\n    outputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"enum ItemType\",\n                name: \"itemType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"identifier\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address payable\",\n                name: \"recipient\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct ReceivedItem\",\n            name: \"item\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"address\",\n            name: \"offerer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"conduitKey\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct Execution[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"address\",\n                name: \"offerer\",\n                type: \"address\",\n              },\n              {\n                internalType: \"address\",\n                name: \"zone\",\n                type: \"address\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                ],\n                internalType: \"struct OfferItem[]\",\n                name: \"offer\",\n                type: \"tuple[]\",\n              },\n              {\n                components: [\n                  {\n                    internalType: \"enum ItemType\",\n                    name: \"itemType\",\n                    type: \"uint8\",\n                  },\n                  {\n                    internalType: \"address\",\n                    name: \"token\",\n                    type: \"address\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"identifierOrCriteria\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"startAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"uint256\",\n                    name: \"endAmount\",\n                    type: \"uint256\",\n                  },\n                  {\n                    internalType: \"address payable\",\n                    name: \"recipient\",\n                    type: \"address\",\n                  },\n                ],\n                internalType: \"struct ConsiderationItem[]\",\n                name: \"consideration\",\n                type: \"tuple[]\",\n              },\n              {\n                internalType: \"enum OrderType\",\n                name: \"orderType\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"zoneHash\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"salt\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"conduitKey\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"totalOriginalConsiderationItems\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct OrderParameters\",\n            name: \"parameters\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"signature\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Order[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"validate\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n] as const;\n", "import { Address } from 'viem';\n\nimport { filterLogs } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { UserVaultV6 } from '@/contracts/UserVaultV6';\nimport { getContracts } from '@/deploys';\nimport { userVaultABI as userVaultABIV5 } from '@/generated/blockchain/v5';\n\nimport { BaseContract } from './BaseContract';\n\nexport class UserVaultV5 extends BaseContract<typeof userVaultABIV5> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const { UserVault } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: UserVault.v5,\n      abi: userVaultABIV5,\n    });\n  }\n\n  async burnAndWithdraw({\n    vaultId,\n    collections,\n    tokenIds,\n    tokens = [],\n  }: Parameters<UserVaultV6['burnAndWithdraw']>[0]): ReturnType<UserVaultV6['burnAndWithdraw']> {\n    if (collections.length != tokenIds.length) {\n      throw new Error('collections and tokenIds must have the same length');\n    }\n    const txHash = await this.safeContractWrite.burnAndWithdraw([\n      vaultId,\n      collections,\n      tokenIds,\n      tokens,\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.ERC721Withdrawn();\n        const events = filterLogs(receipt, filter);\n        if (events.length !== tokenIds.length) throw new Error('Withdrawn count mismatch');\n        return {\n          events: events.map((event) => event.args),\n          oldEvents: [],\n          ...receipt,\n        };\n      },\n    };\n  }\n  async createVault(nfts: Parameters<UserVaultV6['createVault']>[0]) {\n    const { id: vaultId } = await this.#mintVault();\n    const receipts = [];\n\n    // Regroup all elements in the same collection in case users send tokenIds as separate elements of the array\n    const groupedNfts: Record<Address, (typeof nfts)[number]> = {};\n    for (const { collection, tokenIds } of nfts) {\n      if (groupedNfts[collection]) {\n        groupedNfts[collection].tokenIds.push(...tokenIds);\n      } else {\n        groupedNfts[collection] = { collection, tokenIds: [...tokenIds] };\n      }\n    }\n\n    for (const { collection, tokenIds } of Object.values(groupedNfts)) {\n      const deposit = await this.depositERC721s({ vaultId, collection, tokenIds });\n      const receipt = await deposit.waitTxInBlock();\n      receipts.push(receipt);\n    }\n\n    return { vaultId, receipts };\n  }\n\n  async depositERC721s({\n    vaultId,\n    collection,\n    tokenIds,\n  }: Parameters<UserVaultV6['depositERC721s']>[0]) {\n    const txHash = await this.safeContractWrite.depositERC721s([vaultId, collection, tokenIds]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.ERC721Deposited();\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Deposit not created');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async depositOldERC721s() {\n    throw new Error('Not implemented');\n  }\n\n  async #mintVault() {\n    const txHash = await this.safeContractWrite.mint(undefined);\n    const receipt = await this.bcClient.waitForTransactionReceipt({\n      hash: txHash,\n    });\n\n    const filter = await this.contract.createEventFilter.Transfer({});\n    const events = filterLogs(receipt, filter);\n    if (events.length === 0) throw new Error('Vault not created');\n    return { ...events[0].args, ...receipt };\n  }\n}\n", "import { Address } from 'viem';\n\nimport { filterLogs } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { getContracts } from '@/deploys';\nimport { userVaultAbi as userVaultABIV6 } from '@/generated/blockchain/v6';\n\nimport { BaseContract } from './BaseContract';\n\nexport class UserVaultV6 extends BaseContract<typeof userVaultABIV6> {\n  constructor({ walletClient }: { walletClient: Wallet }) {\n    const { UserVault } = getContracts(walletClient.chain);\n\n    super({\n      walletClient,\n      address: UserVault.v6,\n      abi: userVaultABIV6,\n    });\n  }\n\n  async burnAndWithdraw({\n    vaultId,\n    collections,\n    tokenIds,\n    oldCollections = [],\n    oldTokenIds = [],\n    tokens = [],\n  }: {\n    vaultId: bigint;\n    collections: Address[];\n    tokenIds: bigint[];\n    oldCollections?: Address[];\n    oldTokenIds?: bigint[];\n    tokens?: Address[]; // erc20 tokens\n  }) {\n    if (collections.length != tokenIds.length) {\n      throw new Error('collections and tokenIds must have the same length');\n    }\n    if (oldCollections.length != oldTokenIds.length) {\n      throw new Error('oldCollections and oldTokenIds must have the same length');\n    }\n    const txHash = await this.safeContractWrite.burnAndWithdraw([\n      vaultId,\n      collections,\n      tokenIds,\n      oldCollections,\n      oldTokenIds,\n      tokens,\n    ]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.ERC721Withdrawn({});\n        const events = filterLogs(receipt, filter);\n        const oldFilter = await this.contract.createEventFilter.OldERC721Withdrawn({});\n        const oldEvents = filterLogs(receipt, oldFilter);\n        if (events.length !== tokenIds.length || oldEvents.length !== oldTokenIds.length)\n          throw new Error('Withdrawn count mismatch');\n        return {\n          events: events.map((event) => event.args),\n          oldEvents: events.map((event) => event.args),\n          ...receipt,\n        };\n      },\n    };\n  }\n\n  async createVault(nfts: { collection: Address; tokenIds: bigint[]; isOldErc721?: boolean }[]) {\n    const { id: vaultId } = await this.#mintVault();\n    const receipts = [];\n\n    // Regroup all elements in the same collection in case users send tokenIds as separate elements of the array\n    const groupedNfts: Record<Address, (typeof nfts)[number]> = {};\n    for (const { collection, tokenIds, isOldErc721 } of nfts) {\n      if (groupedNfts[collection]) {\n        groupedNfts[collection].tokenIds.push(...tokenIds);\n      } else {\n        groupedNfts[collection] = { collection, tokenIds: [...tokenIds], isOldErc721 };\n      }\n    }\n\n    for (const { collection, tokenIds, isOldErc721 } of Object.values(groupedNfts)) {\n      const deposit = isOldErc721\n        ? await this.depositOldERC721s({ vaultId, collection, tokenIds })\n        : await this.depositERC721s({ vaultId, collection, tokenIds });\n      const receipt = await deposit.waitTxInBlock();\n      receipts.push(receipt);\n    }\n\n    return { vaultId, receipts };\n  }\n\n  async depositERC721s({\n    vaultId,\n    collection,\n    tokenIds,\n  }: {\n    vaultId: bigint;\n    collection: Address;\n    tokenIds: bigint[];\n  }) {\n    const txHash = await this.safeContractWrite.depositERC721s([vaultId, collection, tokenIds]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.ERC721Deposited({});\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Deposit not created');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async depositOldERC721s({\n    vaultId,\n    collection,\n    tokenIds,\n  }: {\n    vaultId: bigint;\n    collection: Address;\n    tokenIds: bigint[];\n  }) {\n    const txHash = await this.safeContractWrite.depositOldERC721s([vaultId, collection, tokenIds]);\n\n    return {\n      txHash,\n      waitTxInBlock: async () => {\n        const receipt = await this.bcClient.waitForTransactionReceipt({\n          hash: txHash,\n        });\n\n        const filter = await this.contract.createEventFilter.OldERC721Deposited({});\n        const events = filterLogs(receipt, filter);\n        if (events.length === 0) throw new Error('Deposit not created');\n        return { ...events[0].args, ...receipt };\n      },\n    };\n  }\n\n  async #mintVault() {\n    const txHash = await this.safeContractWrite.mint(undefined);\n    const receipt = await this.bcClient.waitForTransactionReceipt({\n      hash: txHash,\n    });\n\n    const filter = await this.contract.createEventFilter.Transfer({});\n    const events = filterLogs(receipt, filter);\n    if (events.length === 0) throw new Error('Vault not created');\n    return { ...events[0].args, ...receipt };\n  }\n}\n", "import { Address, Hash } from 'viem';\n\nimport { Signature } from '@/blockchain';\nimport {\n  CollectionOfferInput as ApiCollectionOfferInput,\n  CollectionSignedOfferInput,\n  LoanSortInput,\n  LoanStatusType,\n  MarketplaceEnum,\n  OffersSortInput,\n  OfferStatus,\n  RenegotiationOfferInput as ApiRenegotiationInput,\n  SignedRenegotiationOfferInput,\n  SingleNftOfferInput as ApiSingleNftOfferInput,\n  SingleNftSignedOfferInput,\n  TermsFilter,\n  UserFilter,\n} from '@/generated/graphql';\nimport { Optional } from '@/utils/types';\n\ntype MaxSeniorRepaymentArg = {\n  maxSeniorRepayment: Exclude<ApiSingleNftOfferInput['maxSeniorRepayment'], null | undefined>;\n};\n\nexport type SingleNftOfferInput = Optional<\n  ApiSingleNftOfferInput,\n  'borrowerAddress' | 'lenderAddress' | 'signerAddress' | 'offerValidators' | 'contractAddress'\n> &\n  MaxSeniorRepaymentArg;\n\nexport type UnsignedSingleNftOffer = Omit<SingleNftSignedOfferInput, 'signature'> & {\n  nftCollateralAddress: Address;\n  nftCollateralTokenId: bigint;\n};\n\nexport type SingleNftOffer = UnsignedSingleNftOffer &\n  SingleNftSignedOfferInput & {\n    signature: Hash;\n  } & MaxSeniorRepaymentArg;\n\nexport type CollectionOfferInput = Optional<\n  ApiCollectionOfferInput,\n  'borrowerAddress' | 'lenderAddress' | 'signerAddress' | 'offerValidators' | 'contractAddress'\n> &\n  MaxSeniorRepaymentArg;\n\nexport type UnsignedCollectionOffer = Omit<\n  CollectionSignedOfferInput,\n  'signature' | 'collectionId'\n> & {\n  nftCollateralAddress: Address;\n};\n\nexport type CollectionOffer = UnsignedCollectionOffer & {\n  signature: Hash;\n  nftCollateralTokenId: 0n;\n} & MaxSeniorRepaymentArg;\n\nexport type RenegotiationInput = Optional<\n  ApiRenegotiationInput,\n  'lenderAddress' | 'signerAddress'\n> &\n  (\n    | {\n        trancheIndex: Exclude<ApiRenegotiationInput['trancheIndex'], null | undefined>;\n        targetPrincipal?: undefined;\n      }\n    | {\n        trancheIndex?: undefined;\n        targetPrincipal: Exclude<ApiRenegotiationInput['targetPrincipal'], null | undefined>;\n      }\n  );\n\nexport type UnsignedRenegotiationOffer = Omit<SignedRenegotiationOfferInput, 'signature'>;\n\nexport type RenegotiationOffer = UnsignedRenegotiationOffer & {\n  signature: Signature;\n};\n\n/** @ignore */\nexport const MAX_NUMBER =\n  115792089237316195423570985008687907853269984665640564039457584007913129639935n;\n\nexport type ListOffersProps = {\n  limit?: number;\n  cursor?: string | null;\n  sortBy?: OffersSortInput;\n  filterBy?: {\n    nft?: number;\n    onlySingleNftOffers?: boolean;\n    collection?: number;\n    onlyCollectionOffers?: boolean;\n    borrower?: Address;\n    lenders?: Address[];\n    status?: OfferStatus[];\n  };\n};\n\nexport interface ListLoansProps {\n  limit?: number;\n  cursor?: string | null;\n  borrowers?: Address[];\n  collections?: number[];\n  nfts?: number[];\n  statuses?: LoanStatusType[];\n  sortBy?: LoanSortInput;\n  terms?: TermsFilter;\n  orderByStatuses?: boolean;\n  loansCurrencyAddress?: Address;\n}\n\nexport type ListListingsProps = {\n  collections?: number[];\n  user?: UserFilter;\n  marketPlaces?: MarketplaceEnum[];\n  limit?: number;\n  cursor?: string | null;\n};\n", "import { createClient, paths, ReservoirClient } from '@reservoir0x/reservoir-sdk';\nimport {\n  Address,\n  createPublicClient,\n  encodeAbiParameters,\n  encodeFunctionData,\n  getContract,\n  Hash,\n  http,\n  PublicClient,\n  zeroAddress,\n} from 'viem';\nimport { mainnet } from 'viem/chains';\n\nimport { zeroHash } from '@/blockchain';\nimport { Wallet } from '@/contracts';\nimport { CryptoPunks } from '@/contracts/CryptoPunks';\nimport { Seaport } from '@/contracts/Seaport';\nimport { getApiKeys, getContracts, getCurrencies } from '@/deploys';\nimport {\n  InterruptedCryptoPunksSendTransactionStepError,\n  InterruptedGenericSendTransactionStepError,\n  InterruptedSeaportSendTransactionStepError,\n} from '@/errors';\nimport { seaportABI } from '@/generated/blockchain/seaport';\nimport { erc721ABI } from '@/generated/blockchain/v5';\n\nimport { adaptWalletToCaptureTxData, isOpensea, SeaportAskOrBid } from './utils';\n\nexport class Reservoir {\n  baseApiUrl: string;\n  mainnetClient: PublicClient;\n  wallet: Wallet;\n  Seaport: Seaport;\n  CryptoPunks: CryptoPunks;\n  client: ReservoirClient;\n\n  // We don't have this abi in the generated files\n  EXECUTION_INFO_ABI = [\n    {\n      name: 'ExecutionInfo',\n      type: 'tuple',\n      components: [\n        { name: 'module', type: 'address' },\n        { name: 'data', type: 'bytes' },\n        { name: 'value', type: 'uint256' },\n      ],\n    },\n  ] as const;\n\n  constructor({\n    baseApiUrl = 'https://api.reservoir.tools',\n    wallet,\n    Seaport,\n    CryptoPunks,\n  }: {\n    baseApiUrl?: string;\n    wallet: Wallet;\n    Seaport: Seaport;\n    CryptoPunks: CryptoPunks;\n  }) {\n    this.baseApiUrl = baseApiUrl;\n    this.wallet = wallet;\n    this.Seaport = Seaport;\n    this.CryptoPunks = CryptoPunks;\n\n    const { reservoirApiKey, infuraApiKey } = getApiKeys();\n\n    this.client = createClient({\n      chains: [\n        {\n          id: wallet.chain.id,\n          name: wallet.chain.name,\n          baseApiUrl,\n          active: true,\n        },\n      ],\n      apiKey: reservoirApiKey,\n      source: 'gondi.xyz',\n    });\n\n    this.mainnetClient = createPublicClient({\n      chain: mainnet,\n      transport: http(`https://mainnet.infura.io/v3/${infuraApiKey}`),\n    });\n  }\n\n  async getAsk({ orderId }: { orderId: string }) {\n    return fetch(`${this.baseApiUrl}/orders/asks/v5?ids=${orderId}&includeRawData=true`)\n      .then(\n        (res) =>\n          res.json() as Promise<{\n            orders: paths['/orders/asks/v5']['get']['responses']['200']['schema']['orders'];\n          }>,\n      )\n      .then(({ orders }) => {\n        if (!orders) {\n          throw new Error(`Order ${orderId} is not available anymore`);\n        }\n        return orders[0];\n      });\n  }\n\n  async getBid({ orderId }: { orderId: string }) {\n    return fetch(`${this.baseApiUrl}/orders/bids/v6?ids=${orderId}&includeRawData=true`)\n      .then(\n        (res) =>\n          res.json() as Promise<{\n            orders: paths['/orders/bids/v6']['get']['responses']['200']['schema']['orders'];\n          }>,\n      )\n      .then(({ orders }) => {\n        if (!orders) {\n          throw new Error(`Order ${orderId} is not available anymore`);\n        }\n        return orders[0];\n      });\n  }\n\n  generateExpectedCurrencyPriceObject(price: bigint, currencyAddress: Address) {\n    return {\n      [currencyAddress]: {\n        raw: price,\n        currencyAddress,\n        currencyDecimals: 18,\n      },\n    };\n  }\n\n  encodeExecutionData({ module, data, value }: { module: Address; data: Hash; value: bigint }) {\n    return encodeAbiParameters(this.EXECUTION_INFO_ABI, [{ module, data, value }]);\n  }\n\n  async generateMatchOrdersExecutionData({\n    askOrBid,\n    signature,\n    side = 'ask',\n  }: {\n    askOrBid: SeaportAskOrBid;\n    signature: Hash;\n    side?: 'ask' | 'bid';\n  }) {\n    const order = {\n      parameters: {\n        ...askOrBid.rawData,\n        totalOriginalConsiderationItems: BigInt(askOrBid.rawData.consideration.length),\n      },\n      signature,\n    };\n\n    const inverseOrderParameters = await this.Seaport.generateInverseOrder(order.parameters);\n\n    const inverseOrder = {\n      parameters: inverseOrderParameters,\n      signature: await this.Seaport.signOrder(inverseOrderParameters),\n    };\n\n    const fulfillments = this.Seaport.generateFulfillmentsForOrderAndInverse(order.parameters);\n\n    const matchOrdersCallbackData = encodeFunctionData({\n      abi: seaportABI,\n      functionName: 'matchOrders',\n      args: [[order, inverseOrder], fulfillments],\n    });\n\n    // When we are buying the nft, we need to send the total amount of the consideration in ETH\n    // When we are selling the nft, we need to **receive** the netAmount of WETH\n    const total =\n      side === 'ask'\n        ? order.parameters.consideration.reduce(\n            (acc, consid) => acc + (consid.itemType === 0 ? BigInt(consid.endAmount) : 0n),\n            0n,\n          )\n        : BigInt(askOrBid.price.netAmount.raw);\n\n    return {\n      callbackData: this.encodeExecutionData({\n        module: this.Seaport.address,\n        data: matchOrdersCallbackData,\n        value: total,\n      }),\n      value: total,\n      isSeaportCall: true,\n    };\n  }\n\n  async generateFulfillOrderExecutionData({\n    askOrBid,\n    signature,\n    tokenId,\n  }: {\n    askOrBid: SeaportAskOrBid;\n    signature: Hash;\n    tokenId: bigint;\n  }) {\n    const order = {\n      parameters: {\n        ...askOrBid.rawData,\n        totalOriginalConsiderationItems: BigInt(askOrBid.rawData.consideration.length),\n      },\n      numerator: 1n,\n      denominator: 1n,\n      signature,\n      extraData: '0x' as Hash,\n    };\n\n    const nftWithCriteriaIndex = order.parameters.consideration.findIndex(\n      (consid) => consid.itemType === 4,\n    );\n\n    const fulfillOrderCallbackData = encodeFunctionData({\n      abi: seaportABI,\n      functionName: 'fulfillAdvancedOrder',\n      args: [\n        order,\n        nftWithCriteriaIndex !== -1\n          ? [\n              {\n                orderIndex: 0n,\n                side: 1, // consideration\n                index: BigInt(nftWithCriteriaIndex),\n                identifier: tokenId,\n                criteriaProof: [],\n              },\n            ]\n          : [],\n        zeroHash,\n        zeroAddress,\n      ],\n    });\n\n    // When we are selling the nft, we need to **receive** the netAmount of WETH\n    const total = BigInt(askOrBid.price.netAmount.raw);\n\n    return {\n      callbackData: this.encodeExecutionData({\n        module: this.Seaport.address,\n        data: fulfillOrderCallbackData,\n        value: total,\n      }),\n      value: total,\n      isSeaportCall: true,\n    };\n  }\n\n  async buyTokens(\n    tokensToBuy: {\n      collectionContractAddress: Address;\n      tokenId: bigint;\n      price: bigint;\n      orderSource: string;\n    }[],\n  ) {\n    const { ETH_ADDRESS } = getCurrencies();\n    const totalPrice = tokensToBuy.reduce((acc, cur) => acc + cur.price, 0n);\n    return this.client?.actions.buyToken({\n      items: tokensToBuy.map((token) => ({\n        token: `${token.collectionContractAddress}:${token.tokenId}`,\n        quantity: 1,\n        exactOrderSource: token.orderSource,\n      })),\n      expectedPrice: this.generateExpectedCurrencyPriceObject(totalPrice, ETH_ADDRESS),\n      wallet: this.wallet,\n      onProgress: () => null,\n      precheck: false,\n      options: {\n        excludeEOA: true,\n        skipBalanceCheck: true,\n      },\n    });\n  }\n\n  async getExecutionDataForBuyToken({\n    collectionContractAddress,\n    tokenId,\n    price,\n    exactOrderSource,\n  }: {\n    collectionContractAddress: string;\n    tokenId: bigint;\n    price: bigint;\n    exactOrderSource: string;\n  }) {\n    const adaptedWallet = adaptWalletToCaptureTxData(this.wallet, exactOrderSource);\n    const { ETH_ADDRESS } = getCurrencies();\n\n    try {\n      await this.client?.actions.buyToken({\n        items: [\n          {\n            token: `${collectionContractAddress}:${tokenId}`,\n            quantity: 1,\n            exactOrderSource,\n          },\n        ],\n        expectedPrice: this.generateExpectedCurrencyPriceObject(price, ETH_ADDRESS),\n        wallet: adaptedWallet,\n        onProgress: () => null,\n        precheck: false,\n        options: {\n          excludeEOA: true,\n          skipBalanceCheck: true,\n        },\n      });\n      throw new Error('This should never happen since we will throw inside the wallet tx');\n    } catch (err) {\n      if (err instanceof InterruptedSeaportSendTransactionStepError) {\n        // We can save a tx by using match orders execution data\n        const { orderId, signature } = err;\n\n        const apiOrder = await this.getAsk({ orderId });\n\n        return this.generateMatchOrdersExecutionData({\n          askOrBid: apiOrder as unknown as SeaportAskOrBid,\n          signature,\n        });\n      } else if (err instanceof InterruptedCryptoPunksSendTransactionStepError) {\n        // We need to build the calldata since reservoir doesn't directly generate it\n        const { value } = err;\n        const callData = await this.CryptoPunks.encodeBuyPunk(tokenId);\n\n        return {\n          callbackData: this.encodeExecutionData({\n            module: this.CryptoPunks.address,\n            data: callData,\n            value,\n          }),\n          value,\n          isSeaportCall: false,\n        };\n      } else if (err instanceof InterruptedGenericSendTransactionStepError) {\n        // We use the same callbackData that we get from reservoir\n        const { to, callbackData, value } = err;\n        return {\n          callbackData: this.encodeExecutionData({\n            module: to,\n            data: callbackData,\n            value,\n          }),\n          value,\n          isSeaportCall: false,\n        };\n      } else {\n        throw new Error(`No available offer for price ${price}`);\n      }\n    }\n  }\n\n  async getCallbackDataForSellToken({\n    collectionContractAddress,\n    tokenId,\n    price,\n    exactOrderSource,\n  }: {\n    collectionContractAddress: Address;\n    tokenId: bigint;\n    price: bigint;\n    exactOrderSource: string;\n  }) {\n    const adaptedWallet = adaptWalletToCaptureTxData(this.wallet, exactOrderSource);\n    const { WETH_ADDRESS } = getCurrencies();\n    const { LeverageAddress } = getContracts(this.wallet.chain);\n\n    const erc721 = getContract({\n      abi: erc721ABI,\n      address: collectionContractAddress,\n      publicClient: this.mainnetClient,\n    });\n\n    const owner = await erc721.read.ownerOf([tokenId]);\n\n    try {\n      await this.client?.actions.acceptOffer({\n        items: [\n          {\n            token: `${collectionContractAddress}:${tokenId}`,\n            quantity: 1,\n            exactOrderSource,\n          },\n        ],\n        expectedPrice: this.generateExpectedCurrencyPriceObject(price, WETH_ADDRESS),\n        wallet: adaptedWallet,\n        onProgress: () => null,\n        precheck: false,\n        options: {\n          excludeEOA: true,\n          // For opensea orders ONLY, the taker needs to be the real owner of the NFT\n          // Since we will be generating fulfillAdvancedOrder callbackData for the seaport contract, there is no problem in setting the taker\n          // to the real owner (MSL), just to get the order id from this\n          // For other order sources, the taker needs to be the leverage contract, since it's the contract that will execute the tx\n          taker: isOpensea(exactOrderSource) ? owner : LeverageAddress,\n        },\n      });\n      throw new Error('This should never happen since we will throw inside the wallet tx');\n    } catch (err) {\n      if (err instanceof InterruptedSeaportSendTransactionStepError) {\n        const { orderId, signature } = err;\n\n        const apiOrder = await this.getBid({ orderId });\n\n        return this.generateFulfillOrderExecutionData({\n          askOrBid: apiOrder as unknown as SeaportAskOrBid,\n          signature,\n          tokenId,\n        });\n      } else if (err instanceof InterruptedGenericSendTransactionStepError) {\n        // We use the same callbackData that we get from reservoir\n        const { orderId, to, callbackData } = err;\n        const apiOrder = await this.getBid({ orderId });\n        return {\n          callbackData: this.encodeExecutionData({\n            module: to,\n            data: callbackData,\n            value: BigInt(apiOrder.price?.netAmount?.raw ?? 0n),\n          }),\n          value: BigInt(apiOrder.price?.netAmount?.raw ?? 0n),\n          isSeaportCall: false,\n        };\n      } else {\n        throw new Error(`No available offer for price ${price}`);\n      }\n    }\n  }\n}\n", "import { Address, Hash } from 'viem';\n\nexport class InterruptedSendTransactionStepError {\n  orderId: string;\n  to: Address;\n  callbackData: Hash;\n  value: bigint;\n\n  constructor({\n    orderId,\n    to,\n    callbackData,\n    value,\n  }: {\n    orderId: string;\n    to: Address;\n    callbackData: Hash;\n    value: bigint;\n  }) {\n    this.orderId = orderId;\n    this.to = to;\n    this.callbackData = callbackData;\n    this.value = value;\n  }\n}\nexport class InterruptedSeaportSendTransactionStepError extends InterruptedSendTransactionStepError {\n  signature: Hash;\n\n  constructor({\n    orderId,\n    to,\n    callbackData,\n    value,\n    signature,\n  }: {\n    orderId: string;\n    to: Address;\n    callbackData: Hash;\n    value: bigint;\n    signature: Hash;\n  }) {\n    super({ orderId, to, callbackData, value });\n    this.signature = signature;\n  }\n}\n\nexport class InterruptedCryptoPunksSendTransactionStepError extends InterruptedSendTransactionStepError {}\n\nexport class InterruptedGenericSendTransactionStepError extends InterruptedSendTransactionStepError {}\n", "import { adaptViemWallet } from '@reservoir0x/reservoir-sdk';\nimport { Address, decodeFunctionData, Hash, zeroAddress } from 'viem';\n\nimport { Wallet } from '@/contracts';\nimport { MSL_V5_TX_HASH } from '@/deploys';\nimport {\n  InterruptedCryptoPunksSendTransactionStepError,\n  InterruptedGenericSendTransactionStepError,\n  InterruptedSeaportSendTransactionStepError,\n} from '@/errors';\nimport { seaportABI } from '@/generated/blockchain/seaport';\n\nexport interface Offer {\n  itemType: number;\n  token: Address;\n  identifierOrCriteria: bigint;\n  startAmount: bigint;\n  endAmount: bigint;\n}\n\nexport interface Consideration extends Offer {\n  recipient: Address;\n}\n\nexport interface SeaportAskOrBid {\n  rawData: SeaportOrder;\n  price: {\n    netAmount: {\n      raw: string;\n    };\n  };\n}\n\nexport interface SeaportOrder {\n  offerer: Address;\n  zone: Address;\n  offer: Offer[];\n  consideration: Consideration[];\n  orderType: number;\n  startTime: bigint;\n  endTime: bigint;\n  zoneHash: Hash;\n  salt: bigint;\n  conduitKey: Hash;\n  counter: bigint;\n}\n\nexport interface SeaportOrderParameter extends SeaportOrder {\n  totalOriginalConsiderationItems: bigint;\n}\n\nexport interface FulfillmentComponent {\n  orderIndex: bigint;\n  itemIndex: bigint;\n}\n\nexport interface Fulfillment {\n  offerComponents: FulfillmentComponent[];\n  considerationComponents: FulfillmentComponent[];\n}\n\nexport const isOpensea = (orderSource: string) => orderSource === 'opensea.io';\nexport const isCryptopunks = (orderSource: string) => orderSource === 'cryptopunks.app';\nexport const isNative = (orderSource: string) => orderSource === 'gondi.xyz';\n\nexport const adaptWalletToCaptureTxData = (wallet: Wallet, exactOrderSource: string) => {\n  const viemWallet = adaptViemWallet(wallet);\n\n  const adaptedWallet = {\n    ...viemWallet,\n    transport: undefined,\n    handleSendTransactionStep: async (\n      _chainId: number,\n      stepItem: {\n        data: { data: Hash; to: Address; value: string };\n        orderIds?: string[];\n      },\n      step: { id: string },\n    ) => {\n      if (step.id !== 'sale') {\n        console.log(step);\n        return MSL_V5_TX_HASH;\n      }\n      const orderId = stepItem.orderIds?.[0] ?? '';\n      const to = stepItem.data.to;\n      const callbackData = stepItem.data.data;\n      const value = BigInt(stepItem.data.value ?? 0);\n\n      if (isOpensea(exactOrderSource)) {\n        const functionData = decodeFunctionData({\n          abi: seaportABI,\n          data: stepItem.data.data,\n        });\n\n        const firstArg = functionData?.args?.[0];\n\n        const signature = Array.isArray(firstArg)\n          ? (firstArg[0] as { signature: Hash }).signature\n          : typeof firstArg === 'object'\n            ? (firstArg as { signature: Hash }).signature\n            : zeroAddress;\n\n        throw new InterruptedSeaportSendTransactionStepError({\n          orderId,\n          to,\n          callbackData,\n          value,\n          signature,\n        });\n      } else if (isCryptopunks(exactOrderSource)) {\n        throw new InterruptedCryptoPunksSendTransactionStepError({\n          orderId,\n          to,\n          callbackData,\n          value,\n        });\n      } else {\n        throw new InterruptedGenericSendTransactionStepError({\n          orderId,\n          to,\n          callbackData,\n          value,\n        });\n      }\n    },\n  };\n  return adaptedWallet;\n};\n", "export const FULFILLED = 'fulfilled' as const;\nexport const REJECTED = 'rejected' as const;\n"],
  "mappings": "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AQ,CAAC,EACT,KAAM,WACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,OACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,WACR,EACA,CACE,KAAM,UACN,KAAM,WACR,CACF,EACA,KAAM,mBACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,WACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,YACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,QACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,wBACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,KAAM,qBACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,WACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,QACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,KAAM,WACN,QAAS,CACP,CACE,KAAM,SACN,KAAM,MACR,EACA,CACE,KAAM,YACN,KAAM,SACR,EACA,CACE,KAAM,SACN,KAAM,SACR,EACA,CACE,KAAM,QACN,KAAM,SACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,KAAM,YACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,2BACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,mBACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,MACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,UACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,SACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,KACN,KAAM,SACR,EACA,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,eACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,SACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,QACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,qBACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,KACN,KAAM,SACR,EACA,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,kBACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACR,EACA,CACE,KAAM,oBACN,KAAM,SACR,EACA,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,4BACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CAAC,EACT,KAAM,yBACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACR,EACA,CACE,KAAM,oBACN,KAAM,SACR,CACF,EACA,KAAM,mBACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,UACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,KAAM,qBACN,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACR,CACF,EACA,QAAS,GACT,KAAM,WACN,gBAAiB,MACnB,EACA,CACE,SAAU,GACV,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,sBACN,QAAS,CAAC,EACV,QAAS,GACT,KAAM,WACN,gBAAiB,YACnB,EACA,CACE,OAAQ,CAAC,EACT,QAAS,GACT,KAAM,cACN,gBAAiB,SACnB,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,KACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,SACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,OACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,KACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACR,CACF,EACA,KAAM,WACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,OACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,KACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,eACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,WACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,cACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,cACN,KAAM,SACR,CACF,EACA,KAAM,iBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,cACN,KAAM,SACR,CACF,EACA,KAAM,mBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,cACN,KAAM,SACR,EACA,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,aACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,sBACN,KAAM,OACR,CACF,EDtmBO,IAAMC,EAAN,cAA0BC,CAAoC,CACnE,YAAY,CAAE,aAAAC,CAAa,EAA6B,CACtD,GAAM,CAAE,mBAAAC,CAAmB,EAAIC,EAAaF,EAAa,KAAK,EAE9D,MAAM,CACJ,aAAAA,EACA,QAASC,EACT,IAAKE,EACP,CAAC,CACH,CAEA,MAAM,cAAcC,EAAiB,CACnC,OAAOC,GAAmB,CACxB,IAAK,KAAK,IACV,aAAc,UACd,KAAM,CAACD,CAAO,CAChB,CAAC,CACH,CACF,EAlBaE,EAAAR,EAAA,eERb,OAAkB,sBAAAS,OAAgC,OAU3C,IAAMC,EAAN,cAAyBC,CAAiC,CAC/D,WAEA,YAAY,CAAE,aAAAC,EAAc,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,EAAmBhE,EAAWH,EAASiE,CAAgB,EACvDG,EAAyBjE,EAAWH,EAASkE,CAAsB,EACzE,GAAIC,EAAiB,SAAW,GAAKC,EAAuB,SAAW,EACrE,MAAM,IAAI,MAAM,qBAAqB,EACvC,MAAO,CACL,GAAID,IAAmB,CAAC,GAAG,MAAQC,IAAyB,CAAC,GAAG,KAChE,GAAGpE,CACL,CACF,CACF,CACF,CACF,EAjmBaqE,EAAA/E,GAAA,SCrBb,OAAkB,eAAAgF,OAAmB,OCA9B,IAAMC,EAAa,CACxB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,oBACN,KAAM,SACR,CACF,EACA,gBAAiB,aACjB,KAAM,aACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,uBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,cACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,KACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,CACF,EACA,KAAM,oCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,QACd,KAAM,IACN,KAAM,OACR,CACF,EACA,KAAM,gBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,oBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,0CACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,6CACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,qBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kBACN,KAAM,SACR,CACF,EACA,KAAM,sBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,4BACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,KACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,cACN,KAAM,WACR,EACA,CACE,aAAc,YACd,KAAM,UACN,KAAM,WACR,CACF,EACA,KAAM,qCACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,kBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,mCACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,mCACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,qCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,KAAM,uBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,KAAM,iBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,uBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,CACF,EACA,KAAM,8BACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,kCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,CACF,EACA,KAAM,kBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,yBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,eACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,yBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,mBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,gBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,KAAM,cACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,mBACN,KAAM,SACR,CACF,EACA,KAAM,uDACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,YACd,KAAM,OACN,KAAM,OACR,CACF,EACA,KAAM,2CACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,oBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,oCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,CACF,EACA,KAAM,oCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,KAAM,aACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,mBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,6BACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,6CACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,kCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,qBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,YACd,KAAM,OACN,KAAM,OACR,CACF,EACA,KAAM,kCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,mBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,uBACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,iCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,KACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,CACF,EACA,KAAM,8BACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,qBACN,KAAM,SACR,CACF,EACA,KAAM,kCACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,CACF,EACA,KAAM,0BACN,KAAM,OACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,uBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,KAAM,qBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,QAAS,GACT,aAAc,UACd,KAAM,OACN,KAAM,SACR,CACF,EACA,KAAM,iBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,QAAS,GACT,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,CACF,EACA,QAAS,GACT,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,QAAS,GACT,aAAc,wBACd,KAAM,gBACN,KAAM,SACR,CACF,EACA,KAAM,iBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,QAAS,GACT,aAAc,yBACd,KAAM,kBACN,KAAM,OACR,CACF,EACA,KAAM,iBACN,KAAM,OACR,EACA,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,YACd,KAAM,cACN,KAAM,WACR,CACF,EACA,KAAM,gBACN,KAAM,OACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,aAAc,2BACd,KAAM,SACN,KAAM,SACR,CACF,EACA,KAAM,SACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,YACN,KAAM,MACR,CACF,EACA,gBAAiB,aACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,uBACd,KAAM,GACN,KAAM,OACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,gBACN,KAAM,WACR,CACF,EACA,aAAc,4BACd,KAAM,GACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,uBACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,YACN,KAAM,MACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,yBACd,KAAM,GACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,gBACN,KAAM,WACR,CACF,EACA,aAAc,4BACd,KAAM,GACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,kCACd,KAAM,GACN,KAAM,WACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,kCACd,KAAM,GACN,KAAM,WACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,mBACN,KAAM,SACR,CACF,EACA,KAAM,iCACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,QACR,EACA,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,sBACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,GACN,KAAM,SACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,iBACd,KAAM,GACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,kCACd,KAAM,GACN,KAAM,WACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,kCACd,KAAM,GACN,KAAM,WACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,mBACN,KAAM,SACR,CACF,EACA,KAAM,yBACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,QACR,EACA,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,sBACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,GACN,KAAM,SACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,qBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,0BACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,sBACd,KAAM,iBACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,oBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,oCACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,+BACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,8BACd,KAAM,aACN,KAAM,OACR,CACF,EACA,KAAM,oBACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,YACN,KAAM,MACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,qBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,0BACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,sBACd,KAAM,iBACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,oBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,oCACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,+BACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,8BACd,KAAM,aACN,KAAM,OACR,CACF,EACA,KAAM,qCACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,YACN,KAAM,MACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,eACd,KAAM,GACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SACR,CACF,EACA,KAAM,eACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,YACN,KAAM,MACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,kBACN,KAAM,SACR,CACF,EACA,KAAM,0BACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,CACF,EACA,gBAAiB,OACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,KAAM,aACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,gBAAiB,OACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,GACN,KAAM,OACR,CACF,EACA,KAAM,eACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,gBAAiB,OACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,iBACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,cACN,KAAM,MACR,EACA,CACE,aAAc,OACd,KAAM,cACN,KAAM,MACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,gBAAiB,OACjB,KAAM,UACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,mBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,CACF,EACA,gBAAiB,aACjB,KAAM,UACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,cACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,UACN,KAAM,QACR,EACA,CACE,aAAc,UACd,KAAM,kBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,oBACN,KAAM,SACR,CACF,EACA,gBAAiB,OACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,yBACd,KAAM,GACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,YACd,KAAM,gBACN,KAAM,WACR,CACF,EACA,aAAc,4BACd,KAAM,GACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,gCACd,KAAM,kBACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,gCACd,KAAM,0BACN,KAAM,SACR,CACF,EACA,aAAc,uBACd,KAAM,GACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,KAAM,sBACN,QAAS,CACP,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,sBACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,GACN,KAAM,SACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,iBACd,KAAM,GACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,gCACd,KAAM,kBACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,gCACd,KAAM,0BACN,KAAM,SACR,CACF,EACA,aAAc,uBACd,KAAM,GACN,KAAM,SACR,CACF,EACA,KAAM,cACN,QAAS,CACP,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,SACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,sBACd,KAAM,OACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,GACN,KAAM,SACR,CACF,EACA,gBAAiB,UACjB,KAAM,UACR,EACA,CACE,OAAQ,CAAC,EACT,KAAM,OACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,QACR,CACF,EACA,gBAAiB,OACjB,KAAM,UACR,EACA,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,qBACd,KAAM,QACN,KAAM,SACR,EACA,CACE,WAAY,CACV,CACE,aAAc,gBACd,KAAM,WACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,QACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,cACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,kBACd,KAAM,YACN,KAAM,SACR,CACF,EACA,aAAc,6BACd,KAAM,gBACN,KAAM,SACR,EACA,CACE,aAAc,iBACd,KAAM,YACN,KAAM,OACR,EACA,CACE,aAAc,UACd,KAAM,YACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,UACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,WACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,OACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,aACN,KAAM,SACR,EACA,CACE,aAAc,UACd,KAAM,kCACN,KAAM,SACR,CACF,EACA,aAAc,yBACd,KAAM,aACN,KAAM,OACR,EACA,CACE,aAAc,QACd,KAAM,YACN,KAAM,OACR,CACF,EACA,aAAc,iBACd,KAAM,GACN,KAAM,SACR,CACF,EACA,KAAM,WACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,GACN,KAAM,MAC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",
  "names": ["createPublicClient", "createTransport", "getAddress", "ApolloClient", "ApolloLink", "createHttpLink", "InMemoryCache", "setContext", "withScalars", "buildSchema", "ApolloClient", "ApolloLink", "createHttpLink", "InMemoryCache", "gql", "SiweMessage", "authApiUrl", "__name", "apiDomain", "getAuthClient", "link", "ApolloLink", "createHttpLink", "operationName", "ApolloClient", "InMemoryCache", "signIn", "wallet", "authClient", "data", "errors", "gql", "e", "nonce", "message", "SiweMessage", "signature", "siweData", "siweErrors", "accessToken", "SessionToken", "token", "request", "headers", "apiUrl", "__name", "apiDomain", "lendingSchema", "buildSchema", "lending_schema_default", "typesMap", "parsed", "raw", "authLink", "credential", "setContext", "request", "link", "ApolloLink", "withScalars", "createHttpLink", "operationName", "apolloClient", "wallet", "SessionToken", "ApolloClient", "InMemoryCache", "gql", "LoanStatusType", "MarketplaceEnum", "OfferStatus", "OffersSortField", "Ordering", "CurrencyInfoFragmentDoc", "gql", "CurrencyAmountInfoFragmentDoc", "SaleOfferInfoFragmentDoc", "ListNftDocument", "UnlistNftDocument", "GenerateCollectionOfferHashDocument", "SaveCollectionOfferDocument", "HideOfferDocument", "GenerateSingleNftOfferHashDocument", "SaveSingleNftOfferDocument", "UnhideOfferDocument", "GenerateRenegotiationOfferHashDocument", "HideRenegotiationOfferDocument", "SaveRenegotiationOfferDocument", "UnhideRenegotiationOfferDocument", "HideSaleOfferDocument", "ListBestBidsForNftDocument", "SaveSignedSaleOfferDocument", "UnhideSaleOfferDocument", "CollectionsDocument", "CollectionsIdByContractAddressDocument", "CollectionIdBySlugDocument", "ListListingsDocument", "ListLoansDocument", "NftIdByContractAddressAndTokenIdDocument", "NftIdBySlugTokenIdDocument", "OwnedNftsDocument", "ListOffersDocument", "getSdk", "requester", "variables", "options", "__name", "validDocDefOps", "getSdkApollo", "client", "getSdk", "__name", "doc", "variables", "options", "d", "definition", "response", "decodeEventLog", "encodeEventTopics", "zeroAddressViem", "zeroAddress", "zeroAddressViem", "zeroHash", "zeroHex", "REORG_SAFETY_BUFFER", "filterLogs", "receipt", "filter", "log", "encodeEventTopics", "decodeEventLog", "event", "__name", "isDefined", "__name", "value", "mapPageInfo", "__name", "endCursor", "hasNextPage", "apiDomain", "Api", "apiClient", "wallet", "gqlClient", "apolloClient", "getSdkApollo", "offerInput", "offer", "zeroAddress", "response", "nftCollateralAddress", "props", "edges", "pageInfo", "offers", "edge", "__typename", "node", "nftCollateralTokenId", "isDefined", "loans", "source", "getAddress", "listings", "getContract", "oldErc721Abi", "auctionLoanLiquidatorABI", "erc20ABI", "erc721ABI", "leverageABI", "multiSourceLoanABI", "userVaultABI", "NATIVE_MARKETPLACE", "CONTRACT_DOMAIN_NAME", "areSameAddress", "__name", "adr1", "adr2", "isDefined", "encodeAbiParameters", "isAddress", "zeroAddress", "goerli", "ANVIL_CHAIN_ID", "ensureAddress", "__name", "value", "isAddress", "MSL_V5_TX_HASH", "getContracts", "chain", "goerli", "getApiKeys", "getCurrencies", "zeroAddress", "auctionLoanLiquidatorABI", "multiSourceLoanABI", "createPublicClient", "createTransport", "getContract", "BaseContract", "walletClient", "address", "abi", "bcClient", "createPublicClient", "createTransport", "getContract", "_", "functionName", "args", "options", "request", "__name", "_AllV4", "BaseContract", "walletClient", "v4", "getContracts", "auctionLoanLiquidatorABI", "collectionContractAddress", "tokenId", "bid", "txHash", "receipt", "filter", "events", "filterLogs", "loan", "loanStruct", "source", "encodeAbiParameters", "AllV4", "__name", "__publicField", "AllV5", "BaseContract", "walletClient", "v5", "getContracts", "auctionLoanLiquidatorABI", "collectionContractAddress", "tokenId", "bid", "auction", "txHash", "receipt", "filter", "events", "filterLogs", "loan", "__name", "auctionWithBuyoutLoanLiquidatorAbi", "multiSourceLoanAbi", "userVaultAbi", "toInteger", "__name", "bn", "bpsToPercentage", "bps", "sumBy", "array", "key", "acc", "item", "maxBy", "min", "a", "b", "SECONDS_IN_MIN", "SECONDS_IN_DAY", "millisToSeconds", "__name", "millis", "toInteger", "secondsToMillis", "seconds", "toDate", "__name", "date", "secondsToMillis", "AllV6", "BaseContract", "walletClient", "v6", "getContracts", "auctionWithBuyoutLoanLiquidatorAbi", "collectionContractAddress", "tokenId", "bid", "auction", "txHash", "receipt", "filter", "events", "filterLogs", "lockupTimeSeconds", "lockupSeconds", "ellapsedSeconds", "millisToSeconds", "loan", "__name", "encodeFunctionData", "cryptopunksABI", "CryptoPunks", "BaseContract", "walletClient", "CryptoPunksAddress", "getContracts", "cryptopunksABI", "tokenId", "encodeFunctionData", "__name", "encodeFunctionData", "LeverageV5", "BaseContract", "walletClient", "mslAddress", "LeverageAddress", "getContracts", "leverageABI", "CONTRACT_DOMAIN_NAME", "executionData", "data", "leverageBuyData", "ethToSend", "txHash", "encodeFunctionData", "multiSourceLoanABI", "receipt", "filter", "events", "filterLogs", "loan", "callbackData", "shouldDelegate", "loanId", "repaymentData", "__name", "zeroAddress", "isAddress", "renegotiationToMslRenegotiation", "__name", "renegotiation", "loanId", "zeroAddress", "loanToMslLoan", "loan", "nftCollateralAddress", "areSameAddress", "isAddress", "source", "s", "protocolFee", "dateStartTime", "toDate", "dateContractStartTime", "millisDelta", "duration", "millisToSeconds", "startTime", "generateFakeRenegotiationInput", "trancheIndex", "address", "mslLoan", "options", "_", "i", "getMslLoanId", "maxBy", "getRemainingSeconds", "now", "finishDate", "secondsToMillis", "MslV4", "BaseContract", "walletClient", "v4", "getContracts", "multiSourceLoanABI", "CONTRACT_DOMAIN_NAME", "structToSign", "id", "txHash", "receipt", "filter", "events", "filterLogs", "minId", "offerExecution", "tokenId", "offer", "lenderOfferSignature", "zeroAddress", "emitArgs", "mslEmitArgs", "args", "loan", "nftReceiver", "loanId", "receiver", "renegotiationId", "refinancings", "offers", "loans", "sources", "newAprBps", "index", "targetPrincipal", "principalAmount", "refinancingSource", "source", "refinancingPrincipalAmount", "sumBy", "getMslLoanId", "millisToSeconds", "SECONDS_IN_MIN", "signature", "executeRenegotiationTxn", "filterForeclosed", "filterSentToLiquidator", "foreclosedEvents", "sentToLiquidatorEvents", "__name", "encodeFunctionData", "MslV5", "BaseContract", "walletClient", "v5", "getContracts", "multiSourceLoanABI", "CONTRACT_DOMAIN_NAME", "structToSign", "id", "txHash", "receipt", "filter", "events", "filterLogs", "minId", "offerExecution", "tokenId", "expirationTime", "offer", "amount", "lenderOfferSignature", "millisToSeconds", "SECONDS_IN_DAY", "emitArgs", "mslEmitArgs", "args", "delegations", "emit", "encodedRevokeDelegations", "delegation", "encodeFunctionData", "encodedEmitLoan", "revokeFilter", "revokeEvents", "emitFilter", "emitEvents", "results", "emitLoanArgs", "loan", "loanId", "signableRepaymentData", "newestSource", "newestSourceDuration", "lockPeriodBps", "lockPercentage", "bpsToPercentage", "lockupTimeSeconds", "ellapsedSeconds", "renegotiationId", "refinancings", "data", "sources", "newAprBps", "index", "targetPrincipal", "principalAmount", "refinancingSource", "source", "refinancingPrincipalAmount", "sumBy", "getMslLoanId", "REORG_SAFETY_BUFFER", "getRemainingSeconds", "zeroHash", "signature", "executeRenegotiationTxn", "to", "rights", "enable", "collection", "filterForeclosed", "filterSentToLiquidator", "foreclosedEvents", "sentToLiquidatorEvents", "__name", "encodeFunctionData", "MslV6", "BaseContract", "walletClient", "v6", "getContracts", "multiSourceLoanAbi", "CONTRACT_DOMAIN_NAME", "structToSign", "id", "txHash", "receipt", "filter", "events", "filterLogs", "minId", "_", "offerExecution", "tokenId", "duration", "principalReceiver", "expirationTime", "offer", "amount", "rest", "millisToSeconds", "SECONDS_IN_DAY", "emitArgs", "mslEmitArgs", "args", "delegations", "emit", "encodedRevokeDelegations", "delegation", "encodeFunctionData", "encodedEmitLoan", "revokeFilter", "revokeEvents", "emitFilter", "emitEvents", "results", "emitLoanArgs", "loan", "loanId", "signableRepaymentData", "newestSource", "newestSourceDuration", "lockPeriodBps", "lockPercentage", "bpsToPercentage", "lockupTimeSeconds", "ellapsedSeconds", "loanEndDate", "endLockupSeconds", "secondsToMillis", "renegotiationId", "refinancings", "data", "sources", "newAprBps", "index", "trancheIndex", "source", "refinancingPrincipalAmount", "sumBy", "getMslLoanId", "REORG_SAFETY_BUFFER", "getRemainingSeconds", "zeroHash", "signature", "executionData", "executeRenegotiationTxn", "to", "rights", "enable", "collection", "filterForeclosed", "filterSentToLiquidator", "foreclosedEvents", "sentToLiquidatorEvents", "__name", "zeroAddress", "seaportABI", "Seaport", "BaseContract", "walletClient", "SeaportAddress", "getContracts", "seaportABI", "order", "domain", "types", "collectionContractAddress", "tokenId", "price", "expirationTime", "WETH_ADDRESS", "getCurrencies", "orderParameters", "zeroAddress", "millisToSeconds", "zeroHash", "signature", "nativeBid", "offer", "fulfillments", "_", "index", "orderComponents", "txHash", "receipt", "filter", "events", "filterLogs", "__name", "UserVaultV5", "BaseContract", "walletClient", "UserVault", "getContracts", "userVaultABI", "vaultId", "collections", "tokenIds", "tokens", "txHash", "receipt", "filter", "events", "filterLogs", "event", "nfts", "#mintVault", "receipts", "groupedNfts", "collection", "__name", "UserVaultV6", "BaseContract", "walletClient", "UserVault", "getContracts", "userVaultAbi", "vaultId", "collections", "tokenIds", "oldCollections", "oldTokenIds", "tokens", "txHash", "receipt", "filter", "events", "filterLogs", "oldFilter", "oldEvents", "event", "nfts", "#mintVault", "receipts", "groupedNfts", "collection", "isOldErc721", "__name", "Contracts", "publicClient", "walletClient", "MslV4", "MslV5", "MslV6", "AllV4", "AllV5", "AllV6", "UserVaultV5", "UserVaultV6", "LeverageV5", "Seaport", "CryptoPunks", "contractAddress", "areSameAddress", "nftAddress", "getContract", "erc721ABI", "oldErc721Abi", "erc20ABI", "__name", "MAX_NUMBER", "createClient", "createPublicClient", "encodeAbiParameters", "encodeFunctionData", "getContract", "http", "zeroAddress", "mainnet", "InterruptedSendTransactionStepError", "orderId", "to", "callbackData", "value", "__name", "InterruptedSeaportSendTransactionStepError", "signature", "InterruptedCryptoPunksSendTransactionStepError", "InterruptedGenericSendTransactionStepError", "adaptViemWallet", "decodeFunctionData", "zeroAddress", "isOpensea", "__name", "orderSource", "isCryptopunks", "isNative", "adaptWalletToCaptureTxData", "wallet", "exactOrderSource", "adaptViemWallet", "_chainId", "stepItem", "step", "MSL_V5_TX_HASH", "orderId", "to", "callbackData", "value", "firstArg", "decodeFunctionData", "seaportABI", "signature", "zeroAddress", "InterruptedSeaportSendTransactionStepError", "InterruptedCryptoPunksSendTransactionStepError", "InterruptedGenericSendTransactionStepError", "Reservoir", "baseApiUrl", "wallet", "Seaport", "CryptoPunks", "reservoirApiKey", "infuraApiKey", "getApiKeys", "createClient", "createPublicClient", "mainnet", "http", "orderId", "res", "orders", "price", "currencyAddress", "module", "data", "value", "encodeAbiParameters", "askOrBid", "signature", "side", "order", "inverseOrderParameters", "inverseOrder", "fulfillments", "matchOrdersCallbackData", "encodeFunctionData", "seaportABI", "total", "acc", "consid", "tokenId", "nftWithCriteriaIndex", "fulfillOrderCallbackData", "zeroHash", "zeroAddress", "tokensToBuy", "ETH_ADDRESS", "getCurrencies", "totalPrice", "cur", "token", "collectionContractAddress", "exactOrderSource", "adaptedWallet", "adaptWalletToCaptureTxData", "err", "InterruptedSeaportSendTransactionStepError", "apiOrder", "InterruptedCryptoPunksSendTransactionStepError", "callData", "InterruptedGenericSendTransactionStepError", "to", "callbackData", "WETH_ADDRESS", "LeverageAddress", "getContracts", "owner", "getContract", "erc721ABI", "isOpensea", "__name", "FULFILLED", "REJECTED", "Gondi", "wallet", "apiClient", "reservoirBaseApiUrl", "createPublicClient", "createTransport", "Contracts", "Api", "Reservoir", "offer", "mslContractAddress", "contract", "contractAddress", "offerInput", "zeroAddress", "response", "offerHash", "offerId", "validators", "lenderAddress", "signerAddress", "borrowerAddress", "collateralAddress", "structToSign", "signature", "signedOffer", "validator", "zeroHash", "zeroHex", "collectionContractAddress", "tokenId", "price", "expirationTime", "_totalOriginalConsiderationItems", "saleOffer", "id", "minId", "renegotiation", "skipSignature", "renegotiationInput", "renegotiationId", "loanId", "renegotiationOffer", "offers", "amounts", "idx", "args", "loan", "executionData", "loanToMslLoan", "nftReceiver", "limit", "cursor", "sortBy", "filterBy", "status", "nft", "collection", "borrower", "fields", "rest", "collections", "user", "marketPlaces", "props", "result", "pageInfo", "edge", "ownedNfts", "WETH_ADDRESS", "getCurrencies", "nftId", "bids", "bid", "NATIVE_MARKETPLACE", "areSameAddress", "generateFakeRenegotiationInput", "aprBpsImprovementPercentage", "refinancings", "refisByContract", "source", "refinancingPrincipal", "tokenLoanId", "version", "currentLoanRefinancings", "currentSourceNewAprBps", "newAprBps", "min", "versions", "results", "refinanceBatch", "FULFILLED", "reason", "REJECTED", "renegotiationToMslRenegotiation", "delegations", "delegation", "to", "enable", "rights", "emit", "auction", "tokensToBuy", "leverageBuyData", "data", "ethToSend", "acc", "value", "index", "dataForLeverageContract", "orderSource", "isNative", "bestNativeBid", "shouldDelegate", "nftAddress", "isOldErc721", "tokenApprovedFor", "erc721", "txHash", "receipt", "filter", "events", "filterLogs", "tokenAddress", "amount", "MAX_NUMBER", "erc20", "nfts", "userVaultAddress", "__name"]
}
